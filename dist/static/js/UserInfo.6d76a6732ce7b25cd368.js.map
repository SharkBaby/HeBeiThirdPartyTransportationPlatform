{"version":3,"sources":["webpack:///src/BaseInfo/RoleManagementForm/RoleManagementForm.vue","webpack:///./src/BaseInfo/RoleManagementForm/RoleManagementForm.vue?cfca","webpack:///./src/BaseInfo/RoleManagementForm/RoleManagementForm.vue","webpack:///src/BaseInfo/BaseInfoRouter/UserInfo.vue","webpack:///./src/BaseInfo/BaseInfoRouter/UserInfo.vue?624a","webpack:///./src/BaseInfo/BaseInfoRouter/UserInfo.vue"],"names":["RoleManagementForm","roleMgmtVisible","formTitle","_this","this","_this2","then","_","done","catch","checkedAccessArr","updateFormData","_iteratorNormalCompletion","checkedRowItem","_step","value","currentUserId","RoleId","isSelectedRole","RoleManagementForm_RoleManagementForm","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","dialogFormTitle","visible","isShowDialog","before-close","handleClose","on","update:visible","$event","ref","staticStyle","width","data","roleMgmtTabCtntList","TabCtnt","tooltip-effect","default-sort","prop","order","height","selection-change","handleSelectionChange","type","_v","_l","tabHeaderItem","tabHeaderKey","key","headerKey","label","headerVal","sortable","click","handleCancel","submitForm","staticRenderFns","BaseInfo_RoleManagementForm_RoleManagementForm","__webpack_require__","normalizeComponent","ssrContext","UserInfo","MultiLevelNoTabComponent","OperationUserInfoForm","UpdateCompanyForm","AddUserInfo","UpdateUserInfo","DeleteUser","updateUserLoginPass","exportCheckManageDataUrl","commonConfig","rootUrl","ExportCheckManageData","formPageParams","msg","searchCreteria","currentPage","isSplitPage","getUserBaseInfoUrlParams","response","DetailList","userInfoItem","userInfoSourceData","CountTotal","error","sybid","LoginCode","UserID","UnitID","LoginPass","NickName","UnitName","Tel","Fax","Email","Notes","GetCheckManageByZoneParams","_iteratorNormalCompletion2","msgItem","_step2","labelId","Name","UnitId","compId","name","unitId","pageSize","pageIndex","readPage","url","$message","getRoleToUserDataUrlParams","Code","Role","State","roleItem","_iteratorNormalCompletion3","formDataItem","_step3","formData","isVisible","_iteratorNormalCompletion4","_step4","compVal","_iteratorNormalCompletion5","_step5","postDeleteObj","postResetObj","SaveRoleToUserData","common","axiosPost","self","postRoleMgmtObj","_iteratorNormalCompletion6","_step6","breadNavs","BaseInfoRouter_UserInfo","tabCtntList","handleClickSearch","handleClickExpData","handleCurrentChange","handleEditBtn","handleAddEvent","handleRowClick","handleDeleteBtn","handleInitpwdBtn","handleRoleMgmtBtn","updateCompanyFormVisible","addUserInfoVisible","handlUpdateForm","handleAddCancelSubmitEvent","updateUserInfoVisible","formUpdateTitle","handleUpdateCancelSubmitEvent","deleteUserInfoVisible","formDeleteTitle","handleDeleteCancelSubmitEvent","resetUserInfoVisible","formResetTitle","handleResetCancelSubmitEvent","formRoleMgmtTitle","defaultCheckedRoles","handleRoleMgmtCancelSubmitEvent","UserInfo_Component","UserInfo_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/UserInfo.6d76a6732ce7b25cd368.js","sourcesContent":["<template>\r\n  <el-dialog\r\n  :title=\"dialogFormTitle\"\r\n  :visible.sync=\"isShowDialog\"\r\n  :before-close=\"handleClose\"\r\n  class=\"role-management-dialog-class\">\r\n  <el-table \r\n    ref=\"checkboxRoleTable\"\r\n    :data=\"roleMgmtTabCtntList.TabCtnt\"\r\n    tooltip-effect=\"dark\"\r\n    style=\"width: 100%\" \r\n    :default-sort=\"{prop: 'date', order: 'descending'}\"\r\n    height=\"400\"\r\n    @selection-change=\"handleSelectionChange\">\r\n    <el-table-column\r\n      type=\"selection\"\r\n      width=\"55\">\r\n    </el-table-column>\r\n    <el-table-column :prop=\"tabHeaderItem.headerKey\" :label=\"tabHeaderItem.headerVal\" sortable v-for=\"(tabHeaderItem,tabHeaderKey) in roleMgmtTabCtntList.tabHeader\" :key=\"tabHeaderKey\">\r\n    </el-table-column>\r\n  </el-table>\r\n  <div class=\"role-management-dialog-btn\">\r\n    <el-button @click=\"handleCancel\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"submitForm()\" class=\"submitBtn\">提交</el-button>\r\n  </div>\r\n  </el-dialog>\r\n</template>\r\n<style src=\"./roleManagementForm.css\" type=\"text/css\">\r\n</style>\r\n<script>\r\nexport default {\r\n  name: 'RoleManagementForm',\r\n  props: ['roleMgmtVisible', 'formTitle', 'roleMgmtTabCtntList', 'currentUserId', 'defaultCheckedRoles'],\r\n  data () {\r\n    return {\r\n      checkedAccessArr: [],\r\n    }\r\n  },\r\n  computed: {\r\n    isShowDialog: {\r\n      get: function(){\r\n        return this.roleMgmtVisible\r\n      },\r\n      set: function(isShowDialog){\r\n      }\r\n    },\r\n    dialogFormTitle: {\r\n      get: function(){\r\n        return this.formTitle\r\n      },\r\n      set: function(dialogFormTitle){\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    defaultCheckedRoles: function(val){\r\n      let self = this;\r\n      // 经过一个上午的艰苦尝试，终于通过以下方式来将默认选项勾选上，\r\n      // 设计思路：需要将table加载完成再去勾选默认选项\r\n      setTimeout(()=>{\r\n        val.forEach(rowItem => {\r\n          this.$refs.checkboxRoleTable.toggleRowSelection(rowItem, true);\r\n        });\r\n      }, 500)\r\n    }\r\n  },\r\n  methods:{\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？')\r\n        .then(_ => {\r\n          done();\r\n          const updateFormData = {\r\n            isVisible: false,\r\n            actionType: 'Cancel',\r\n          }\r\n          this.$emit('handlUpdateForm', updateFormData);\r\n        })\r\n        .catch(_ => {});\r\n    },\r\n    // handle form submit event,pass the props to parent component\r\n    submitForm(argument){\r\n        const updateFormData = {\r\n          isVisible: false,\r\n          actionType: 'Submit',\r\n          checkedAccessArr: this.checkedAccessArr\r\n        }\r\n        this.$emit('handlUpdateForm', updateFormData);\r\n    },\r\n    handleCancel: function(){\r\n      const updateFormData = {\r\n        isVisible: false,\r\n        actionType: 'Cancel',\r\n        checkedAccessArr: []\r\n      }\r\n      this.$emit('handlUpdateForm', false);\r\n    },\r\n    // 每一次勾选都会触发这个函数，返回的是最新的所有勾选的函数\r\n    handleSelectionChange(val) {\r\n      /**\r\n       * Code: roleResponse.Code,\r\n        Name: roleResponse.Name,\r\n        Role: roleResponse.Role,\r\n        RoleId: roleResponse.RoleId,\r\n        State: roleResponse.State\r\n       */\r\n      this.checkedAccessArr = [];\r\n     for(let checkedRowItem of val){\r\n       this.checkedAccessArr.push({\r\n          UserId: this.currentUserId,\r\n          RoleId: checkedRowItem.RoleId\r\n       });\r\n     }\r\n    },\r\n    isSelectedRole: function(row, index){\r\n      return row.isSelectedRole;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/BaseInfo/RoleManagementForm/RoleManagementForm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{staticClass:\"role-management-dialog-class\",attrs:{\"title\":_vm.dialogFormTitle,\"visible\":_vm.isShowDialog,\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.isShowDialog=$event}}},[_c('el-table',{ref:\"checkboxRoleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.roleMgmtTabCtntList.TabCtnt,\"tooltip-effect\":\"dark\",\"default-sort\":{prop: 'date', order: 'descending'},\"height\":\"400\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"55\"}}),_vm._v(\" \"),_vm._l((_vm.roleMgmtTabCtntList.tabHeader),function(tabHeaderItem,tabHeaderKey){return _c('el-table-column',{key:tabHeaderKey,attrs:{\"prop\":tabHeaderItem.headerKey,\"label\":tabHeaderItem.headerVal,\"sortable\":\"\"}})})],2),_vm._v(\" \"),_c('div',{staticClass:\"role-management-dialog-btn\"},[_c('el-button',{on:{\"click\":_vm.handleCancel}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"submitBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm()}}},[_vm._v(\"提交\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a9c772f0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/BaseInfo/RoleManagementForm/RoleManagementForm.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a9c772f0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./roleManagementForm.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RoleManagementForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RoleManagementForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a9c772f0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./RoleManagementForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/BaseInfo/RoleManagementForm/RoleManagementForm.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"user-info\">\r\n    <multi-level-no-tab-component\r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"user-info-multilevel\" \r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"\r\n    v-on:handleEditBtn=\"handleEditBtn\"\r\n    v-on:handleAddEvent=\"handleAddEvent\"\r\n    v-on:handleRowClick=\"handleRowClick\"\r\n    v-on:handleDeleteBtn=\"handleDeleteBtn\"\r\n    v-on:handleInitpwdBtn=\"handleInitpwdBtn\"\r\n    v-on:handleRoleMgmtBtn=\"handleRoleMgmtBtn\"\r\n    ></multi-level-no-tab-component>\r\n    <operation-user-info-form :updateCompanyFormVisible=\"addUserInfoVisible\" v-on:handlUpdateForm=\"handleAddCancelSubmitEvent\" :formData=\"formData\" :formTitle=\"formTitle\"></operation-user-info-form>\r\n    <operation-user-info-form :updateCompanyFormVisible=\"updateUserInfoVisible\" v-on:handlUpdateForm=\"handleUpdateCancelSubmitEvent\" :formData=\"formData\" :formTitle=\"formUpdateTitle\"></operation-user-info-form>\r\n    <operation-user-info-form :updateCompanyFormVisible=\"deleteUserInfoVisible\" v-on:handlUpdateForm=\"handleDeleteCancelSubmitEvent\" :formTitle=\"formDeleteTitle\"></operation-user-info-form>\r\n    <operation-user-info-form :updateCompanyFormVisible=\"resetUserInfoVisible\" v-on:handlUpdateForm=\"handleResetCancelSubmitEvent\" :formTitle=\"formResetTitle\"></operation-user-info-form>\r\n    <!-- 展示角色配置 -->\r\n    <role-management-form \r\n    :roleMgmtVisible=\"roleMgmtVisible\" \r\n    :formTitle=\"formRoleMgmtTitle\"\r\n    :currentUserId=\"currentUserId\"\r\n    :roleMgmtTabCtntList=\"roleMgmtTabCtntList\"\r\n    v-on:handlUpdateForm=\"handleRoleMgmtCancelSubmitEvent\"\r\n    :defaultCheckedRoles=\"defaultCheckedRoles\"></role-management-form>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./baseInfoRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelNoTabComponent from \"@/components/MultiLevelNoTabComponent/MultiLevelNoTabComponent\";\r\nimport OperationUserInfoForm from \"@/BaseInfo/UpdateCompanyForm/UpdateCompanyForm\";\r\nimport RoleManagementForm from '@/BaseInfo/RoleManagementForm/RoleManagementForm';\r\nimport { axiosRequest, getLastMonth, getLastDay,isNullUndefEmpty, storageOperation, handleErrorMsg } from \"@/common/common\";\r\nimport {\r\n  commonConfig,\r\n  reportLabelId,\r\n  provinceVal\r\n} from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"UserInfo\",\r\n  components: {\r\n    MultiLevelNoTabComponent,\r\n    OperationUserInfoForm,\r\n    RoleManagementForm\r\n  },\r\n  data() {\r\n    return {\r\n      getUserBaseInfoUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.GetUserBaseInfo, //用户管理\r\n      getRoleToUserDataUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.GetRoleToUserData, //获取权限配置\r\n      // 增加按钮需要的数据信息\r\n      postAddObj: {\r\n        params: {\r\n          LoginCode: \"\",\r\n          NickName: \"\",\r\n          UnitId: \"\",\r\n          Tel: \"\",\r\n          Fax: \"\",\r\n          Email: \"\",\r\n          Notes: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.AddUserInfo\r\n      },\r\n      //用户管理 - 修改用户基本信息\r\n      postUpdateObj: {\r\n        params: {\r\n          LoginCode: \"\",\r\n          NickName: \"\",\r\n          UnitId: \"\",\r\n          Tel: \"\",\r\n          Fax: \"\",\r\n          Email: \"\",\r\n          Notes: \"\",\r\n          UserID: \"\",\r\n          LoginPass: \"\",\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.UpdateUserInfo\r\n      },\r\n      postDeleteObj: { //用户管理 - 删除\r\n        params: {\r\n          userId: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.DeleteUser\r\n      },\r\n      postResetObj: { //用户管理 - 重置密码\r\n        params: {\r\n          userId: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.updateUserLoginPass\r\n      },\r\n\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一大列的满分得分\r\n      columnFullScore: {\r\n        rwl: 5,\r\n        sxl: 10,\r\n        wxpyl: 15,\r\n        gjwzl: 40,\r\n        sjhgl: 30,\r\n        pjcscs: 0,\r\n        pjpjsc: 0\r\n      },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      userInfoSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // 初始状态下隐藏增加用户管理信息\r\n      addUserInfoVisible: false,\r\n      // 初始状态下隐藏修改用户管理信息\r\n      updateUserInfoVisible: false,\r\n      // 初始状态下隐藏删除用户管理信息\r\n      deleteUserInfoVisible: false,\r\n      // 初始状态下隐藏重置用户管理信息\r\n      resetUserInfoVisible: false,\r\n      // 初始状态下隐藏角色配置信息\r\n      roleMgmtVisible: false,\r\n      // 增加用户管理信息表单\r\n      formData: [\r\n        {\r\n          headerKey: \"LoginCode\",\r\n          headerVal: \"用户名\",\r\n          isReadOnly: true, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"NickName\",\r\n          headerVal: \"昵称\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"UnitId\",\r\n          headerVal: \"运营机构\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'preSearch',\r\n          compVal: \"\",\r\n          compId: \"\"\r\n        },\r\n        {\r\n          headerKey: \"Tel\",\r\n          headerVal: \"电话\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"Fax\",\r\n          headerVal: \"传真\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"Email\",\r\n          headerVal: \"邮件\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"Notes\",\r\n          headerVal: \"备注\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        }\r\n      ],\r\n      formTitle: \"增加用户管理信息\",\r\n      formUpdateTitle: \"修改用户管理信息\",//该字段不能随意改动，因为修改的表单会通过这个字段进行识别当前表单是修改表单，某些字段是只读不能修改的\r\n      formDeleteTitle: '你确定要删除该用户吗？',\r\n      formResetTitle: '你确定要为该用户初始化密码吗？',\r\n      formRoleMgmtTitle: '角色配置: ',\r\n      // 标记选择了某一行的状态\r\n      isSelectedRow: false,\r\n      roleMgmtTabCtntList: {\r\n        tabHeader: [\r\n          {\r\n            headerKey: \"Name\",\r\n            headerVal: \"角色名称\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Code\",\r\n            headerVal: \"角色代码\",\r\n            subHeaders: []\r\n          }],\r\n        TabCtnt: []\r\n      },\r\n      // 记住当前选择的行的userId为角色配置做准备\r\n      currentUserId: '',\r\n      // 默认已经勾选的角色\r\n      defaultCheckedRoles: []\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return {\r\n        currentPage: 1, //当前页数\r\n        total: 0, //总条数\r\n        loading: false,\r\n        btnEvents: [\r\n          {\r\n            iconName: \"el-icon-search\",\r\n            btnId: commonConfig.btnEventsId.search, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"查询\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_yhgl_cx', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-circle-plus-outline\",\r\n            btnId: commonConfig.btnEventsId.add, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"增加\",\r\n            isDisabled: false, //控制导出数据按钮初始状态为disabled\r\n            ctrlId: 'jbxx_yhgl_zj', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-edit\",\r\n            btnId: commonConfig.btnEventsId.edit, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"修改\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_yhgl_xg', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-delete\",\r\n            btnId: commonConfig.btnEventsId.delete, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"删除\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_yhgl_sc', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-refresh\",\r\n            btnId: commonConfig.btnEventsId.initpwd, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"初始化密码\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_yhgl_cshmm', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-setting\",\r\n            btnId: commonConfig.btnEventsId.rolemgmnt, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"角色配置\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_yhgl_jspz', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          }\r\n        ],\r\n        searchCreteria: [\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"用户名\",\r\n            labelId: reportLabelId.Name, //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"\"\r\n          },\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"运营机构\",\r\n            labelId: reportLabelId.UnitId, //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"\",\r\n            compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n          }\r\n        ],\r\n        tabHeader: [\r\n          {\r\n            headerKey: \"sybid\",\r\n            headerVal: \"序号\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"LoginCode\",\r\n            headerVal: \"用户名\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"NickName\",\r\n            headerVal: \"昵称\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"UnitName\",\r\n            headerVal: \"运营机构\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Tel\",\r\n            headerVal: \"电话\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Fax\",\r\n            headerVal: \"传真\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Email\",\r\n            headerVal: \"邮件\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Notes\",\r\n            headerVal: \"备注\",\r\n            subHeaders: []\r\n          }\r\n        ],\r\n        TabCtnt: []\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    //处理子组件触发的查询事件\r\n    handleClickSearch: function(msg) {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_cx'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      this.isSelectedRow = false; //清除选中某一行的数据\r\n      // 封装函数来组装每一页请求的参数\r\n      const getUserBaseInfoUrlParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList.loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.userInfoSourceData = [];\r\n      axiosRequest.axiosGet(this.getUserBaseInfoUrl, getUserBaseInfoUrlParams)\r\n        .then(function(response) {\r\n          const userInfoRankTemp = response.data.DetailList;\r\n          for (let userInfoItem of userInfoRankTemp) {\r\n            self.userInfoSourceData.push(self.pushSourceData(userInfoItem));\r\n          }\r\n          // 加上合计这一行\r\n          // self.countData = self.pushSourceData(response.data.TotalList);\r\n          self.tabCtntList.TabCtnt = self.userInfoSourceData;\r\n          // self.tabCtntList.TabCtnt.push(self.countData);\r\n          self.tabCtntList.total = response.data.CountTotal;\r\n          self.tabCtntList.loading = false;\r\n          self.tabCtntList.btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(userInfoItem) {\r\n      return {\r\n        sybid: userInfoItem.sybid,\r\n        LoginCode: userInfoItem.LoginCode,\r\n        // 该字段是修改按钮需要使用\r\n        UserID: userInfoItem.UserID,\r\n        UnitID: userInfoItem.UnitID,\r\n        LoginPass: userInfoItem.LoginPass,\r\n\r\n        NickName: userInfoItem.NickName,\r\n        UnitName: userInfoItem.UnitName,\r\n        Tel: userInfoItem.Tel,\r\n        Fax: userInfoItem.Fax,\r\n        Email: userInfoItem.Email,\r\n        Notes: userInfoItem.Notes\r\n      };\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      self.tabCtntList.loading = true; //下载数据的时候，显示正在下载数据的logo\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      axiosRequest.axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList.loading = false;\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n    },\r\n    formPageParams: function(msg, pageIndex, isSplitPage) {\r\n      let unitId = \"\",\r\n        name = \"\",\r\n        pageSize = 10,\r\n        readPage = \"\";\r\n      //统一为每一种类型赋值，而不需要单独判断\r\n      for (let msgItem of msg) {\r\n        switch (msgItem.labelId) {\r\n          case reportLabelId.Name:\r\n            name = msgItem.compVal || null;\r\n            break;\r\n          case reportLabelId.UnitId:\r\n            unitId = msgItem.compId;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n      return {\r\n        name,\r\n        unitId,\r\n\r\n        pageSize,\r\n        pageIndex,\r\n        isSplitPage,\r\n        readPage\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    },\r\n    handleEditBtn: function(msg) {\r\n      if (this.isSelectedRow) this.updateUserInfoVisible = msg;\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    handleDeleteBtn: function(msg){\r\n      if (this.isSelectedRow) this.deleteUserInfoVisible = msg;\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    handleInitpwdBtn: function(msg){\r\n      if (this.isSelectedRow) this.resetUserInfoVisible = msg;\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    handleRoleMgmtBtn: function(msg){\r\n      let self = this;\r\n      if (this.isSelectedRow){\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_jspz'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        const getRoleToUserDataUrlParams = {\r\n           userId : this.currentUserId,\r\n         }\r\n        axiosRequest.axiosGet(this.getRoleToUserDataUrl, getRoleToUserDataUrlParams)\r\n        .then(function(response) {\r\n          const roleResponse = response.data;\r\n          self.roleMgmtTabCtntList.TabCtnt = [];\r\n          self.defaultCheckedRoles = [];\r\n          for(let roleItem in roleResponse){\r\n            let isSelectedRole = false;\r\n            if(!isNullUndefEmpty(roleResponse[roleItem].Role)) {\r\n              isSelectedRole = true;\r\n            }\r\n            self.roleMgmtTabCtntList.TabCtnt.push({\r\n              Code: roleResponse[roleItem].Code,\r\n              Name: roleResponse[roleItem].Name,\r\n              Role: roleResponse[roleItem].Role,\r\n              RoleId: roleResponse[roleItem].RoleId,\r\n              State: roleResponse[roleItem].State,\r\n              // 是否勾选checkbox\r\n              isSelectedRole: isSelectedRole\r\n            })\r\n            if(!isNullUndefEmpty(roleResponse[roleItem].Role)) self.defaultCheckedRoles.push(self.roleMgmtTabCtntList.TabCtnt[roleItem]);\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n        this.roleMgmtVisible = msg;\r\n      }\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    handleAddEvent: function(msg) {\r\n      this.addUserInfoVisible = msg;\r\n      for (let formDataItem of this.formData) {\r\n          switch(formDataItem.headerKey){\r\n            case \"LoginCode\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            case \"NickName\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            case \"UnitId\":\r\n            formDataItem.compVal = \"\";\r\n            formDataItem.compId = \"\"; //注意还需要去掉这个下拉框的隐藏值\r\n            break;\r\n            case \"Tel\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            case \"Fax\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            case \"Email\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            case \"Notes\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n            default:\r\n          }\r\n        }\r\n        console.log(this.formData)\r\n    },\r\n    // 处理子组件提交的修改数据的请求\r\n    handleAddCancelSubmitEvent: function(msg) {\r\n      let self = this;\r\n      this.addUserInfoVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_zj'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        for (let msgItem of msg.formColumnNames) {\r\n          switch (msgItem.headerKey) {\r\n            case \"LoginCode\":\r\n              self.postAddObj.params.LoginCode = msgItem.compVal;\r\n              break;\r\n            case \"NickName\":\r\n              self.postAddObj.params.NickName = msgItem.compVal;\r\n              break;\r\n            case \"UnitId\":\r\n              self.postAddObj.params.UnitId = msgItem.compId; //注：在增加用户信息的时候，运营机构需要使用Id值\r\n              break;\r\n            case \"Tel\":\r\n              self.postAddObj.params.Tel = msgItem.compVal;\r\n              break;\r\n            case \"Fax\":\r\n              self.postAddObj.params.Fax = msgItem.compVal;\r\n              break;\r\n            case \"Email\":\r\n              self.postAddObj.params.Email = msgItem.compVal;\r\n              break;\r\n            case \"Notes\":\r\n              self.postAddObj.params.Notes = msgItem.compVal;\r\n              break;\r\n            default:\r\n          }\r\n        }\r\n        axiosRequest.axiosPost(self.postAddObj).then(function(response){\r\n          if (response.data === 0) {\r\n              self.$message({\r\n                message: \"恭喜你，增加用户信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.addUserInfoVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n              // 将页码设置为1\r\n              self.tabCtntList.currentPage = 1;\r\n            } else if(response.data === -1){\r\n              self.addUserInfoVisible = true;\r\n              self.$message.error(\"用户名已存在，请重新添加\");\r\n            }else {\r\n              self.addUserInfoVisible = true;\r\n              self.$message.error(\"错了哦，增加用户信息失败\");\r\n            }\r\n        })\r\n        .catch(function(error){\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n      }\r\n    },\r\n    handleUpdateCancelSubmitEvent: function(msg) {\r\n      let self = this;\r\n      this.updateUserInfoVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_xg'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        for (let msgItem of msg.formColumnNames) {\r\n          switch (msgItem.headerKey) {\r\n            case \"LoginCode\":\r\n              self.postUpdateObj.params.LoginCode = msgItem.compVal;\r\n              break;\r\n            case \"NickName\":\r\n              self.postUpdateObj.params.NickName = msgItem.compVal;\r\n              break;\r\n            case \"UnitId\":\r\n              self.postUpdateObj.params.UnitId = msgItem.compId; //注：在修改用户信息的时候，运营机构需要使用Id值\r\n              break;\r\n            case \"Tel\":\r\n              self.postUpdateObj.params.Tel = msgItem.compVal;\r\n              break;\r\n            case \"Fax\":\r\n              self.postUpdateObj.params.Fax = msgItem.compVal;\r\n              break;\r\n            case \"Email\":\r\n              self.postUpdateObj.params.Email = msgItem.compVal;\r\n              break;\r\n            case \"Notes\":\r\n              self.postUpdateObj.params.Notes = msgItem.compVal;\r\n              break;\r\n            default:\r\n          }\r\n        }\r\n        axiosRequest.axiosPost(self.postUpdateObj).then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，修改用户信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.updateUserInfoVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n              // 将页码设置为1\r\n              self.tabCtntList.currentPage = 1;\r\n            } else {\r\n              self.updateUserInfoVisible = true;\r\n              self.$message.error(\"错了哦，修改用户信息失败\");\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleDeleteCancelSubmitEvent: function(msg){\r\n      let self = this;\r\n      this.deleteUserInfoVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_sc'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        axiosRequest.axiosPost(self.postDeleteObj)\r\n          .then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，删除用户信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.deleteUserInfoVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n              // 将页码设置为1\r\n              self.tabCtntList.currentPage = 1;\r\n            } else {\r\n              self.deleteUserInfoVisible =true;\r\n              self.$message.error(\"错了哦，删除用户信息失败\");\r\n            }\r\n          })\r\n          .catch(function(error) {});\r\n      }\r\n    },\r\n    handleResetCancelSubmitEvent: function(msg){\r\n      let self = this;\r\n      this.resetUserInfoVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_cshmm'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        axiosRequest.axiosPost(self.postResetObj)\r\n          .then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，重置信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.resetUserInfoVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n              // 将页码设置为1\r\n              self.tabCtntList.currentPage = 1;\r\n            } else {\r\n              self.resetUserInfoVisible = true;\r\n              self.$message.error(\"错了哦，重置信息失败\");\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleRoleMgmtCancelSubmitEvent: function(msg){\r\n      let self = this;\r\n      this.roleMgmtVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        storageOperation.setItem(commonConfig.ctrlId, 'jbxx_yhgl_jspz'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        this.postRoleMgmtObj = {\r\n          params: {\r\n            list: JSON.stringify(msg.checkedAccessArr),\r\n            userId: self.currentUserId\r\n          },\r\n          postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.SaveRoleToUserData\r\n        },\r\n        axiosRequest.axiosPost(self.postRoleMgmtObj)\r\n          .then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，修改角色配置信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.roleMgmtVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n              // 将页码设置为1\r\n              self.tabCtntList.currentPage = 1;\r\n            } else {\r\n              self.$message.error(\"错了哦，修改角色配置信息失败\");\r\n              self.roleMgmtVisible = true;\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleRowClick: function(msg) {\r\n      this.isSelectedRow = true;\r\n      this.postUpdateObj.params.UnitId = msg.UnitID;\r\n      // 设置修改信息的默认值\r\n      for (let formDataItem of this.formData) {\r\n        switch (formDataItem.headerKey) {\r\n          case \"LoginCode\":\r\n            formDataItem.compVal = msg.LoginCode;\r\n            break;\r\n          case \"NickName\":\r\n            formDataItem.compVal = msg.NickName;\r\n            break;\r\n          case \"UnitId\":\r\n            formDataItem.compVal = msg.UnitName;\r\n            formDataItem.compId = msg.UnitID;\r\n            break;\r\n          case \"Tel\":\r\n            formDataItem.compVal = msg.Tel;\r\n            break;\r\n          case \"Fax\":\r\n            formDataItem.compVal = msg.Fax;\r\n            break;\r\n          case \"Email\":\r\n            formDataItem.compVal = msg.Email;\r\n            break;\r\n          case \"Notes\":\r\n            formDataItem.compVal = msg.Notes;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n      // 由于下面的字段属于隐藏字段，需要单独为其赋值\r\n      this.postUpdateObj.params.UserID = msg.UserID;\r\n      this.postUpdateObj.params.LoginPass = msg.LoginPass;\r\n      \r\n      this.postDeleteObj.params.userId = msg.UserID; //删除情况的UserID\r\n      this.postResetObj.params.userId = msg.UserID; //初始化密码的UserID\r\n      // 为角色配置的表名增加用户名的名字\r\n      this.formRoleMgmtTitle = '角色配置: ';\r\n      this.formRoleMgmtTitle += msg.LoginCode;\r\n      this.currentUserId = msg.UserID;\r\n    },\r\n  },\r\n  beforeMount: function() {\r\n    const breadNavs = JSON.parse(storageOperation.getItem(\"breadNavs\"));\r\n    this.$emit(\"viewIn\", breadNavs);\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/BaseInfo/BaseInfoRouter/UserInfo.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"user-info\"},[_c('multi-level-no-tab-component',{staticClass:\"user-info-multilevel\",attrs:{\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange,\"handleEditBtn\":_vm.handleEditBtn,\"handleAddEvent\":_vm.handleAddEvent,\"handleRowClick\":_vm.handleRowClick,\"handleDeleteBtn\":_vm.handleDeleteBtn,\"handleInitpwdBtn\":_vm.handleInitpwdBtn,\"handleRoleMgmtBtn\":_vm.handleRoleMgmtBtn}}),_vm._v(\" \"),_c('operation-user-info-form',{attrs:{\"updateCompanyFormVisible\":_vm.addUserInfoVisible,\"formData\":_vm.formData,\"formTitle\":_vm.formTitle},on:{\"handlUpdateForm\":_vm.handleAddCancelSubmitEvent}}),_vm._v(\" \"),_c('operation-user-info-form',{attrs:{\"updateCompanyFormVisible\":_vm.updateUserInfoVisible,\"formData\":_vm.formData,\"formTitle\":_vm.formUpdateTitle},on:{\"handlUpdateForm\":_vm.handleUpdateCancelSubmitEvent}}),_vm._v(\" \"),_c('operation-user-info-form',{attrs:{\"updateCompanyFormVisible\":_vm.deleteUserInfoVisible,\"formTitle\":_vm.formDeleteTitle},on:{\"handlUpdateForm\":_vm.handleDeleteCancelSubmitEvent}}),_vm._v(\" \"),_c('operation-user-info-form',{attrs:{\"updateCompanyFormVisible\":_vm.resetUserInfoVisible,\"formTitle\":_vm.formResetTitle},on:{\"handlUpdateForm\":_vm.handleResetCancelSubmitEvent}}),_vm._v(\" \"),_c('role-management-form',{attrs:{\"roleMgmtVisible\":_vm.roleMgmtVisible,\"formTitle\":_vm.formRoleMgmtTitle,\"currentUserId\":_vm.currentUserId,\"roleMgmtTabCtntList\":_vm.roleMgmtTabCtntList,\"defaultCheckedRoles\":_vm.defaultCheckedRoles},on:{\"handlUpdateForm\":_vm.handleRoleMgmtCancelSubmitEvent}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d6967a1\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/BaseInfo/BaseInfoRouter/UserInfo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d6967a1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./baseInfoRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./UserInfo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./UserInfo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d6967a1\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./UserInfo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/BaseInfo/BaseInfoRouter/UserInfo.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}