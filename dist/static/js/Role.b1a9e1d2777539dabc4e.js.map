{"version":3,"sources":["webpack:///src/BaseInfo/AccessManagementForm/AccessManagementForm.vue","webpack:///./src/BaseInfo/AccessManagementForm/AccessManagementForm.vue?1865","webpack:///./src/BaseInfo/AccessManagementForm/AccessManagementForm.vue","webpack:///src/BaseInfo/BaseInfoRouter/Role.vue","webpack:///./src/BaseInfo/BaseInfoRouter/Role.vue?f98f","webpack:///./src/BaseInfo/BaseInfoRouter/Role.vue"],"names":["AccessManagementForm","formTitle","treeOps","accessMgmtVisible","val","_this","this","then","_","done","catch","checkedAccessArr","updateFormData","_iteratorNormalCompletion","nodeItem","_step","value","toString","menu","AccessManagementForm_AccessManagementForm","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","updatePwd","visible","isShowDialog","width","before-close","handleClose","on","update:visible","$event","ref","data","treeOptions","show-checkbox","default-expand-all","node-key","highlight-current","props","treeChkboxProps","default-checked-keys","defCheckedKeys","check-strictly","check","handleCheckChange","_v","click","handleCancel","directives","name","rawName","accessId","expression","type","submitForm","staticRenderFns","BaseInfo_AccessManagementForm_AccessManagementForm","__webpack_require__","normalizeComponent","ssrContext","Role","MultiLevelNoTabComponent","OperationRoleForm","UpdateCompanyForm","AddRoleInfo","UpdateRoleInfo","DeleteRoleInfo","exportCheckManageDataUrl","commonConfig","rootUrl","ExportCheckManageData","formPageParams","msg","searchCreteria","currentPage","isSplitPage","getRoleInfoUrlParams","response","roleItem","roleSourceData","CountTotal","error","Name","RoleId","Code","stateTemp","Comm","common","axiosGet","GetCheckManageByZoneParams","msgItem","labelId","RoleName","compVal","RoleCode","pageSize","pageIndex","readPage","url","_iteratorNormalCompletion2","formDataItem","_step2","headerKey","$message","currentRoleId","getMenuTreeDataUrlParams","chkAccessMgmtceArr","defaultCheckedKeys","isVisible","_iteratorNormalCompletion3","_step3","_iteratorNormalCompletion4","_step4","axiosPost","self","postDeleteObj","SaveRightData","postSaveRightObj","getUserData","UnitID","_iteratorNormalCompletion5","_step5","State","LoginID","getUserDataUrlParams","breadNavs","BaseInfoRouter_Role","tabCtntList","handleClickSearch","handleClickExpData","handleCurrentChange","handleEditBtn","handleAddEvent","handleRowClick","handleDeleteBtn","handleAccessmgmntBtn","updateCompanyFormVisible","addRoleVisible","formData","handlUpdateForm","handleAddCancelSubmitEvent","updateRoleVisible","formUpdateTitle","handleUpdateCancelSubmitEvent","deleteRoleVisible","formDeleteTitle","handleDeleteCancelSubmitEvent","formAccessmgmntTitle","handleAccessMgmtSubmitEvent","Role_Component","Role_normalizeComponent","__webpack_exports__"],"mappings":"mMA2BAA,QAEA,oGACA,uDAGAC,2BACAC,wHAQAC,mFAQAC,sDAKAA,qCAIA,IAAAC,EAAAC,mBACA,SAAAC,KAAA,SAAAC,GAEAC,0CAEA,aAEA,aAEAC,MAAA,SAAAF,gDAMA,aACA,+BAEAG,+CACAC,0DAQA,yJASAC,GAAA,oEAEA,IAAAC,EAAAC,EAAAC,sBAEA,4BACAC,mCACAA,qBACA,OACA,QAEA,yFAEAC,KCxGAC,GADiBC,OAFjB,WAA0B,IAAAC,EAAAf,KAAagB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,aAAuBE,YAAA,iCAAAC,OAAoDC,MAAAP,EAAAQ,UAAAC,QAAAT,EAAAU,aAAAC,MAAA,MAAAC,eAAAZ,EAAAa,aAA8FC,IAAKC,iBAAA,SAAAC,GAAkChB,EAAAU,aAAAM,MAA0Bb,EAAA,WAAgBc,IAAA,OAAAX,OAAkBY,KAAAlB,EAAAmB,YAAAC,gBAAA,GAAAC,qBAAA,GAAAC,WAAA,SAAAC,oBAAA,GAAAC,MAAAxB,EAAAyB,gBAAAC,uBAAA1B,EAAA2B,eAAAC,iBAAA,IAAuMd,IAAKe,MAAA7B,EAAA8B,qBAA+B9B,EAAA+B,GAAA,KAAA5B,EAAA,OAAwBE,YAAA,iCAA2CF,EAAA,aAAkBW,IAAIkB,MAAAhC,EAAAiC,gBAA0BjC,EAAA+B,GAAA,SAAA/B,EAAA+B,GAAA,KAAA5B,EAAA,aAA8C+B,aAAaC,KAAA,YAAAC,QAAA,cAAAzC,OAA+C0C,SAAA,kBAA2BC,WAAA,iCAA4CjC,YAAA,YAAAC,OAAiCiC,KAAA,WAAiBzB,IAAKkB,MAAA,SAAAhB,GAAyBhB,EAAAwC,iBAAmBxC,EAAA+B,GAAA,iBAEt8BU,oBCCjB,IAuBAC,EAvBAC,EAAA,OAcAC,CACAjE,EACAmB,GATA,EAVA,SAAA+C,GACAF,EAAA,SAaA,KAEA,MAUA,gCCQAG,QAEA,mBAEAC,2BAAA,EACAC,kBAAAC,EAAA,EAEAtE,qBAAA+D,4NAUA,QACA,SACA,QAEA,wCAEAQ,2CAKA,QACA,QACA,SACA,QAEA,wCAEAC,8CAKA,wCAEAC,gBACAC,yBAAAC,EAAA,EAAAC,QAAAD,EAAA,EACAE,2CAGA,MACA,SACA,SACA,SACA,UACA,SAEA,oBAGA,mBAEA,8DAMA,qBAEA,qBAEA,qBAEA,uBAIA,iBACA,gCAEA,gBAEA,eAEA,iBACA,gCAEA,gBAEA,eAEA,kBACA,gCAEA,iBACA,kBAGA,QAEA,aAEA,QAIA,mBAEA,iBACA,8BAEA,gBAGA,eACA,sDAEA,mCACA,sBAEA,gBAEA,2DAIA,gBAGA,qFAOA,uBAGA,sDAEA,oDAKA,gEAEA,oDAKA,kDAEA,oDAKA,sDAEA,oDAKA,4DAEA,2EAOA,kBACA,oCAGA,gBAEA,kBACA,oCAIA,2BAGA,kBACA,+BAIA,iBACA,iCAIA,iBACA,iCAIA,kBACA,iCAIA,iBACA,gFAWAvE,oDAGAwE,eAAAC,EACAC,eAAAD,EACAE,YAAAF,EAEAG,2FAIAC,GAAA5E,KAAA,SAAA6E,0EAiBA,MAfA,SAEA7C,2EAEA8C,4BAIA,0BACAC,0CAEAC,uDAMA7E,MAAA,SAAA8E,gCAEAA,0CAKA,oBACA,IACA,WAEAH,SACAI,cAGAC,cACAC,WACAC,SAEAC,4CAOAvF,sCAGAwE,eAAAC,EACAC,eAAAD,EACAE,YAAAF,EAAAG,aAGAY,EAAA,EAAAC,SAAAzF,KAAAoE,yBACAsB,GAAAzF,KAAA,SAAA6E,6CAEA7C,8BAEA,IACA7B,MAAA,SAAA8E,gCAEAA,4CAIA,KACA,GAFA3E,GAAA,oEAMA,IAAAoF,EAAAlF,EAAAC,eACAkF,kBACAC,aACAC,QACA,eACAC,aACAD,8FAMAD,WAEAE,WACAC,SAlBA,GAmBAC,YACArB,cAEAsB,SArBA,4DAyBAzB,gEAKA,YACA0B,IACApD,wDAGA0B,EADA,IAAA2B,GAAA,gFAEA,IAAAC,EAAAC,EAAA5F,eACA6F,eACA,WAGA,WAGA,YAGA,iBACA,wJAQA9B,EAAAzE,KAAAwG,SAAAtB,MACA,kFAIAT,EAAAzE,KAAAwG,SAAAtB,MACA,mDAGAlF,oEAEA,oBAGAyG,oDACAC,GAAAzG,KAAA,SAAA6E,8DAGA7C,mBAEArC,6CACA+G,iCACAC,sBACAxG,MAAA,SAAA8E,gCAEAA,6BAEAT,OACAzE,KAAAwG,SAAAtB,MACA,yDAIAlF,qEAEA6G,mCACA,IAAAC,GAAA,oFACA,IAAAnB,EAAAoB,EAAArG,eACA6F,eACA,kCACAT,QACA,UACA,kCACAA,QACA,UACA,oCACAA,QACA,UACA,kCACAA,oKAQA,kBAEA,8BACA,mCAEA,+BACApB,4BAEA,oCAEA,mBACA,mCAEA,mBACA,iBAEAtE,MAAA,SAAA8E,gCAEAA,wDAKAlF,wEAEA6G,mCAEA,IAAAG,GAAA,oFACA,IAAArB,EAAAsB,EAAAvG,eACA6F,eACA,qCACAT,QACA,UACA,qCACAA,QACA,UACA,uCACAA,QACA,UACA,qCACAA,mKAQA,kBAEA,iCACA,mCAEA,+BACApB,4BAEA,sBACA,gBACAtE,MAAA,SAAA8E,gCAEAA,wDAKAlF,qEAEA6G,mCAEArB,EAAA,EAAA0B,UAAAC,EACAC,eAAAnH,KAAA,SAAA6E,+BAIA,kBAEA,iCACA,mCAEA,+BACAJ,4BAEA,sBACA,gBACAtE,MAAA,SAAA8E,gCAEAA,qDAKAlF,8BACA6G,8HAKAxG,8BACAoG,kEAIAY,eAPA7B,EAAA,EAAA0B,UAAAC,EAQAG,kBAAArH,KAAA,SAAA6E,+BAIA,sBAEA,iCACA,IAEAyC,gCACA,oBACAnH,MAAA,SAAA8E,gCAEAA,uDAKA,qCACAsC,OAFA,IAAAC,GAAA,gFAIA,IAAApB,EAAAqB,EAAAhH,eACA6F,eACA,mBACApB,KACA,UACA,mBACAE,KACA,UACA,oBACAsC,MACA,UACA,mBACApC,6LAQAH,qCAIApF,iEAIA4H,2CACAC,GAAA5H,KAAA,SAAA6E,iDAEA7C,qCAEAA,SACA7B,MAAA,SAAA8E,4DAKA,kCACA4C,KC/lBAC,GADiBjH,OAFjB,WAA0B,IAAAC,EAAAf,KAAagB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAmBF,EAAA,gCAAqCE,YAAA,kBAAAC,OAAqC2G,YAAAjH,EAAAiH,aAA8BnG,IAAKoG,kBAAAlH,EAAAkH,kBAAAC,mBAAAnH,EAAAmH,mBAAAC,oBAAApH,EAAAoH,oBAAAC,cAAArH,EAAAqH,cAAAC,eAAAtH,EAAAsH,eAAAC,eAAAvH,EAAAuH,eAAAC,gBAAAxH,EAAAwH,gBAAAC,qBAAAzH,EAAAyH,wBAAqUzH,EAAA+B,GAAA,KAAA5B,EAAA,uBAAwCG,OAAOoH,yBAAA1H,EAAA2H,eAAAC,SAAA5H,EAAA4H,SAAAhJ,UAAAoB,EAAApB,WAAgGkC,IAAK+G,gBAAA7H,EAAA8H,8BAAkD9H,EAAA+B,GAAA,KAAA5B,EAAA,uBAAwCG,OAAOoH,yBAAA1H,EAAA+H,kBAAAH,SAAA5H,EAAA4H,SAAAhJ,UAAAoB,EAAAgI,iBAAyGlH,IAAK+G,gBAAA7H,EAAAiI,iCAAqDjI,EAAA+B,GAAA,KAAA5B,EAAA,uBAAwCG,OAAOoH,yBAAA1H,EAAAkI,kBAAAtJ,UAAAoB,EAAAmI,iBAAiFrH,IAAK+G,gBAAA7H,EAAAoI,iCAAqDpI,EAAA+B,GAAA,KAAA5B,EAAA,0BAA2CG,OAAOxB,kBAAAkB,EAAAlB,kBAAAF,UAAAoB,EAAAqI,qBAAAxJ,QAAAmB,EAAAnB,QAAA4C,gBAAAzB,EAAAyB,gBAAAoE,mBAAA7F,EAAA6F,mBAAAH,cAAA1F,EAAA0F,eAAyN5E,IAAK+G,gBAAA7H,EAAAsI,gCAAmD,IAEn7C7F,oBCCjB,IAcA8F,EAdA5F,EAAA,OAcA6F,CACA1F,EACAkE,GATA,EAVA,SAAAnE,GACAF,EAAA,SAaA,KAEA,MAUA8F,EAAA,QAAAF,EAAA","file":"static/js/Role.b1a9e1d2777539dabc4e.js","sourcesContent":["<template>\r\n  <el-dialog\r\n  :title=\"updatePwd\"\r\n  :visible.sync=\"isShowDialog\"\r\n  width=\"25%\"\r\n  :before-close=\"handleClose\"\r\n  class=\"access-management-dialog-class\">\r\n  <el-tree \r\n    :data=\"treeOptions\" \r\n    show-checkbox \r\n    default-expand-all \r\n    node-key=\"MenuId\"\r\n    ref=\"tree\" \r\n    highlight-current \r\n    :props=\"treeChkboxProps\"\r\n    :default-checked-keys=\"defCheckedKeys\"\r\n    @check=\"handleCheckChange\"\r\n    check-strictly></el-tree>\r\n  <div class=\"access-management-dialog-btn\">\r\n    <el-button @click=\"handleCancel\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"submitForm()\" class=\"submitBtn\" v-hasAccess= \"{accessId: 'jbxx_jsgl_qxpz'}\">提交</el-button>\r\n  </div>\r\n  </el-dialog>\r\n</template>\r\n<style src=\"./accessManagementForm.css\" type=\"text/css\">\r\n</style>\r\n<script>\r\nexport default {\r\n  name: 'UpdatePwd',\r\n  props: ['accessMgmtVisible', 'treeOps', 'treeChkboxProps', 'formTitle', 'defaultCheckedKeys', 'currentRoleId'],\r\n  data () {\r\n    return {\r\n      updatePwd: this.formTitle,\r\n      treeOptions: this.treeOps,\r\n      checkedAccessArr: [],\r\n      defCheckedKeys: this.defaultCheckedKeys, //当勾选的默认选项改变后，需要子组件响应，重新渲染\r\n    }\r\n  },\r\n  computed: {\r\n    isShowDialog: {\r\n      get: function(){\r\n        return this.accessMgmtVisible\r\n      },\r\n      set: function(isShowDialog){\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    treeOps: function(val){\r\n      this.treeOptions = val;\r\n      // this.defaultCheckedKeys = ['2270000','2240000','3110000'];\r\n    },\r\n    //当勾选的默认选项改变后，需要子组件响应，重新渲染\r\n    defaultCheckedKeys: function(val){\r\n      this.defCheckedKeys = val;\r\n    }\r\n  },\r\n  methods:{\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？')\r\n        .then(_ => {\r\n          done();\r\n          const updateFormData = {\r\n            isVisible: false,\r\n            actionType: 'Cancel',\r\n          }\r\n          this.$emit('handlUpdateForm', updateFormData);\r\n        })\r\n        .catch(_ => {});\r\n    },\r\n    // handle form submit event,pass the props to parent component\r\n    submitForm(argument){\r\n        const updateFormData = {\r\n          isVisible: false,\r\n          actionType: 'Submit',\r\n          checkedAccessArr: this.checkedAccessArr\r\n        }\r\n        this.$emit('handlUpdateForm', updateFormData);\r\n    },\r\n    handleCancel: function(){\r\n      const updateFormData = {\r\n        isVisible: false,\r\n        actionType: 'Cancel',\r\n        checkedAccessArr: []\r\n      }\r\n      this.$emit('handlUpdateForm', false);\r\n    },\r\n    handleCheckChange() {\r\n      // (leafOnly) 接收一个 boolean 类型的参数，若为 true 则仅返回被选中的叶子节点，默认值为 false\r\n      const checkedNodes = this.$refs.tree.getCheckedNodes();//不仅包含子节点\r\n      // const halfCheckedNodes = this.$refs.tree.getHalfCheckedNodes();//获取半勾状态的节点\r\n      this.checkedAccessArr = this.recursiveNode(checkedNodes); //使用ES6的语法将两个数组合并为一个数组\r\n    },\r\n    // 递归查找某一个json对象有没有某一个子节点\r\n    recursiveNode(nodes){\r\n      const menu = [];\r\n      for(let nodeItem of nodes){\r\n        menu.push({\r\n          RightId: 0,\r\n          RoleId: this.currentRoleId.toString(),\r\n          ResourceId: nodeItem.ResourceId.toString(),\r\n          RightKind: 1,\r\n          Comm: '',\r\n          Type: 0,\r\n        })\r\n      }\r\n      return menu;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/BaseInfo/AccessManagementForm/AccessManagementForm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{staticClass:\"access-management-dialog-class\",attrs:{\"title\":_vm.updatePwd,\"visible\":_vm.isShowDialog,\"width\":\"25%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.isShowDialog=$event}}},[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.treeOptions,\"show-checkbox\":\"\",\"default-expand-all\":\"\",\"node-key\":\"MenuId\",\"highlight-current\":\"\",\"props\":_vm.treeChkboxProps,\"default-checked-keys\":_vm.defCheckedKeys,\"check-strictly\":\"\"},on:{\"check\":_vm.handleCheckChange}}),_vm._v(\" \"),_c('div',{staticClass:\"access-management-dialog-btn\"},[_c('el-button',{on:{\"click\":_vm.handleCancel}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{directives:[{name:\"hasAccess\",rawName:\"v-hasAccess\",value:({accessId: 'jbxx_jsgl_qxpz'}),expression:\"{accessId: 'jbxx_jsgl_qxpz'}\"}],staticClass:\"submitBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm()}}},[_vm._v(\"提交\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3930ae34\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/BaseInfo/AccessManagementForm/AccessManagementForm.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3930ae34\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./accessManagementForm.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AccessManagementForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AccessManagementForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3930ae34\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./AccessManagementForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/BaseInfo/AccessManagementForm/AccessManagementForm.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"role\">\r\n    <multi-level-no-tab-component\r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"role-multilevel\" \r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"\r\n    v-on:handleEditBtn=\"handleEditBtn\"\r\n    v-on:handleAddEvent=\"handleAddEvent\"\r\n    v-on:handleRowClick=\"handleRowClick\"\r\n    v-on:handleDeleteBtn=\"handleDeleteBtn\"\r\n    v-on:handleAccessmgmntBtn=\"handleAccessmgmntBtn\"></multi-level-no-tab-component>\r\n    <operation-role-form :updateCompanyFormVisible=\"addRoleVisible\" v-on:handlUpdateForm=\"handleAddCancelSubmitEvent\" :formData=\"formData\" :formTitle=\"formTitle\"></operation-role-form>\r\n    <operation-role-form :updateCompanyFormVisible=\"updateRoleVisible\" v-on:handlUpdateForm=\"handleUpdateCancelSubmitEvent\" :formData=\"formData\" :formTitle=\"formUpdateTitle\"></operation-role-form>\r\n    <operation-role-form :updateCompanyFormVisible=\"deleteRoleVisible\" v-on:handlUpdateForm=\"handleDeleteCancelSubmitEvent\" :formTitle=\"formDeleteTitle\"></operation-role-form>\r\n    <!-- 展示权限配置 -->\r\n    <access-management-form :accessMgmtVisible=\"accessMgmtVisible\" v-on:handlUpdateForm=\"handleAccessMgmtSubmitEvent\" :formTitle=\"formAccessmgmntTitle\" :treeOps=\"treeOps\" :treeChkboxProps=\"treeChkboxProps\" :defaultCheckedKeys=\"defaultCheckedKeys\" :currentRoleId=\"currentRoleId\"></access-management-form>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./baseInfoRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelNoTabComponent from \"@/components/MultiLevelNoTabComponent/MultiLevelNoTabComponent\";\r\nimport OperationRoleForm from \"@/BaseInfo/UpdateCompanyForm/UpdateCompanyForm\";\r\nimport AccessManagementForm from '@/BaseInfo/AccessManagementForm/AccessManagementForm';\r\nimport { axiosRequest, getLastMonth, getLastDay, isNullUndefEmpty,formAccessMgmtData, storageOperation,handleErrorMsg } from \"@/common/common\";\r\nimport {\r\n  commonConfig,\r\n  reportLabelId,\r\n  provinceVal\r\n} from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"Role\",\r\n  components: {\r\n    MultiLevelNoTabComponent,\r\n    OperationRoleForm,\r\n    AccessManagementForm\r\n  },\r\n  data() {\r\n    return {\r\n      getUserDataUrl: commonConfig.rootUrl + commonConfig.UserAPI.GetUserData, //获取当前用户的角色的权限列表\r\n      getRoleInfoUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.GetRoleInfo, //角色管理\r\n      getMenuTreeDataUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.GetMenuTreeData, //获取权限配置\r\n      // 增加按钮需要的数据信息\r\n      postAddObj: {\r\n        //角色管理 - 添加角色\r\n        params: {\r\n          Name: \"\",\r\n          Code: \"\",\r\n          State: \"\",\r\n          Comm: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.AddRoleInfo\r\n      },\r\n      //用户管理 - 修改用户基本信息\r\n      postUpdateObj: {\r\n        //角色管理 - 修改角色信息\r\n        params: {\r\n          RoleId: \"\",\r\n          Name: \"\",\r\n          Code: \"\",\r\n          State: \"\",\r\n          Comm: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.UpdateRoleInfo\r\n      },\r\n      postDeleteObj: {\r\n        //角色管理 - 删除角色\r\n        params: {\r\n          roleId: \"\"\r\n        },\r\n        postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.DeleteRoleInfo\r\n      },\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一大列的满分得分\r\n      columnFullScore: {\r\n        rwl: 5,\r\n        sxl: 10,\r\n        wxpyl: 15,\r\n        gjwzl: 40,\r\n        sjhgl: 30,\r\n        pjcscs: 0,\r\n        pjpjsc: 0\r\n      },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      roleSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // 初始状态下隐藏增加角色管理信息\r\n      addRoleVisible: false,\r\n      // 初始状态下隐藏修改角色管理信息\r\n      updateRoleVisible: false,\r\n      // 初始状态下隐藏删除角色管理信息\r\n      deleteRoleVisible: false,\r\n      // 初始状态下隐藏权限管理信息\r\n      accessMgmtVisible: false,\r\n      // 增加角色管理信息表单\r\n      formData: [\r\n        {\r\n          headerKey: \"Name\",\r\n          headerVal: \"角色名称\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"Code\",\r\n          headerVal: \"角色代码\",\r\n          isReadOnly: true, //在修改情况下是不能修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        },\r\n        {\r\n          headerKey: \"State\",\r\n          headerVal: \"是否启用\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'select',\r\n          compVal: 1,\r\n          options: [\r\n            {\r\n              value: 1,\r\n              label: \"启用\"\r\n            },\r\n            {\r\n              value: 0,\r\n              label: \"禁用\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          headerKey: \"Comm\",\r\n          headerVal: \"备注\",\r\n          isReadOnly: false, //在修改情况下是可以修改的\r\n          columnType: 'input',\r\n          compVal: \"\"\r\n        }\r\n      ],\r\n      formTitle: \"增加角色管理信息\",\r\n      formUpdateTitle: \"修改角色管理信息\", //该字段不能随意改动，因为修改的表单会通过这个字段进行识别当前表单是修改表单，某些字段是只读不能修改的\r\n      formDeleteTitle: \"你确定要删除该角色吗？\",\r\n      formAccessmgmntTitle: \"权限配置\",\r\n      // 标记选择了某一行的状态\r\n      isSelectedRow: false,\r\n      // 记住当前选择的行的roleId为权限配置做准备\r\n      currentRoleId: '',\r\n      treeOps: [],\r\n      defaultCheckedKeys: [],\r\n      treeChkboxProps: {\r\n        label: \"Name\",\r\n        chidlren: \"children\"\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return {\r\n        currentPage: 1, //当前页数\r\n        total: 0, //总条数\r\n        loading: false,\r\n        btnEvents: [\r\n          {\r\n            iconName: \"el-icon-search\",\r\n            btnId: commonConfig.btnEventsId.search, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"查询\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_jsgl_cx', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-circle-plus-outline\",\r\n            btnId: commonConfig.btnEventsId.add, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"增加\",\r\n            isDisabled: false, //控制导出数据按钮初始状态为disabled\r\n            ctrlId: 'jbxx_jsgl_zj', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-edit\",\r\n            btnId: commonConfig.btnEventsId.edit, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"修改\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_jsgl_xg', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-delete\",\r\n            btnId: commonConfig.btnEventsId.delete, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"删除\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_jsgl_sc', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          },\r\n          {\r\n            iconName: \"el-icon-setting\",\r\n            btnId: commonConfig.btnEventsId.accessmgmnt, //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"权限配置\",\r\n            isDisabled: false, //控制查询数据按钮初始状态为enabled\r\n            ctrlId: 'jbxx_jsgl_qxpz', //该值是和后面的权限管理挂钩的，所以这个值和后台的名字保持一致\r\n          }\r\n        ],\r\n        searchCreteria: [\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"角色名称\",\r\n            labelId: reportLabelId.RoleName, //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"\"\r\n          },\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"角色代码\",\r\n            labelId: reportLabelId.RoleCode, //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"\"\r\n          }\r\n        ],\r\n        tabHeader: [\r\n          {\r\n            headerKey: \"sybid\",\r\n            headerVal: \"序号\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Name\",\r\n            headerVal: \"角色名称\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Code\",\r\n            headerVal: \"角色代码\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"State\",\r\n            headerVal: \"是否启用\",\r\n            subHeaders: []\r\n          },\r\n          {\r\n            headerKey: \"Comm\",\r\n            headerVal: \"备注\",\r\n            subHeaders: []\r\n          }\r\n        ],\r\n        TabCtnt: []\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    //处理子组件触发的查询事件\r\n    handleClickSearch: function(msg) {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_cx'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const getRoleInfoUrlParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList.loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.roleSourceData = [];\r\n      axiosRequest.axiosGet(this.getRoleInfoUrl, getRoleInfoUrlParams)\r\n        .then(function(response) {\r\n          if(!isNullUndefEmpty(response.data)){\r\n            // const userInfoRankTemp = response.data.DetailList;\r\n            const roleTemp = response.data;\r\n            for (let roleItem in roleTemp) {\r\n              self.roleSourceData.push(self.pushSourceData(parseInt(roleItem)+1, roleTemp[roleItem]));\r\n            }\r\n            // 加上合计这一行\r\n            // self.countData = self.pushSourceData(response.data.TotalList);\r\n            self.tabCtntList.loading = false;\r\n            self.tabCtntList.TabCtnt = self.roleSourceData;\r\n            // self.tabCtntList.TabCtnt.push(self.countData);\r\n            self.tabCtntList.total = response.data.CountTotal;\r\n            self.tabCtntList.btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n          }else {\r\n            self.tabCtntList.TabCtnt = [];\r\n            self.tabCtntList.loading = false;\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(roleItem, roleTemp) {\r\n      let stateTemp = '';\r\n      if(roleTemp.State) stateTemp = '是';\r\n      else stateTemp = '否';\r\n      return {\r\n        sybid: roleItem,\r\n        Name: roleTemp.Name,\r\n        // 该字段是修改按钮需要使用\r\n        RoleId: roleTemp.RoleId,\r\n\r\n        Code: roleTemp.Code,\r\n        State: stateTemp,\r\n        Comm: roleTemp.Comm\r\n      };\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      self.tabCtntList.loading = true; //下载数据的时候，显示正在下载数据的logo\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      axiosRequest\r\n        .axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList.loading = false;\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n    },\r\n    formPageParams: function(msg, pageIndex, isSplitPage) {\r\n      let RoleName = \"\",\r\n        RoleCode = \"\",\r\n        pageSize = 10,\r\n        readPage = \"\";\r\n      //统一为每一种类型赋值，而不需要单独判断\r\n      for (let msgItem of msg) {\r\n        switch (msgItem.labelId) {\r\n          case reportLabelId.RoleName:\r\n            RoleName = msgItem.compVal;\r\n            break;\r\n          case reportLabelId.RoleCode:\r\n            RoleCode = msgItem.compVal;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n      return {\r\n        RoleName,\r\n        RoleCode,\r\n\r\n        pageSize,\r\n        pageIndex,\r\n        isSplitPage,\r\n        readPage\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    },\r\n    handleAddEvent: function(msg) {\r\n      this.addRoleVisible = msg;\r\n      for (let formDataItem of this.formData) {\r\n        switch (formDataItem.headerKey) {\r\n          case \"Name\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n          case \"Code\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n          case \"State\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n          case \"Comm\":\r\n            formDataItem.compVal = \"\";\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    },\r\n    // 单击增加按钮事件处理\r\n    handleEditBtn: function(msg) {\r\n      if (this.isSelectedRow) this.updateRoleVisible = msg;\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    // 单击删除按钮事件处理\r\n    handleDeleteBtn: function(msg) {\r\n      if (this.isSelectedRow) this.deleteRoleVisible = msg;\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    handleAccessmgmntBtn: function(msg){\r\n      let self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_qxpz'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      if (this.isSelectedRow){\r\n         const getMenuTreeDataUrlParams = {\r\n           RoleId : this.currentRoleId,\r\n         }\r\n        axiosRequest.axiosGet(this.getMenuTreeDataUrl, getMenuTreeDataUrlParams)\r\n        .then(function(response) {\r\n          self.$store.commit('updateChkAccessMgmtceArr', []);\r\n          self.treeOps = response.data;\r\n          // 勾选默认选项\r\n          formAccessMgmtData(self.treeOps);\r\n          self.defaultCheckedKeys = self.$store.state.chkAccessMgmtceArr;\r\n          console.log(self.defaultCheckedKeys)\r\n        })\r\n        .catch(function(error) {\r\n          self.$message.error(handleErrorMsg(error));\r\n        });\r\n        this.accessMgmtVisible = msg;\r\n      }\r\n      else this.$message.error(\"请选择一行数据\");\r\n    },\r\n    // 处理子组件增加的修改数据的请求\r\n    handleAddCancelSubmitEvent: function(msg) {\r\n      let self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_zj'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      this.addRoleVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        for (let msgItem of msg.formColumnNames) {\r\n          switch (msgItem.headerKey) {\r\n            case \"Name\":\r\n              self.postAddObj.params.Name = msgItem.compVal;\r\n              break;\r\n            case \"Code\":\r\n              self.postAddObj.params.Code = msgItem.compVal;\r\n              break;\r\n            case \"State\":\r\n              self.postAddObj.params.State = msgItem.compVal;\r\n              break;\r\n            case \"Comm\":\r\n              self.postAddObj.params.Comm = msgItem.compVal;\r\n              break;\r\n            default:\r\n          }\r\n        }\r\n        axiosRequest.axiosPost(self.postAddObj).then(function(response) {\r\n            if (response.data === 0) {\r\n              self.$message({\r\n                message: \"恭喜你，修改信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.addRoleVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              });\r\n            } else if(response.data === -1){\r\n              self.addRoleVisible = true;\r\n              self.$message.error(\"角色已存在，请重新添加\");\r\n            } else {\r\n              self.addRoleVisible = true;\r\n              self.$message.error(\"错了哦，修改信息失败\");\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleUpdateCancelSubmitEvent: function(msg) {\r\n      let self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_xg'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      this.updateRoleVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        \r\n        for (let msgItem of msg.formColumnNames) {\r\n          switch (msgItem.headerKey) {\r\n            case \"Name\":\r\n              self.postUpdateObj.params.Name = msgItem.compVal;\r\n              break;\r\n            case \"Code\":\r\n              self.postUpdateObj.params.Code = msgItem.compVal;\r\n              break;\r\n            case \"State\":\r\n              self.postUpdateObj.params.State = msgItem.compVal;\r\n              break;\r\n            case \"Comm\":\r\n              self.postUpdateObj.params.Comm = msgItem.compVal;\r\n              break;\r\n            default:\r\n          }\r\n        }\r\n        axiosRequest.axiosPost(self.postUpdateObj).then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，修改信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.updateRoleVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              })\r\n            } else self.$message.error(\"错了哦，修改信息失败\");\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleDeleteCancelSubmitEvent: function(msg) {\r\n      let self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_sc'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      this.deleteRoleVisible = msg.isVisible;\r\n      if (msg.actionType === \"Submit\") {\r\n        axiosRequest\r\n          .axiosPost(self.postDeleteObj)\r\n          .then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，删除信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.deleteRoleVisible = false;\r\n              self.handleClickSearch({\r\n                currentPage: 1,\r\n                searchCreteria: self.tabCtntList.searchCreteria,\r\n                isSplitPage: true\r\n              })\r\n            } else self.$message.error(\"错了哦，删除信息失败\");\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleAccessMgmtSubmitEvent: function(msg) {\r\n      let self = this;\r\n      this.accessMgmtVisible = msg.isVisible;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'jbxx_jsgl_qxpz_xg'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      if (msg.actionType === \"Submit\") {\r\n        this.postSaveRightObj = {\r\n          params: {\r\n            menuList: JSON.stringify(msg.checkedAccessArr),\r\n            roleId: this.currentRoleId,\r\n            reList: JSON.stringify([])\r\n          },\r\n          postUrl: commonConfig.rootUrl + commonConfig.BaseInfoAPI.SaveRightData\r\n        },\r\n        axiosRequest.axiosPost(self.postSaveRightObj)\r\n          .then(function(response) {\r\n            if (response.data) {\r\n              self.$message({\r\n                message: \"恭喜你，修改权限配置信息成功\",\r\n                type: \"success\"\r\n              });\r\n              self.accessMgmtVisible = false;\r\n              // 修改角色权限后将重新获取用户对应角色的权限列表\r\n              self.getUserData();\r\n            } else self.$message.error(\"错了哦，修改权限配置信息失败\");\r\n          })\r\n          .catch(function(error) {\r\n            self.$message.error(handleErrorMsg(error));\r\n          });\r\n      }\r\n    },\r\n    handleRowClick: function(msg) {\r\n      this.isSelectedRow = true;\r\n      this.postUpdateObj.params.UnitId = msg.UnitID;\r\n      // 设置修改信息的默认值\r\n      for (let formDataItem of this.formData) {\r\n        switch (formDataItem.headerKey) {\r\n          case \"Name\":\r\n            formDataItem.compVal = msg.Name;\r\n            break;\r\n          case \"Code\":\r\n            formDataItem.compVal = msg.Code;\r\n            break;\r\n          case \"State\":\r\n            formDataItem.compVal = msg.State;\r\n            break;\r\n          case \"Comm\":\r\n            formDataItem.compVal = msg.Comm;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n      // 由于下面的字段属于隐藏字段，需要单独为其赋值\r\n      this.postUpdateObj.params.RoleId = msg.RoleId; //修改情况的RoleId\r\n      this.postDeleteObj.params.roleId = msg.RoleId; //删除情况的RoleId\r\n      this.currentRoleId = msg.RoleId;\r\n    },\r\n    // 获取用户对应角色的权限列表\r\n    getUserData: function() {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      const getUserDataUrlParams = {\r\n        loginCode: storageOperation.getItem(commonConfig.LoginID)\r\n      };\r\n      axiosRequest.axiosGet(this.getUserDataUrl, getUserDataUrlParams)\r\n        .then(function(response) {\r\n          self.$store.commit(\"updateUsrAccessManagement\", response.data);\r\n          // 由于在vue自定义指令中无法访问vuex中的state,所以再存取一个副本在sessionStorage中\r\n          storageOperation.setItem(\"accessList\", JSON.stringify(response.data));\r\n        })\r\n        .catch(function(error) {});\r\n    }\r\n  },\r\n  beforeMount: function() {\r\n    const breadNavs = JSON.parse(storageOperation.getItem(\"breadNavs\"));\r\n    this.$emit(\"viewIn\", breadNavs);\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/BaseInfo/BaseInfoRouter/Role.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"role\"},[_c('multi-level-no-tab-component',{staticClass:\"role-multilevel\",attrs:{\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange,\"handleEditBtn\":_vm.handleEditBtn,\"handleAddEvent\":_vm.handleAddEvent,\"handleRowClick\":_vm.handleRowClick,\"handleDeleteBtn\":_vm.handleDeleteBtn,\"handleAccessmgmntBtn\":_vm.handleAccessmgmntBtn}}),_vm._v(\" \"),_c('operation-role-form',{attrs:{\"updateCompanyFormVisible\":_vm.addRoleVisible,\"formData\":_vm.formData,\"formTitle\":_vm.formTitle},on:{\"handlUpdateForm\":_vm.handleAddCancelSubmitEvent}}),_vm._v(\" \"),_c('operation-role-form',{attrs:{\"updateCompanyFormVisible\":_vm.updateRoleVisible,\"formData\":_vm.formData,\"formTitle\":_vm.formUpdateTitle},on:{\"handlUpdateForm\":_vm.handleUpdateCancelSubmitEvent}}),_vm._v(\" \"),_c('operation-role-form',{attrs:{\"updateCompanyFormVisible\":_vm.deleteRoleVisible,\"formTitle\":_vm.formDeleteTitle},on:{\"handlUpdateForm\":_vm.handleDeleteCancelSubmitEvent}}),_vm._v(\" \"),_c('access-management-form',{attrs:{\"accessMgmtVisible\":_vm.accessMgmtVisible,\"formTitle\":_vm.formAccessmgmntTitle,\"treeOps\":_vm.treeOps,\"treeChkboxProps\":_vm.treeChkboxProps,\"defaultCheckedKeys\":_vm.defaultCheckedKeys,\"currentRoleId\":_vm.currentRoleId},on:{\"handlUpdateForm\":_vm.handleAccessMgmtSubmitEvent}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-707b84a4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/BaseInfo/BaseInfoRouter/Role.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-707b84a4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./baseInfoRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Role.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Role.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-707b84a4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Role.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/BaseInfo/BaseInfoRouter/Role.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}