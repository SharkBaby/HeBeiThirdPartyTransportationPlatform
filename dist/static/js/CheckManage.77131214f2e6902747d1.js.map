{"version":3,"sources":["webpack:///src/CheckManage/CheckManageRouter/ProviderCheckRank.vue","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckRank.vue?1d17","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckRank.vue","webpack:///src/CheckManage/CheckManage.vue","webpack:///./src/CheckManage/CheckManage.vue?34e7","webpack:///./src/CheckManage/CheckManage.vue","webpack:///./src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue?ddb2","webpack:///./src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue","webpack:///src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue","webpack:///src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue","webpack:///./src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue?ea07","webpack:///./src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue","webpack:///src/CheckManage/CheckManageRouter/CompanyCheckRank.vue","webpack:///./src/CheckManage/CheckManageRouter/CompanyCheckRank.vue?af8e","webpack:///./src/CheckManage/CheckManageRouter/CompanyCheckRank.vue","webpack:///./src/components/SpanTableComponent/SpanTableComponent.vue?1d97","webpack:///./src/components/SpanTableComponent/SpanTableComponent.vue","webpack:///src/components/SpanTableComponent/SpanTableComponent.vue","webpack:///src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue?5780","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue","webpack:///src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue?9b85","webpack:///./src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue","webpack:///src/CheckManage/CheckManageRouter/TransportCheckRank.vue","webpack:///./src/CheckManage/CheckManageRouter/TransportCheckRank.vue?4495","webpack:///./src/CheckManage/CheckManageRouter/TransportCheckRank.vue","webpack:///./src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue?9b1f","webpack:///./src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue","webpack:///src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue","webpack:///src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue","webpack:///./src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue?b659","webpack:///./src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue","webpack:///src/CheckManage/CheckManageRouter/ZoneCheckRank.vue","webpack:///./src/CheckManage/CheckManageRouter/ZoneCheckRank.vue?5acf","webpack:///./src/CheckManage/CheckManageRouter/ZoneCheckRank.vue"],"names":["ProviderCheckRank","MultiLevelTableComponent","getCheckManageByZoneUrl","commonConfig","rootUrl","GetCheckManageByZone","exportCheckManageDataUrl","ExportCheckManageData","tabLabel","Object","common","router_link","ProviderCheckDetail","text","this","formPageParams","msg","searchCreteria","currentPage","activeName","isSplitPage","GetCheckManageByZoneParams","then","response","DetailList","_iteratorNormalCompletion","providerCheckItem","_step","value","push","self","pushSourceData","data","TotalList","providerCheckSourceData","countData","CountTotal","catch","error","tabName","sybid","PlatformName","ProviderName","AllConnectTime","ConnectTime","ConnectRate","ConnectScore","InnetCount","UplineCount","UplineRate","UplineScore","AllDistance","InteDistance","LocInteRate","LocInteScore","AllLoc","ValidLoc","ValidRate","ValidScore","AllOnlineVehicle","DriftCount","DriftRate","DriftScore","Score","LinkRelativeRatio","nType","msgItem","_step2","compId","labelId","platformId","type","endDate","compVal","substr","_iteratorNormalCompletion3","_step3","upLineFlag","beginDate","isOnGuard","checkType","checkUnitID","targetUserId","isIncludeLower","sortName","sortOrder","pageIndex","url","click","CheckManageRouter_ProviderCheckRank","render","_h","$createElement","_c","_self","staticClass","attrs","tabCtntList","on","handleClickSearch","handleClickExpData","handleCurrentChange","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","CheckManage","VerticalMenu","breadNavs","CheckManage_CheckManage","navMenu","ZoneCheckSpanTableComponent_ZoneCheckSpanTableComponent","_vm","_v","_s","staticStyle","width","TabCtnt","span-method","objectSpanMethod","border","default-sort","prop","order","_l","tabHeaderItem","tabHeaderKey","key","label","sortable","components_ZoneCheckSpanTableComponent_ZoneCheckSpanTableComponent","_ref","row","column","rowIndex","columnIndex","ZoneCheckPrint","InputComponent","SelectComponent","CheckboxComponent","SingleChkboxComponent","ButtonComponent","ZoneCheckSpanTableComponent","DatePickerComponent","SingleDatePickerComponent","chkCtnt","getZoneToUserID","getZoneToUserIDUrl","searchItem","options","optItem","_iteratorNormalCompletion2","btnId","search","print","handleClickPrint","munalMappingTab","InstallRateScore","rate","zonecheckPrintTemp","InstallRate","getScore","InstallScore","amount","UplineRateScore","DriftRateScore","LocInteRateScore","ValidRateScore","_iteratorNormalCompletion4","_step4","Number","_iteratorNormalCompletion5","_step5","Id","CheckManageRouter_ZoneCheckPrint","span","zoneArray","zoneData","props","defaultProps","default-expanded-keys","node-click","handleNodeClick","searchKey","searchType","input","labelName","inputChange","select","selectChange","checkbox","checkboxChange","singleChkbox","singleChkboxChange","singleDatePicker","placeholder","format","valueformat","singleDatePickerChange","fromTodatePicker","datePickerChange","_e","btnItem","btnKey","icon","iconName","disabled","isDisabled","$event","handleBtnClick","btnName","directives","name","rawName","expression","tabDetail","tabHeader","ZoneCheckPrint_Component","ZoneCheckPrint_normalizeComponent","CompanyCheckRank","columnFullScore","wxpyl","pjcscs","pjpjsc","ptcgxyl","companyCheckItem","companyCheckSourceData","ZName","UnitName","AllInstallCount","InstallCount","DriftInnetCount","AvgSpeedNum","defineProperty_default","ZoneAvgSpeedNum","AvgFatiTime","ZoneAvgFatiTime","AvgFatiTimeScore","CheckCNT","ResponseCNT","CheckRate","CheckScore","axiosGet","unitId","CheckManageRouter_CompanyCheckRank","SpanTableComponent_SpanTableComponent","components_SpanTableComponent_SpanTableComponent","ProviderCheckPrint","SpanTableComponent","carItem","CheckManageRouter_ProviderCheckPrint","ProviderCheckPrint_Component","ProviderCheckPrint_normalizeComponent","GetProviderCheckDetailData","ExportProviderCheckDetailData","getProviderCheckDetailDataUrl","getProviderCheckDetailDataParams","LicensePlat","PlateColor","CityName","VehicleType","GPSInstalled","GPSTime","Bs","CompanyZoneName","CompanyName","GPSLastDate","Name","OnlineTime","TotalTime","OnlineRate","UninteDistance","AllData","ValidData","InValidData","LicensePlatAbnormal","PlateColorAbnormal","LocAbnormal","HeightAbnormal","SpeedAbnormal","DirAbnormal","TimeAbnormal","BDate","EDate","ContinueTime","SpeedLimit","Speed","OverspeedRate","ZoneName","BLocation","ELocation","IsOnGuard","CheckDate","Question","CheckUserName","CheckUnitName","ConfirmDate","Answer","ConfirmUserName","CheckMode","exportProviderCheckDetailDataUrl","exportProviderCheckDetailDataParams","zoneId","installID","_msgItem","_msgItem2","_step6","_iteratorNormalCompletion7","_step7","_msgItem3","_step8","_iteratorNormalCompletion9","_step9","_msgItem4","_step10","_iteratorNormalCompletion11","_step11","_msgItem5","_step12","_iteratorNormalCompletion13","_step13","_msgItem6","_step14","_iteratorNormalCompletion15","_step15","_msgItem7","_step16","_msgItem8","_step17","CheckManageRouter_ProviderCheckDetail","TransportCheckRank","transCheckItem","transCheckSourceData","total","OverSpeedCount","OverSpeedRate","ProvinceOverSpeedRate","OverSpeedScore","FatigueDriveCount","FatigueDriveRate","ProvinceFatigueDriveRate","FatigueDriveScore","AbnormalCount","AbnormalRate","ProvinceAbnormalRate","AbnormalScore","CheckManageRouter_TransportCheckRank","CompanySpanTableComponent_CompanySpanTableComponent","components_CompanySpanTableComponent_CompanySpanTableComponent","CompanyCheckPrint","CompanySpanTableComponent","searchCheckType","companycheckPrintTemp","AvgSpeedScore","CheckManageRouter_CompanyCheckPrint","CompanyCheckPrint_Component","CompanyCheckPrint_normalizeComponent","ZoneCheckRank","zoneCheckItem","zoneCheckSourceData","activeNameIndex","btnEvents","CheckManageRouter_ZoneCheckRank","_m"],"mappings":"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ApN,iBAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,wBAAA,EACAC,kBAAA,EACAiN,0BAAAF,EACA7M,sBAAA,EAEAC,4BAAA,4CAIA,eACA,kBACA,wBACA,0BACA,kEAEA,gCAEA,iCAEA,aACA,kBACA,uBAEA,wHAEA,gDAGA,kBACA,mBACA,iBACA,iBACA,gBACA,mBACA,cAEA,0BAEA,uBAEA,wCAEA,8BAIA,wCAEA,iDAKA,kBACA,iCAEA,UAEA,gBAEA,kBACA,+BAEA,aAEA,wBAEA,mBACA,sDAIA,QACA,+CAEA,kCAEAzI,OAAAC,EAAA,EAAAD,QACA,oBACA,eACA,sBAEA,iBAEA,QACA,kEAGA,aACA,UACA,mBACA,eACA,mBAEA,eAEA,QACA,oEAGA,aACA,iBACA,wBACA,sBACA,yBAIA,0BAEA,6BACA,mCAEAA,OAAAC,EAAA,EAAAD,QACA,oBACA,eACA,sBAEA,sBAEA,uCAEA,mCAGA,QAEA,mBAEA,QAEA,eAEA,cAEA,yBAIA,iBAEA,cAIA,8BA8BA,yCAEA,eACA,aACA,mBACA,YACA,gBACA,YAEA,0BAEA,iBACA,cACA,kBACA,cACA,YACA,UAEA,eAEA,iBACA,cACA,kBACA,iBACA,YACA,UAEA,eAEA,iBACA,cACA,kBACA,cACA,YACA,UAEA,eAEA,iBACA,cACA,mBACA,iBACA,YACA,UAEA,eAEA,iBACA,cACA,mBACA,iBACA,YACA,UAEA,eAEA,iBACA,cACA,mBACA,iBACA,YACA,UAEA,eAEA,iBACA,cACA,mBACA,iBACA,YACA,UAEA,eAEA,iBACA,kBACA,mBACA,wBACA,YACA,UAEA,eAEA,iBACA,kBACA,mBACA,gBACA,YACA,UAEA,eAEA,iBACA,iBACA,mBACA,iEAGA,aACA,UAEA,eAEA,iBACA,iBACA,mBACA,6EAGA,YACA,UAEA,eAEA,iBACA,iBACA,mBACA,8BACA,YACA,UAEA,eAEA,iBACA,iBACA,mBACA,0EAGA,aACA,UAEA,eAEA,iBACA,iBACA,mBACA,uFAGA,YACA,UAEA,eAEA,iBACA,iBACA,mBACA,gCACA,YACA,UAEA,eAEA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","file":"static/js/CheckManage.77131214f2e6902747d1.js","sourcesContent":["<template>\r\n  <div class=\"ProviderCheckRank\">\r\n    <multi-level-table-component \r\n    :activeName=\"activeName\" \r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"zone-check-multilevel\"\r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"></multi-level-table-component>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelTableComponent from \"@/components/MultiLevelTableComponent/MultiLevelTableComponent\";\r\nimport { axiosRequest, getLastMonth, getLastDay } from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"ProviderCheckRank\",\r\n  components: {\r\n    MultiLevelTableComponent\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"report_providerCheckRank_table\",\r\n      activeNameIndex: 0,\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone,\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一大列的满分得分\r\n      columnFullScore: {\r\n        ptltl: 20,\r\n        sxl: 10,\r\n        gjwzl: 25,\r\n        sjhgl: 25,\r\n        wxpyl: 20,\r\n        pjcscs: 0,\r\n        pjpjsc: 0\r\n      },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      providerCheckSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // tabName作为标识符\r\n      tabNameObj: {\r\n        firTab: {\r\n          tabLabel: \"服务商考核排名\",\r\n          tabName: \"report_providerCheckRank_table\", //将作为标识符来区分\r\n          nType: 3 //根据重构前的请求，可以看到nType 为3\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return [\r\n        {\r\n          tabLabel: this.tabNameObj.firTab.tabLabel,\r\n          tabName: this.tabNameObj.firTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\"\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              labelName: \"车辆类型：\",\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ProviderName\",\r\n              headerVal: \"所属服务商名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"平台连通率（\" + this.columnFullScore.ptltl + \"）\",\r\n              // subHeaders: {\r\n              //   AllConnectTime: \"应连通时长\",\r\n              //   ConnectTime: \"实际连通时长\",\r\n              //   ConnectRate: \"连通率（%）\",\r\n              //   ConnectScore: \"分数\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllConnectTime\",\r\n                  headerVal: \"应连通时长\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ConnectTime\",\r\n                  headerVal: \"实际连通时长\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ConnectRate\",\r\n                  headerVal: \"连通率（%）\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ConnectScore\",\r\n                  headerVal: \"分数\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"车辆上线率（\" + this.columnFullScore.sxl + \"）\",\r\n              // subHeaders: {\r\n              //   InnetCount: \"应上线\",\r\n              //   UplineCount: \"已上线\",\r\n              //   UplineRate: \"上线率（%）\",\r\n              //   UplineScore: \"分数\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"InnetCount\",\r\n                  headerVal: \"应上线\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineCount\",\r\n                  headerVal: \"已上线\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"UplineRate\",\r\n                  headerVal: \"上线率（%）\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineScore\",\r\n                  headerVal: \"分数\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"轨迹完整率（\" + this.columnFullScore.gjwzl + \"）\",\r\n              // subHeaders: {\r\n              //   AllDistance: \"总里程\",\r\n              //   InteDistance: \"轨迹完整里程\",\r\n              //   LocInteRate: \"轨迹完整率（%）\",\r\n              //   LocInteScore: \"分数\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllDistance\",\r\n                  headerVal: \"总里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InteDistance\",\r\n                  headerVal: \"轨迹完整里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"LocInteRate\",\r\n                  headerVal: \"轨迹完整率（%）\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LocInteScore\",\r\n                  headerVal: \"分数\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"数据合格率（\" + this.columnFullScore.sjhgl + \"）\",\r\n              // subHeaders: {\r\n              //   AllLoc: \"总条数\",\r\n              //   ValidLoc: \"合格条数\",\r\n              //   ValidRate: \"数据合格率（%）\",\r\n              //   ValidScore: \"分数\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllLoc\",\r\n                  headerVal: \"总条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidLoc\",\r\n                  headerVal: \"合格条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidRate\",\r\n                  headerVal: \"数据合格率（%）\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ValidScore\",\r\n                  headerVal: \"分数\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"卫星飘移率（\" + this.columnFullScore.wxpyl + \"）\",\r\n              // subHeaders: {\r\n              //   AllOnlineVehicle: \"上线车辆数\",\r\n              //   DriftCount: \"漂移车辆数\",\r\n              //   DriftRate: \"卫星漂移率（%）\",\r\n              //   DriftScore: \"分数\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllOnlineVehicle\",\r\n                  headerVal: \"上线车辆数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftCount\",\r\n                  headerVal: \"漂移车辆数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"DriftRate\",\r\n                  headerVal: \"卫星漂移率（%）\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftScore\",\r\n                  headerVal: \"分数\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              headerKey: \"Score\",\r\n              headerVal: \"总分\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LinkRelativeRatio\",\r\n              headerVal: \"环比增加\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   PlatformName: \"2016-05-03\",\r\n            //   ProviderName: \"王小虎\",\r\n            //   AllConnectTime: \"上海\",\r\n            //   ConnectTime: \"普陀区\",\r\n            //   ConnectRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    handleClickSearch: function(msg) {\r\n      //处理子组件触发的查询事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.providerCheckSourceData = [];\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const providerCheckRankTemp = response.data.DetailList;\r\n          for (let providerCheckItem of providerCheckRankTemp) {\r\n            self.providerCheckSourceData.push(\r\n              self.pushSourceData(providerCheckItem, msg.activeName)\r\n            );\r\n          }\r\n          // 加上合计这一行\r\n          self.countData = self.pushSourceData(\r\n            response.data.TotalList,\r\n            msg.activeName\r\n          );\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt = self.providerCheckSourceData;\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt.push(self.countData);\r\n          self.tabCtntList[self.activeNameIndex].total = response.data.CountTotal;\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n          self.tabCtntList[self.activeNameIndex].btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(providerCheckItem, activeName) {\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            ProviderName: providerCheckItem.ProviderName,\r\n            AllConnectTime: providerCheckItem.AllConnectTime,\r\n            ConnectTime: providerCheckItem.ConnectTime,\r\n            ConnectRate: providerCheckItem.ConnectRate,\r\n            ConnectScore: providerCheckItem.ConnectScore,\r\n\r\n            InnetCount: providerCheckItem.InnetCount,\r\n            UplineCount: providerCheckItem.UplineCount,\r\n            UplineRate: providerCheckItem.UplineRate,\r\n            UplineScore: providerCheckItem.UplineScore,\r\n\r\n            AllDistance: providerCheckItem.AllDistance,\r\n            InteDistance: providerCheckItem.InteDistance,\r\n            LocInteRate: providerCheckItem.LocInteRate,\r\n            LocInteScore: providerCheckItem.LocInteScore,\r\n\r\n            AllLoc: providerCheckItem.AllLoc,\r\n            ValidLoc: providerCheckItem.ValidLoc,\r\n            ValidRate: providerCheckItem.ValidRate,\r\n            ValidScore: providerCheckItem.ValidScore,\r\n\r\n            AllOnlineVehicle: providerCheckItem.AllOnlineVehicle,\r\n            DriftCount: providerCheckItem.DriftCount,\r\n            DriftRate: providerCheckItem.DriftRate,\r\n            DriftScore: providerCheckItem.DriftScore,\r\n\r\n            Score: providerCheckItem.Score,\r\n            LinkRelativeRatio: providerCheckItem.LinkRelativeRatio\r\n          };\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true;//下载数据的时候，显示正在下载数据的logo\r\n      axiosRequest.axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    formPageParams: function(msg, pageIndex, activeName, isSplitPage) {\r\n      let nType = 3,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          this.activeNameIndex = 0;\r\n          nType = this.tabNameObj.firTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\")\r\n              platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"DatePicker\") {\r\n              switch (msgItem.type) {\r\n                case \"month\":\r\n                  beginDate = msgItem.compVal + \"01\";\r\n                  endDate =\r\n                    msgItem.compVal +\r\n                    getLastDay(\r\n                      msgItem.compVal.substr(0, 4),\r\n                      msgItem.compVal.substr(4)\r\n                    );\r\n                  break;\r\n                case \"year\":\r\n                  beginDate = msgItem.compVal + \"0101\";\r\n                  endDate = msgItem.compVal + \"1231\";\r\n                  break;\r\n                case \"daterange\":\r\n                  beginDate = msgItem.compVal[0]; //时间起\r\n                  endDate = msgItem.compVal[1]; //时间止\r\n                  break;\r\n                default:\r\n              }\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n        default:\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate,\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n\r\n        isSplitPage, //默认参数 - 是否分页\r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/ProviderCheckRank.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ProviderCheckRank\"},[_c('multi-level-table-component',{staticClass:\"zone-check-multilevel\",attrs:{\"activeName\":_vm.activeName,\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4dca9814\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/ProviderCheckRank.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4dca9814\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckRank.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckRank.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4dca9814\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProviderCheckRank.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/ProviderCheckRank.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"check-manage\">\r\n    <vertical-menu :navMenu=\"navMenu\"></vertical-menu>\r\n  </div>\r\n</template>\r\n<style src=\"./checkManage.css\" type=\"text/css\"></style>\r\n<script>\r\nimport VerticalMenu from \"@/components/VerticalMenu/VerticalMenu\";\r\nimport { storageOperation } from \"@/common/common\";\r\nexport default {\r\n  name: \"CheckManage\",\r\n  components: {\r\n    VerticalMenu\r\n  },\r\n  data() {\r\n    return {\r\n      navMenu: [\r\n        {\r\n          navTitle: \"地区考核\",\r\n          indexNumber: \"1\",\r\n          navItems: [\r\n            {\r\n              routerLink: \"/Home/CheckManage/ZoneCheckRank\",\r\n              linkName: \"地区考核排名\",\r\n              indexNumber: \"1-1\"\r\n            },\r\n            {\r\n              routerLink: \"/Home/CheckManage/ZoneCheckPrint\",\r\n              linkName: \"地区考核表打印\",\r\n              indexNumber: \"1-2\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          navTitle: \"企业考核\",\r\n          indexNumber: \"2\",\r\n          navItems: [\r\n            {\r\n              routerLink: \"/Home/CheckManage/CompanyCheckRank\",\r\n              linkName: \"企业考核排名\",\r\n              indexNumber: \"2-1\"\r\n            },\r\n            {\r\n              routerLink: \"/Home/CheckManage/CompanyCheckPrint\",\r\n              linkName: \"企业考核表打印\",\r\n              indexNumber: \"2-2\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          navTitle: \"服务商考核\",\r\n          indexNumber: \"3\",\r\n          navItems: [\r\n            {\r\n              routerLink: \"/Home/CheckManage/ProviderCheckRank\",\r\n              linkName: \"服务商考核排名\",\r\n              indexNumber: \"3-1\"\r\n            },\r\n            {\r\n              routerLink: \"/Home/CheckManage/ProviderCheckPrint\",\r\n              linkName: \"服务商考核表打印\",\r\n              indexNumber: \"3-2\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          navTitle: \"考核明细\",\r\n          indexNumber: \"4\",\r\n          navItems: [\r\n            {\r\n              routerLink: \"/Home/CheckManage/ProviderCheckDetail\",\r\n              linkName: \"考核明细\",\r\n              indexNumber: \"4-1\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          navTitle: \"交通厅隐患清零通报\",\r\n          indexNumber: \"5\",\r\n          navItems: [\r\n            {\r\n              routerLink: \"/Home/CheckManage/TransportCheckRank\",\r\n              linkName: \"交通厅隐患清零\",\r\n              indexNumber: \"5-1\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  created: function() {\r\n    const breadNavs = JSON.parse(storageOperation.getItem(\"breadNavs\"));\r\n    this.$emit(\"viewIn\", breadNavs);\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"check-manage\"},[_c('vertical-menu',{attrs:{\"navMenu\":_vm.navMenu}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-19eb6a4c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-19eb6a4c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManage.css\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./CheckManage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./CheckManage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-19eb6a4c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./CheckManage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManage.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"zoneCheckSpanTableComponent\"},[_c('h3',{staticClass:\"zone-check-span-table-name\"},[_vm._v(_vm._s(_vm.tabName))]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.TabCtnt,\"span-method\":_vm.objectSpanMethod,\"border\":\"\",\"default-sort\":{prop: 'date', order: 'descending'}}},_vm._l((_vm.tabHeader),function(tabHeaderItem,tabHeaderKey){return _c('el-table-column',{key:tabHeaderKey,attrs:{\"prop\":tabHeaderKey,\"label\":tabHeaderItem,\"sortable\":\"\"}})}))],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a42c5964\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a42c5964\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./zoneCheckSpanTableComponent.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckSpanTableComponent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckSpanTableComponent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a42c5964\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ZoneCheckSpanTableComponent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"zoneCheckSpanTableComponent\">\n    <h3 class=\"zone-check-span-table-name\">{{tabName}}</h3>\n    <el-table :data=\"TabCtnt\" :span-method=\"objectSpanMethod\" border style=\"width: 100%\" :default-sort=\"{prop: 'date', order: 'descending'}\">\n      <el-table-column :prop=\"tabHeaderKey\" :label=\"tabHeaderItem\" sortable v-for=\"(tabHeaderItem,tabHeaderKey) in tabHeader\" :key=\"tabHeaderKey\">\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<style src=\"./zoneCheckSpanTableComponent.css\" type=\"text/css\">\n  \n</style>\n\n<script>\n  export default {\n    name: 'zoneCheckSpanTableComponent',\n    props: ['tabName', 'TabCtnt', 'tabHeader'],\n    data() {\n      return {}\n    },\n    methods: {\n      objectSpanMethod({\n        row,\n        column,\n        rowIndex,\n        columnIndex\n      }) {\n        // 画最后的备注栏\n        if (rowIndex === 9) {\n          if (columnIndex === 1) {\n            return [1, 6];\n          } else {\n            return [0, 0];\n          }\n        }\n        // 画1，2,4，5列的合并栏\n        else if (columnIndex === 1 || columnIndex === 2 || columnIndex === 4 || columnIndex === 5) {\n          // 画第2行的单个单元格\n          if (rowIndex === 2) {\n            return {\n              rowspan: 1,\n              colspan: 1\n            }\n          } else if ((rowIndex < 2) && (rowIndex % 2 === 0)) { // 画第1，2行的合并单元格\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else if ((rowIndex > 2 && rowIndex < 8) && ((rowIndex - 1) % 2 === 0)) { // 画第4，5行,6，7行，8,9行的合并单元格\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        } else if (columnIndex === 0) { // 画第1列的纵向合并栏\n          if (rowIndex === 0) {\n            return {\n              rowspan: 10,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        } else if (columnIndex === 6) { // 画第7列的纵向合并栏\n          if (rowIndex === 0) {\n            return {\n              rowspan: 9,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent.vue","<template>\r\n  <div class=\"zoneCheckPrint\">\r\n    <el-row>\r\n      <el-col :span=\"4\" class=\"noprint\">\r\n        <el-tree \r\n        :data=\"zoneArray.zoneData\" \r\n        :props=\"zoneArray.defaultProps\" \r\n        class=\"zone-check-eltree\" \r\n        :default-expanded-keys=\"[1]\"\r\n        @node-click=\"handleNodeClick\"></el-tree>\r\n      </el-col>\r\n      <el-col :span=\"20\">\r\n        <el-row class=\"noprint\">\r\n          <input-component\r\n          :labelName=\"searchItem.labelName\" \r\n          :compVal=\"searchItem.compVal\"\r\n          :compId=\"searchItem.compId\"\r\n          :labelId=\"searchItem.labelId\" \r\n          v-if=\"searchItem.searchType === searchType.input\" \r\n          v-for=\"(searchItem, searchKey) of tabCtntList.searchCreteria\" \r\n          :key=\"searchKey\"\r\n          v-on:inputChange=\"inputChange\"></input-component>\r\n          <select-component\r\n          :options=\"searchItem.options\"\r\n          :labelName=\"searchItem.labelName\"\r\n          :compVal=\"searchItem.compVal\"\r\n          :labelId=\"searchItem.labelId\"\r\n          v-else-if=\"searchItem.searchType === searchType.select\"\r\n          v-on:selectChange=\"selectChange\"></select-component>\r\n          <checkbox-component \r\n          :options=\"searchItem.options\" \r\n          :labelName=\"searchItem.labelName\" \r\n          :compVal=\"searchItem.compVal\" \r\n          :labelId=\"searchItem.labelId\" \r\n          v-else-if=\"searchItem.searchType === searchType.checkbox\"\r\n          v-on:checkboxChange=\"checkboxChange\"></checkbox-component>\r\n          <single-chkbox-component\r\n          :labelName=\"searchItem.labelName\" \r\n          :compVal=\"searchItem.compVal\" \r\n          :labelId=\"searchItem.labelId\" \r\n          v-else-if=\"searchItem.searchType === searchType.singleChkbox\"\r\n          v-on:singleChkboxChange=\"singleChkboxChange\"></single-chkbox-component>\r\n          <!--注释人：向浩\r\n          注释时间：2018-06-13\r\n          注释原因：封装年份，月份选择器\r\n          -->\r\n          <single-date-picker-component\r\n          :labelName=\"searchItem.labelName\" \r\n          :compVal=\"searchItem.compVal\" \r\n          :labelId=\"searchItem.labelId\"\r\n          :type =\"searchItem.type\"\r\n          :placeholder=\"searchItem.placeholder\"\r\n          :format=\"searchItem.format\"\r\n          :valueformat=\"searchItem.valueformat\"\r\n          v-else-if=\"searchItem.searchType === searchType.singleDatePicker\"\r\n          v-on:singleDatePickerChange=\"singleDatePickerChange\"></single-date-picker-component>\r\n          <!-- Add from date to end date -->\r\n          <date-picker-component \r\n          :labelName=\"searchItem.labelName\" \r\n          :compVal=\"searchItem.compVal\" \r\n          :labelId=\"searchItem.labelId\"\r\n          v-else-if=\"searchItem.searchType === searchType.fromTodatePicker\"\r\n          v-on:datePickerChange=\"datePickerChange\"></date-picker-component>\r\n          <el-row>\r\n            <!-- <button-component \r\n            :iconName=\"btnItem.iconName\" \r\n            :btnName=\"btnItem.btnName\" \r\n            v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" \r\n            :key=\"btnKey\"></button-component> -->\r\n            <!--注释人：向浩\r\n                注释时间：2018-06-08\r\n                注释原因: 参考了multiLevelTableComponent来修改了按钮事件(由于不方便调用button单击事件，所以取消将button封装为一个组件)\r\n            -->\r\n          <el-button \r\n          type=\"primary\" \r\n          :icon=\"btnItem.iconName\" \r\n          v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" \r\n          :key=\"btnKey\" \r\n          @click=\"handleBtnClick(btnItem.btnId)\" \r\n          class=\"btn-com\"\r\n          :disabled=btnItem.isDisabled>{{btnItem.btnName}}</el-button>\r\n          </el-row>\r\n        </el-row>\r\n        <!-- startprint -->\r\n        <!-- <span startprint=\"\" style=\"display: none;\"></span> -->\r\n        <div class=\"print-part\" v-loading=\"tabCtntList.loading\">\r\n          <zone-check-span-table-component \r\n          :tabName=\"tabCtntList.tabDetail.tabName\" \r\n          :TabCtnt=\"tabCtntList.tabDetail.TabCtnt\" \r\n          :tabHeader=\"tabCtntList.tabDetail.tabHeader\"></zone-check-span-table-component>\r\n          <!-- endprint -->\r\n          <!-- <span endprint=\"\" style=\"display: none;\"></span> -->\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport InputComponent from \"@/components/InputComponent/InputComponent\";\r\nimport SelectComponent from \"@/components/SelectComponent/SelectComponent\";\r\nimport CheckboxComponent from \"@/components/CheckboxComponent/CheckboxComponent\";\r\nimport SingleChkboxComponent from \"@/components/SingleChkboxComponent/SingleChkboxComponent\";\r\nimport ButtonComponent from \"@/components/ButtonComponent/ButtonComponent\";\r\nimport ZoneCheckSpanTableComponent from \"@/components/ZoneCheckSpanTableComponent/ZoneCheckSpanTableComponent\";\r\nimport DatePickerComponent from \"@/components/DatePickerComponent/DatePickerComponent\";\r\nimport SingleDatePickerComponent from \"@/components/SingleDatePickerComponent/SingleDatePickerComponent\";\r\nimport {\r\n  axiosRequest,\r\n  formSourceData,\r\n  getLastMonth,\r\n  getLastDay\r\n} from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"zoneCheckPrint\",\r\n  components: {\r\n    InputComponent,\r\n    SelectComponent,\r\n    CheckboxComponent,\r\n    SingleChkboxComponent,\r\n    ButtonComponent,\r\n    ZoneCheckSpanTableComponent,\r\n    DatePickerComponent,\r\n    SingleDatePickerComponent\r\n  },\r\n  data() {\r\n    return {\r\n      searchType: {\r\n        input: \"input\",\r\n        select: \"select\",\r\n        checkbox: \"checkbox\",\r\n        singleChkbox: \"singleChkbox\",\r\n        datePicker: \"datePicker\",\r\n        singleDatePicker: \"singleDatePicker\", //单个日期组件\r\n        fromTodatePicker: \"fromTodatePicker\",\r\n        treeCheckbox: \"treeCheckbox\"\r\n      },\r\n      selectType: {\r\n        Year: \"Year\",\r\n        Month: \"Month\",\r\n        CheckType: \"CheckType\",\r\n        DatePicker: \"DatePicker\"\r\n      },\r\n      getZoneToUserIDUrl: commonConfig.rootUrl + commonConfig.GetZoneToUserID, // 用户地区树\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone, //查询请求接口\r\n      preSearchType: [\"ZoneId\", \"UnitId\", \"VehicleId\", \"PlatformId\"],\r\n      // 采用手动校正来将返回的结果覆盖到指定的列\r\n      munalMappingTab: {\r\n        InstallRateScore: 0,\r\n        UplineRateScore: 2,\r\n        DriftRateScore: 3,\r\n        LocInteRateScore: 5,\r\n        ValidRateScore: 7\r\n      },\r\n      tabCtntList: {\r\n        loading: false,\r\n        btnEvents: [\r\n          {\r\n            iconName: \"el-icon-search\",\r\n            btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"查询\",\r\n            isDisabled: false //控制查询数据按钮初始状态为enabled\r\n          },\r\n          {\r\n            iconName: \"el-icon-printer\",\r\n            btnId: \"print\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"打印\",\r\n            isDisabled: false //控制查询数据按钮初始状态为enabled\r\n          }\r\n        ],\r\n        searchCreteria: [\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"地区:\",\r\n            labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"河北省\",\r\n            compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n          },\r\n          {\r\n            searchType: \"select\",\r\n            labelName: \"考核类型:\",\r\n            labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: 1, //默认选择月度考核\r\n            options: [\r\n              {\r\n                value: 1,\r\n                label: \"月度考核\",\r\n                searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelName: \"月份\",\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: getLastMonth(),\r\n                type: \"month\",\r\n                placeholder: \"请选择月份\",\r\n                format: \"yyyy-MM\",\r\n                valueformat: \"yyyyMM\"\r\n              },\r\n              {\r\n                value: 2,\r\n                label: \"年度考核\",\r\n                searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: \"\",\r\n                labelName: \"年份\",\r\n                type: \"year\",\r\n                placeholder: \"请选择年份\",\r\n                format: \"yyyy\",\r\n                valueformat: \"yyyy\"\r\n              },\r\n              {\r\n                value: 3,\r\n                label: \"当月实时考核\",\r\n                searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: \"\",\r\n                labelName: \"时间起 - 时间至\",\r\n                type: \"daterange\",\r\n                placeholder: \"请选择日期起 - 日期至\",\r\n                format: \"yyyy-MM-dd\",\r\n                valueformat: \"yyyyMMdd\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            searchType: \"singleDatePicker\",\r\n            labelName: \"月份:\",\r\n            labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: getLastMonth(),\r\n            type: \"month\",\r\n            placeholder: \"请选择月份\",\r\n            format: \"yyyy-MM\",\r\n            valueformat: \"yyyyMM\"\r\n          },\r\n          {\r\n            searchType: \"checkbox\",\r\n            labelName: \"车辆类型：\",\r\n            labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: [],\r\n            options: [\r\n              {\r\n                value: 0x0001,\r\n                label: \"三类以上班线客车\"\r\n              },\r\n              {\r\n                value: 0x0004,\r\n                label: \"旅游客车\"\r\n              },\r\n              {\r\n                value: 0x100000,\r\n                label: \"包车客车\"\r\n              },\r\n              {\r\n                value: 0x0080, // this value is customized by Perry,not securate\r\n                label: \"危险品运输车\"\r\n              },\r\n              {\r\n                value: 0x100000,\r\n                label: \"包车客车\"\r\n              }\r\n            ]\r\n          },\r\n          // {\r\n          //   searchType: \"checkbox\",\r\n          //   labelName: \"车辆状态:\",\r\n          //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n          //   compVal: [],\r\n          //   options: [{\r\n          //       value: 0x2,\r\n          //       label: \"营运\"\r\n          //     },\r\n          //     {\r\n          //       value: 0x4,\r\n          //       label: \"停运\"\r\n          //     },\r\n          //     {\r\n          //       value: 0x10,\r\n          //       label: \"转出\"\r\n          //     },\r\n          //     {\r\n          //       value: 0x40,\r\n          //       label: \"歇业\"\r\n          //     },\r\n          //     {\r\n          //       value: 0x100,\r\n          //       label: \"锁定\"\r\n          //     }\r\n          //   ]\r\n          // },\r\n          {\r\n            searchType: \"singleChkbox\",\r\n            labelName: \"是否包含下級\",\r\n            labelId: \"IsIncludeLower\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: true\r\n          }\r\n        ],\r\n        tabDetail: {\r\n          tabName: \"联网联控系统考核表（道路运输管理机构）\",\r\n          tabHeader: {\r\n            chkObject: \"考核对象\",\r\n            chkCtnt: \"考核内容\",\r\n            score: \"分值\",\r\n            scoreCreteria: \"计分标准\",\r\n            rate: \"指标比率\",\r\n            getScore: \"得分\",\r\n            amount: \"总分\"\r\n          },\r\n          TabCtnt: [\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"车辆入网率\",\r\n              score: \"5\",\r\n              scoreCreteria: \"入网率*5。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"车辆入网率\",\r\n              score: \"5\",\r\n              scoreCreteria: \"低于90%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"车辆上线率\",\r\n              score: \"10\",\r\n              scoreCreteria: \"上线率*10。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"卫星定位漂移车辆率\",\r\n              score: \"15\",\r\n              scoreCreteria: \"15-卫星定位漂移车辆率*15；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"卫星定位漂移车辆率\",\r\n              score: \"15\",\r\n              scoreCreteria: \"高于5%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"轨迹完整率\",\r\n              score: \"40\",\r\n              scoreCreteria: \"轨迹完整率*40；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"轨迹完整率\",\r\n              score: \"40\",\r\n              scoreCreteria: \"低于70%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"数据合格率\",\r\n              score: \"30\",\r\n              scoreCreteria: \"数据合格率*30；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"管理部门监管平台\",\r\n              chkCtnt: \"数据合格率\",\r\n              score: \"30\",\r\n              scoreCreteria: \"低于80%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt:\r\n                \"<p>注：</p>\" +\r\n                \"<p>①因上级监管平台或网络运营商等情况造成断线并提前报备的，不计为断线时长；</p>\" +\r\n                \"<p>②平台上传的车辆数据存在车牌号、车牌颜色、日期时间、经度、纬度、速度、方向、海拔、车辆状态、报警状态等错误信息的，数据判断为不合格。具体参照《JT/T 809-2011》4.5.8相关信息数据体结构之规则；</p>\" +\r\n                \"<p>③数据合理参考范围：日期时间：≤当前时间；经度范围：73°33′E至135°05′E；纬度范围：3°51′N至53°33′N；速度：0至160间；海拔：-200至6500之间；</p>\" +\r\n                \"<p>④各省可结合地方实际情况优化考核内容及分值。</p>\",\r\n              score: \"\",\r\n              scoreCreteria: \"\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      zoneArray: {\r\n        zoneData: [\r\n          // {\r\n          //   label: \"河北省\",\r\n          //   children: [\r\n          //     {\r\n          //       label: \"長沙市\",\r\n          //       children: [\r\n          //         {\r\n          //           label: \"市辖区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"芙蓉区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"天心区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"岳麓区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"开福区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"雨花区\"\r\n          //         },\r\n          //         {\r\n          //           label: \"长沙区\"\r\n          //         }\r\n          //       ]\r\n          //     }\r\n          //   ]\r\n          // }\r\n        ],\r\n        defaultProps: {\r\n          children: \"children\",\r\n          label: \"label\",\r\n          isLeaf: \"leaf\"\r\n        }\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getZoneToUserID();\r\n  },\r\n  methods: {\r\n    // 获取用户地区树\r\n    getZoneToUserID: function() {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      axiosRequest.axiosGet(this.getZoneToUserIDUrl)\r\n        .then(function(response) {\r\n          /**\r\n             * Id\r\n            :\r\n            43010000\r\n            Level\r\n            :\r\n            2\r\n            UpZoneId\r\n            :\r\n            43000000\r\n            ZoneName\r\n            :\r\n            \"长沙市\"\r\n             */\r\n          // 封装一个函数根据数据源来组装需要的数据集\r\n          self.zoneArray.zoneData = formSourceData(response.data);\r\n        })\r\n        .catch();\r\n    },\r\n    // 处理Input子组件传递上来的最新值\r\n    inputChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理select子组件传递上来的最新值\r\n    selectChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n      if (msg.labelId === this.selectType.CheckType) {\r\n        //判断点击的单选框为考核类型\r\n        for (let searchItem in this.tabCtntList.searchCreteria) {\r\n          let searchTemp = this.tabCtntList.searchCreteria[searchItem];\r\n          if (searchTemp.labelId === this.selectType.DatePicker) {\r\n            //找到日期选择器的配置项singleDatePicker\r\n            this.tabCtntList.searchCreteria[searchItem] = this.searchCheckType(msg.compVal, msg.options);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 封装查找选中的考核类型的函数\r\n    searchCheckType: function(value, options) {\r\n      for (let optItem of options) {\r\n        if (optItem.value === value) {\r\n          return optItem\r\n        }\r\n      }\r\n    },\r\n    // 处理checkbox子组件传递上来的最新值\r\n    checkboxChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理singlecheckbox子组件传递上来的最新值\r\n    singleChkboxChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理datePicker子组件传递上来的最新值\r\n    datePickerChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理datePicker子组件传递上来的最新值\r\n    singleDatePickerChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 将子组件传上来的最新值赋给对应的数据集封装为一个函数\r\n    mapNewToSourceData: function(msg) {\r\n      for (let searchItem of this.tabCtntList.searchCreteria) {\r\n        if (searchItem.labelId === msg.labelId) {\r\n          if (this.preSearchType.indexOf(msg.labelId) >= 0) {\r\n            searchItem.compVal = msg.compVal;\r\n            searchItem.compId = msg.compId;\r\n          } else {\r\n            searchItem.compVal = msg.compVal;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    handleBtnClick: function(btnId) {\r\n      switch (btnId) {\r\n        case commonConfig.btnEventsId.search:\r\n          this.handleClickSearch(this.tabCtntList.searchCreteria, 1);\r\n          break;\r\n        case commonConfig.btnEventsId.print:\r\n          this.handleClickPrint();\r\n          break;\r\n      }\r\n    },\r\n    //处理子组件触发的查询事件\r\n    handleClickSearch: function(msg, currentPage) {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(msg, currentPage);\r\n      self.tabCtntList.loading = true; //加载数据的时候，显示加载数据的logo\r\n      self.tabCtntList.btnEvents[0].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n      self.tabCtntList.btnEvents[1].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const zonecheckPrintTemp = response.data.TotalList;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.InstallRateScore\r\n          ].rate =\r\n            zonecheckPrintTemp.InstallRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.InstallRateScore\r\n          ].getScore =\r\n            zonecheckPrintTemp.InstallScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.InstallRateScore\r\n          ].amount =\r\n            zonecheckPrintTemp.Score;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.UplineRateScore\r\n          ].rate =\r\n            zonecheckPrintTemp.UplineRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.UplineRateScore\r\n          ].getScore =\r\n            zonecheckPrintTemp.UplineScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.DriftRateScore\r\n          ].rate =\r\n            zonecheckPrintTemp.DriftRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.DriftRateScore\r\n          ].getScore =\r\n            zonecheckPrintTemp.DriftScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.LocInteRateScore\r\n          ].rate =\r\n            zonecheckPrintTemp.LocInteRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.LocInteRateScore\r\n          ].getScore =\r\n            zonecheckPrintTemp.LocInteScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.ValidRateScore\r\n          ].rate =\r\n            zonecheckPrintTemp.ValidRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[\r\n            self.munalMappingTab.ValidRateScore\r\n          ].getScore =\r\n            zonecheckPrintTemp.ValidScore;\r\n          self.tabCtntList.loading = false;\r\n          self.tabCtntList.btnEvents[0].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n          self.tabCtntList.btnEvents[1].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    handleClickPrint: function() {\r\n      //处理子组件触发的打印事件\r\n      // 1. 第一种打印方法行不通，因为需要覆盖原来的页面内容\r\n      // let bdhtml = window.document.body.innerHTML,\r\n      //     sprnstr = '<span startprint=\"\" style=\"display: none;\"></span>',\r\n      //     eprnstr = '<span endprint=\"\" style=\"display: none;\"></span>';\r\n      // let prnhtml=bdhtml.substr(bdhtml.indexOf(sprnstr)+sprnstr.length);\r\n      // prnhtml=prnhtml.substring(0,prnhtml.indexOf(eprnstr));\r\n      // window.document.body.innerHTML=prnhtml;\r\n      // window.print();\r\n      // 2. 第二种方法,采用css2里面的@media print\r\n      window.print();\r\n    },\r\n    formPageParams: function(msg, pageIndex) {\r\n      let nType = 1,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      for (let msgItem of msg) {\r\n        if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n        else if (msgItem.labelId === \"DatePicker\") {\r\n          switch (msgItem.type) {\r\n            case \"month\":\r\n              beginDate = msgItem.compVal + \"01\";\r\n              endDate =\r\n                msgItem.compVal +\r\n                getLastDay(\r\n                  msgItem.compVal.substr(0, 4),\r\n                  msgItem.compVal.substr(4)\r\n                );\r\n              break;\r\n            case \"year\":\r\n              beginDate = msgItem.compVal + \"0101\";\r\n              endDate = msgItem.compVal + \"1231\";\r\n              break;\r\n            case \"daterange\":\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n              break;\r\n            default:\r\n          }\r\n        } else if (msgItem.labelId === \"CarType\") {\r\n          for (let carItem of msgItem.compVal) {\r\n            carType += carItem;\r\n          }\r\n        } else if (msgItem.labelId === \"IsIncludeLower\")\r\n          isIncludeLower = Number(msgItem.compVal);\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate, //入网明细 - 日期止\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n        \r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理左边地区点击事件\r\n    handleNodeClick: function(data) {\r\n      // 将该地区赋值给地区输入框\r\n      for (let msgItem of this.tabCtntList.searchCreteria) {\r\n        if (msgItem.labelId === \"ZoneId\") {\r\n          msgItem.compVal = data.label;\r\n          msgItem.compId = data.Id;\r\n        }\r\n      }\r\n      this.handleClickSearch(this.tabCtntList.searchCreteria, 1); //不仅需要替换地区的内容，而且还需要得到结果\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"zoneCheckPrint\"},[_c('el-row',[_c('el-col',{staticClass:\"noprint\",attrs:{\"span\":4}},[_c('el-tree',{staticClass:\"zone-check-eltree\",attrs:{\"data\":_vm.zoneArray.zoneData,\"props\":_vm.zoneArray.defaultProps,\"default-expanded-keys\":[1]},on:{\"node-click\":_vm.handleNodeClick}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":20}},[_c('el-row',{staticClass:\"noprint\"},[_vm._l((_vm.tabCtntList.searchCreteria),function(searchItem,searchKey){return (searchItem.searchType === _vm.searchType.input)?_c('input-component',{key:searchKey,attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"compId\":searchItem.compId,\"labelId\":searchItem.labelId},on:{\"inputChange\":_vm.inputChange}}):(searchItem.searchType === _vm.searchType.select)?_c('select-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"selectChange\":_vm.selectChange}}):(searchItem.searchType === _vm.searchType.checkbox)?_c('checkbox-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"checkboxChange\":_vm.checkboxChange}}):(searchItem.searchType === _vm.searchType.singleChkbox)?_c('single-chkbox-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"singleChkboxChange\":_vm.singleChkboxChange}}):(searchItem.searchType === _vm.searchType.singleDatePicker)?_c('single-date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId,\"type\":searchItem.type,\"placeholder\":searchItem.placeholder,\"format\":searchItem.format,\"valueformat\":searchItem.valueformat},on:{\"singleDatePickerChange\":_vm.singleDatePickerChange}}):(searchItem.searchType === _vm.searchType.fromTodatePicker)?_c('date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"datePickerChange\":_vm.datePickerChange}}):_vm._e()}),_vm._v(\" \"),_c('el-row',_vm._l((_vm.tabCtntList.btnEvents),function(btnItem,btnKey){return _c('el-button',{key:btnKey,staticClass:\"btn-com\",attrs:{\"type\":\"primary\",\"icon\":btnItem.iconName,\"disabled\":btnItem.isDisabled},on:{\"click\":function($event){_vm.handleBtnClick(btnItem.btnId)}}},[_vm._v(_vm._s(btnItem.btnName))])}))],2),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tabCtntList.loading),expression:\"tabCtntList.loading\"}],staticClass:\"print-part\"},[_c('zone-check-span-table-component',{attrs:{\"tabName\":_vm.tabCtntList.tabDetail.tabName,\"TabCtnt\":_vm.tabCtntList.tabDetail.TabCtnt,\"tabHeader\":_vm.tabCtntList.tabDetail.tabHeader}})],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-472c2e47\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-472c2e47\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckPrint.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckPrint.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-472c2e47\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ZoneCheckPrint.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/ZoneCheckPrint.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"CompanyCheckRank\">\r\n    <multi-level-table-component \r\n    :activeName=\"activeName\" \r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"zone-check-multilevel\"\r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"></multi-level-table-component>\r\n    <p class=\"check-footer-p\">\r\n      注：1、仅针对两客一危进行统计；总分能按升序、降序排列，默认按降序排列；\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelTableComponent from \"@/components/MultiLevelTableComponent/MultiLevelTableComponent\";\r\nimport { axiosRequest, getLastMonth, getLastDay } from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"CompanyCheckRank\",\r\n  components: {\r\n    MultiLevelTableComponent\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"report_companyCheckRank_table\",\r\n      activeNameIndex: 0,\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone,\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一大列的满分得分\r\n      columnFullScore: {\r\n        rwl: 5,\r\n        sxl: 5,\r\n        gjwzl: 15,\r\n        sjhgl: 15,\r\n        wxpyl: 10,\r\n        pjcscs: 20,\r\n        pjpjsc: 20,\r\n        ptcgxyl: 10\r\n      },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      companyCheckSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // tabName作为标识符\r\n      tabNameObj: {\r\n        firTab: {\r\n          tabLabel: \"企业考核排名\",\r\n          tabName: \"report_companyCheckRank_table\", //将作为标识符来区分\r\n          nType: 2 //根据重构前的请求，可以看到nType 为2\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return [\r\n        {\r\n          tabLabel: this.tabNameObj.firTab.tabLabel,\r\n          tabName: this.tabNameObj.firTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\"\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              labelName: \"车辆类型：\",\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //       value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n            // {\r\n            //   searchType: \"singleChkbox\",\r\n            //   labelName: \"时候包含下级\",\r\n            //   labelId: \"IsIncludeLower\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: \"\"\r\n            // }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZName\",\r\n              headerVal: \"企业所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"UnitName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"车辆入网率得分（\" + this.columnFullScore.rwl + \"）\",\r\n              // subHeaders: {\r\n              //   AllInstallCount: \"应入网\",\r\n              //   InstallCount: \"已入网\",\r\n              //   InstallRate: \"车辆入网率\",\r\n              //   InstallScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllInstallCount\",\r\n                  headerVal: \"应入网\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InstallCount\",\r\n                  headerVal: \"已入网\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InstallRate\",\r\n                  headerVal: \"车辆入网率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"InstallScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"车辆上线率得分（\" + this.columnFullScore.sxl + \"）\",\r\n              // subHeaders: {\r\n              //   InnetCount: \"应上线\",\r\n              //   UplineCount: \"已上线\",\r\n              //   UplineRate: \"车辆上线率\",\r\n              //   UplineScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"InnetCount\",\r\n                  headerVal: \"应上线\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineCount\",\r\n                  headerVal: \"已上线\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"UplineRate\",\r\n                  headerVal: \"车辆上线率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"轨迹完整率得分（\" + this.columnFullScore.gjwzl + \"）\",\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllDistance\",\r\n                  headerVal: \"总里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InteDistance\",\r\n                  headerVal: \"轨迹完整里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"LocInteRate\",\r\n                  headerVal: \"轨迹完整率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LocInteScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"数据合格率得分（\" + this.columnFullScore.sjhgl + \"）\",\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllLoc\",\r\n                  headerVal: \"总条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidLoc\",\r\n                  headerVal: \"合格条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidRate\",\r\n                  headerVal: \"数据合格率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ValidScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName:\r\n                \"卫星定位漂移车辆率得分（\" + this.columnFullScore.wxpyl + \"）\",\r\n              // subHeaders: {\r\n              //   DriftInnetCount: \"上线车辆数\",\r\n              //   DriftCount: \"漂移车辆数\",\r\n              //   DriftRate: \"卫星定位漂移车辆率\",\r\n              //   DriftScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"DriftInnetCount\",\r\n                  headerVal: \"上线车辆数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftCount\",\r\n                  headerVal: \"漂移车辆数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"DriftRate\",\r\n                  headerVal: \"卫星定位漂移车辆率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName:\r\n                \"平均车辆超速次数得分（\" + this.columnFullScore.pjcscs + \"）\",\r\n              // subHeaders: {\r\n              //   AvgSpeedNum: \"总超速次数\",\r\n              //   AvgSpeedNum: \"平均车辆超速次数\",\r\n              //   ZoneAvgSpeedNum: \"地区平均车辆超速次数\",\r\n              //   LocInteScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AvgSpeedNum\",\r\n                  headerVal: \"总超速次数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"AvgSpeedNum\",\r\n                  headerVal: \"平均车辆超速次数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ZoneAvgSpeedNum\",\r\n                  headerVal: \"地区平均车辆超速次数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"LocInteScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName:\r\n                \"平均疲劳驾驶时长得分（\" + this.columnFullScore.pjpjsc + \"）\",\r\n              // subHeaders: {\r\n              //   AvgFatiTime: \"总疲劳驾驶时长\",\r\n              //   AvgFatiTime: \"平均疲劳驾驶时长\",\r\n              //   ZoneAvgFatiTime: \"地区平均疲劳驾驶时长\",\r\n              //   AvgFatiTimeScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AvgFatiTime\",\r\n                  headerVal: \"总疲劳驾驶时长\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"AvgFatiTime\",\r\n                  headerVal: \"平均疲劳驾驶时长\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ZoneAvgFatiTime\",\r\n                  headerVal: \"地区平均疲劳驾驶时长\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"AvgFatiTimeScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName:\r\n                \"平台查岗响应率得分（\" + this.columnFullScore.ptcgxyl + \"）\",\r\n              // subHeaders: {\r\n              //   CheckCNT: \"查岗次数\",\r\n              //   ResponseCNT: \"查岗响应次数\",\r\n              //   CheckRate: \"平台查岗响应率\",\r\n              //   CheckScore: \"得分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"CheckCNT\",\r\n                  headerVal: \"查岗次数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ResponseCNT\",\r\n                  headerVal: \"查岗响应次数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"CheckRate\",\r\n                  headerVal: \"平台查岗响应率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"CheckScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              headerKey: \"Score\",\r\n              headerVal: \"总分\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LinkRelativeRatio\",\r\n              headerVal: \"环比增加\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    handleClickSearch: function(msg) {\r\n      //处理子组件触发的查询事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, 'xtsz_jchzd_cx'); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.companyCheckSourceData = [];\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const companyCheckRankTemp = response.data.DetailList;\r\n          for (let companyCheckItem of companyCheckRankTemp) {\r\n            self.companyCheckSourceData.push(\r\n              self.pushSourceData(companyCheckItem, msg.activeName)\r\n            );\r\n          }\r\n          // 加上合计这一行\r\n          self.countData = self.pushSourceData(\r\n            response.data.TotalList,\r\n            msg.activeName\r\n          );\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt = self.companyCheckSourceData;\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt.push(self.countData);\r\n          self.tabCtntList[self.activeNameIndex].total = response.data.CountTotal;\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n          self.tabCtntList[self.activeNameIndex].btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(companyCheckItem, activeName) {\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          return {\r\n            sybid: companyCheckItem.sybid,\r\n            ZName: companyCheckItem.ZName,\r\n            UnitName: companyCheckItem.UnitName,\r\n            AllInstallCount: companyCheckItem.AllInstallCount,\r\n            InstallCount: companyCheckItem.InstallCount,\r\n            InstallRate: companyCheckItem.InstallRate,\r\n            InstallScore: companyCheckItem.InstallScore,\r\n            InnetCount: companyCheckItem.InnetCount,\r\n            UplineCount: companyCheckItem.UplineCount,\r\n            UplineRate: companyCheckItem.UplineRate,\r\n            UplineScore: companyCheckItem.UplineScore,\r\n\r\n            AllDistance: companyCheckItem.AllDistance,\r\n            InteDistance: companyCheckItem.InteDistance,\r\n            LocInteRate: companyCheckItem.LocInteRate,\r\n            LocInteScore: companyCheckItem.LocInteScore,\r\n\r\n            AllLoc: companyCheckItem.AllLoc,\r\n            ValidLoc: companyCheckItem.ValidLoc,\r\n            ValidRate: companyCheckItem.ValidRate,\r\n            ValidScore: companyCheckItem.ValidScore,\r\n\r\n            DriftInnetCount: companyCheckItem.DriftInnetCount,\r\n            DriftCount: companyCheckItem.DriftCount,\r\n            DriftRate: companyCheckItem.DriftRate,\r\n            DriftScore: companyCheckItem.DriftRate,\r\n\r\n            AvgSpeedNum: companyCheckItem.AvgSpeedNum,\r\n            AvgSpeedNum: companyCheckItem.AvgSpeedNum,\r\n            ZoneAvgSpeedNum: companyCheckItem.ZoneAvgSpeedNum,\r\n            LocInteScore: companyCheckItem.LocInteScore,\r\n\r\n            AvgFatiTime: companyCheckItem.AvgFatiTime,\r\n            AvgFatiTime: companyCheckItem.AvgFatiTime,\r\n            ZoneAvgFatiTime: companyCheckItem.ZoneAvgFatiTime,\r\n            AvgFatiTimeScore: companyCheckItem.AvgFatiTimeScore,\r\n\r\n            CheckCNT: companyCheckItem.CheckCNT,\r\n            ResponseCNT: companyCheckItem.ResponseCNT,\r\n            CheckRate: companyCheckItem.CheckRate,\r\n            CheckScore: companyCheckItem.CheckScore,\r\n            Score: companyCheckItem.Score,\r\n            LinkRelativeRatio: companyCheckItem.LinkRelativeRatio\r\n          };\r\n        default:\r\n      }\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true;//下载数据的时候，显示正在下载数据的logo\r\n      axiosRequest\r\n        .axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n         self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    formPageParams: function(msg, pageIndex, activeName, isSplitPage) {\r\n      let nType = 2,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          this.activeNameIndex = 0;\r\n          nType = this.tabNameObj.firTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"DatePicker\") {\r\n              switch (msgItem.type) {\r\n                case \"month\":\r\n                  beginDate = msgItem.compVal + \"01\";\r\n                  endDate =\r\n                    msgItem.compVal +\r\n                    getLastDay(\r\n                      msgItem.compVal.substr(0, 4),\r\n                      msgItem.compVal.substr(4)\r\n                    );\r\n                  break;\r\n                case \"year\":\r\n                  beginDate = msgItem.compVal + \"0101\";\r\n                  endDate = msgItem.compVal + \"1231\";\r\n                  break;\r\n                case \"daterange\":\r\n                  beginDate = msgItem.compVal[0]; //时间起\r\n                  endDate = msgItem.compVal[1]; //时间止\r\n                  break;\r\n                default:\r\n              }\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"UnitId\")\r\n              unitId = Number(msgItem.compId);\r\n          }\r\n        default:\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate,\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n\r\n        isSplitPage, //默认参数 - 是否分页\r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/CompanyCheckRank.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"CompanyCheckRank\"},[_c('multi-level-table-component',{staticClass:\"zone-check-multilevel\",attrs:{\"activeName\":_vm.activeName,\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('p',{staticClass:\"check-footer-p\"},[_vm._v(\"\\n    注：1、仅针对两客一危进行统计；总分能按升序、降序排列，默认按降序排列；\\n  \")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-453b121d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/CompanyCheckRank.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-453b121d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanyCheckRank.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanyCheckRank.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-453b121d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CompanyCheckRank.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/CompanyCheckRank.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"spanTableComponent\"},[_c('h3',{staticClass:\"span-table-name\"},[_vm._v(_vm._s(_vm.tabName))]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.TabCtnt,\"span-method\":_vm.objectSpanMethod,\"border\":\"\",\"default-sort\":{prop: 'date', order: 'descending'}}},_vm._l((_vm.tabHeader),function(tabHeaderItem,tabHeaderKey){return _c('el-table-column',{key:tabHeaderKey,attrs:{\"prop\":tabHeaderKey,\"label\":tabHeaderItem,\"sortable\":\"\"}})}))],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-511a5229\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/SpanTableComponent/SpanTableComponent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-511a5229\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./spanTableComponent.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SpanTableComponent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SpanTableComponent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-511a5229\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SpanTableComponent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/SpanTableComponent/SpanTableComponent.vue\n// module id = null\n// module chunks = ","<template>\n<div class=\"spanTableComponent\">\n  <h3 class=\"span-table-name\">{{tabName}}</h3>\n  <el-table :data=\"TabCtnt\" :span-method=\"objectSpanMethod\" border style=\"width: 100%\" :default-sort=\"{prop: 'date', order: 'descending'}\">\n    <el-table-column :prop=\"tabHeaderKey\" :label=\"tabHeaderItem\" sortable v-for=\"(tabHeaderItem,tabHeaderKey) in tabHeader\" :key=\"tabHeaderKey\">\n    </el-table-column>\n  </el-table>\n</div>\n</template>\n\n<style src=\"./spanTableComponent.css\" type=\"text/css\">\n  \n</style>\n\n<script>\n  export default {\n    name: 'SpanTableComponent',\n    props: ['tabName', 'TabCtnt', 'tabHeader'],\n    data() {\n      return {}\n    },\n    methods: {\n      objectSpanMethod({\n        row,\n        column,\n        rowIndex,\n        columnIndex\n      }) {\n        if (rowIndex === 9) {\n          if (columnIndex === 1) {\n            return [1,6];\n          } else {\n            return [0, 0];\n          }\n        }\n        else if (columnIndex === 1 || columnIndex === 2 || columnIndex === 4 || columnIndex === 5) {\n          if (rowIndex === 0) {\n            return {\n              rowspan: 1,\n              colspan: 1\n            }\n          } else if ((rowIndex - 1) % 2 === 0) {\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n        else if (columnIndex === 0) {\n          if (rowIndex % 9 === 0) {\n            return {\n              rowspan: 10,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n        else if (columnIndex === 6) {\n          if (rowIndex % 9 === 0) {\n            return {\n              rowspan: 9,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/SpanTableComponent/SpanTableComponent.vue","<template>\r\n  <div class=\"providerCheckPrint\">\r\n    <el-row class=\"noprint\">\r\n      <input-component \r\n      :labelName=\"searchItem.labelName\" \r\n      :compVal=\"searchItem.compVal\"\r\n      :compId=\"searchItem.compId\"\r\n      :labelId=\"searchItem.labelId\" \r\n      v-if=\"searchItem.searchType === searchType.input\" \r\n      v-for=\"(searchItem, searchKey) of tabCtntList.searchCreteria\" \r\n      :key=\"searchKey\"\r\n      v-on:inputChange=\"inputChange\"></input-component>\r\n      <select-component\r\n      :options=\"searchItem.options\"\r\n      :labelName=\"searchItem.labelName\"\r\n      :compVal=\"searchItem.compVal\"\r\n      :labelId=\"searchItem.labelId\"\r\n      v-else-if=\"searchItem.searchType === searchType.select\"\r\n      v-on:selectChange=\"selectChange\"></select-component>\r\n      <checkbox-component \r\n      :options=\"searchItem.options\" \r\n      :labelName=\"searchItem.labelName\" \r\n      :compVal=\"searchItem.compVal\" \r\n      :labelId=\"searchItem.labelId\" \r\n      v-else-if=\"searchItem.searchType === searchType.checkbox\"\r\n      v-on:checkboxChange=\"checkboxChange\"></checkbox-component>\r\n      <single-chkbox-component \r\n      :labelName=\"searchItem.labelName\" \r\n      :compVal=\"searchItem.compVal\" \r\n      :labelId=\"searchItem.labelId\" \r\n      v-else-if=\"searchItem.searchType === searchType.singleChkbox\"\r\n      v-on:singleChkboxChange=\"singleChkboxChange\"></single-chkbox-component>\r\n      <!--注释人：向浩\r\n      注释时间：2018-06-13\r\n      注释原因：封装年份，月份选择器\r\n      -->\r\n      <single-date-picker-component\r\n      :labelName=\"searchItem.labelName\" \r\n      :compVal=\"searchItem.compVal\" \r\n      :labelId=\"searchItem.labelId\"\r\n      :type =\"searchItem.type\"\r\n      :placeholder=\"searchItem.placeholder\"\r\n      :format=\"searchItem.format\"\r\n      :valueformat=\"searchItem.valueformat\"\r\n      v-else-if=\"searchItem.searchType === searchType.singleDatePicker\"\r\n      v-on:singleDatePickerChange=\"singleDatePickerChange\"></single-date-picker-component>\r\n      <!-- Add from date to end date -->\r\n      <date-picker-component \r\n      :labelName=\"searchItem.labelName\" \r\n      :compVal=\"searchItem.compVal\" \r\n      :labelId=\"searchItem.labelId\"\r\n      v-else-if=\"searchItem.searchType === searchType.fromTodatePicker\"\r\n      v-on:datePickerChange=\"datePickerChange\"></date-picker-component>\r\n      <el-row>\r\n        <!-- <button-component \r\n        :iconName=\"btnItem.iconName\" \r\n        :btnName=\"btnItem.btnName\" \r\n        v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" \r\n        :key=\"btnKey\"></button-component> -->\r\n        <!--注释人：向浩\r\n            注释时间：2018-06-08\r\n            注释原因: 参考了multiLevelTableComponent来修改了按钮事件(由于不方便调用button单击事件，所以取消将button封装为一个组件)\r\n        -->\r\n        <el-button \r\n        type=\"primary\" \r\n        :icon=\"btnItem.iconName\" \r\n        v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" \r\n        :key=\"btnKey\" \r\n        @click=\"handleBtnClick(btnItem.btnId)\" \r\n        class=\"btn-com\"\r\n        :disabled=btnItem.isDisabled>{{btnItem.btnName}}</el-button>\r\n      </el-row>\r\n    </el-row>\r\n    <div class=\"print-part\" v-loading=\"tabCtntList.loading\">\r\n      <span-table-component \r\n      :tabName=\"tabCtntList.tabDetail.tabName\" \r\n      :TabCtnt=\"tabCtntList.tabDetail.TabCtnt\" \r\n      :tabHeader=\"tabCtntList.tabDetail.tabHeader\"></span-table-component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport InputComponent from \"@/components/InputComponent/InputComponent\";\r\nimport SelectComponent from \"@/components/SelectComponent/SelectComponent\";\r\nimport CheckboxComponent from \"@/components/CheckboxComponent/CheckboxComponent\";\r\nimport SingleChkboxComponent from \"@/components/SingleChkboxComponent/SingleChkboxComponent\";\r\nimport ButtonComponent from \"@/components/ButtonComponent/ButtonComponent\";\r\nimport SpanTableComponent from \"@/components/SpanTableComponent/SpanTableComponent\";\r\nimport DatePickerComponent from \"@/components/DatePickerComponent/DatePickerComponent\";\r\nimport SingleDatePickerComponent from \"@/components/SingleDatePickerComponent/SingleDatePickerComponent\";\r\nimport {\r\n  axiosRequest,\r\n  formSourceData,\r\n  getLastMonth,\r\n  getLastDay\r\n} from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"providerCheckPrint\",\r\n  components: {\r\n    InputComponent,\r\n    SelectComponent,\r\n    CheckboxComponent,\r\n    SingleChkboxComponent,\r\n    ButtonComponent,\r\n    SpanTableComponent,\r\n    DatePickerComponent,\r\n    SingleDatePickerComponent\r\n  },\r\n  data() {\r\n    return {\r\n      searchType: {\r\n        input: \"input\",\r\n        select: \"select\",\r\n        checkbox: \"checkbox\",\r\n        singleChkbox: \"singleChkbox\",\r\n        datePicker: \"datePicker\",\r\n        singleDatePicker: \"singleDatePicker\", //单个日期组件\r\n        fromTodatePicker: \"fromTodatePicker\",\r\n        treeCheckbox: \"treeCheckbox\"\r\n      },\r\n      selectType: {\r\n        Year: \"Year\",\r\n        Month: \"Month\",\r\n        CheckType: \"CheckType\",\r\n        DatePicker: \"DatePicker\"\r\n      },\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone, //查询请求接口\r\n      preSearchType: [\"ZoneId\", \"UnitId\", \"VehicleId\", \"PlatformId\"],\r\n      // 采用手动校正来将返回的结果覆盖到指定的列\r\n      munalMappingTab: {\r\n        InstallRateScore: 0,\r\n        UplineRateScore: 1,\r\n        LocInteRateScore: 3,\r\n        ValidRateScore: 5,\r\n        DriftRateScore: 7\r\n      },\r\n      tabCtntList: {\r\n        loading: false,\r\n        btnEvents: [\r\n          {\r\n            iconName: \"el-icon-search\",\r\n            btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"查询\",\r\n            isDisabled: false //控制查询数据按钮初始状态为enabled\r\n          },\r\n          {\r\n            iconName: \"el-icon-printer\",\r\n            btnId: \"print\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n            btnName: \"打印\",\r\n            isDisabled: false //控制查询数据按钮初始状态为enabled\r\n          }\r\n        ],\r\n        searchCreteria: [\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"接入平台:\",\r\n            labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"\",\r\n            compId: \"\"\r\n          },\r\n          {\r\n            searchType: \"input\",\r\n            labelName: \"地区:\",\r\n            labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: \"河北省\",\r\n            compId: \"43000000\"\r\n          },\r\n          {\r\n            searchType: \"select\",\r\n            labelName: \"考核类型:\",\r\n            labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: 1, //默认选择月度考核\r\n            options: [\r\n              {\r\n                value: 1,\r\n                label: \"月度考核\",\r\n                searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelName: \"月份\",\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: getLastMonth(),\r\n                type: \"month\",\r\n                placeholder: \"请选择月份\",\r\n                format: \"yyyy-MM\",\r\n                valueformat: \"yyyyMM\"\r\n              },\r\n              {\r\n                value: 2,\r\n                label: \"年度考核\",\r\n                searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: \"\",\r\n                labelName: \"年份\",\r\n                type: \"year\",\r\n                placeholder: \"请选择年份\",\r\n                format: \"yyyy\",\r\n                valueformat: \"yyyy\"\r\n              },\r\n              {\r\n                value: 3,\r\n                label: \"当月实时考核\",\r\n                searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                compVal: \"\",\r\n                labelName: \"时间起 - 时间至\",\r\n                type: \"daterange\",\r\n                placeholder: \"请选择日期起 - 日期至\",\r\n                format: \"yyyy-MM-dd\",\r\n                valueformat: \"yyyyMMdd\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            searchType: \"singleDatePicker\",\r\n            labelName: \"月份:\",\r\n            labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            compVal: getLastMonth(),\r\n            type: \"month\",\r\n            placeholder: \"请选择月份\",\r\n            format: \"yyyy-MM\",\r\n            valueformat: \"yyyyMM\"\r\n          },\r\n          {\r\n            searchType: \"checkbox\",\r\n            labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            labelName: \"车辆类型：\",\r\n            compVal: [],\r\n            options: [\r\n              {\r\n                value: 0x0001,\r\n                label: \"三类以上班线客车\"\r\n              },\r\n              {\r\n                value: 0x0004,\r\n                label: \"旅游客车\"\r\n              },\r\n              {\r\n                value: 0x100000,\r\n                label: \"包车客车\"\r\n              },\r\n              {\r\n                value: 0x0080, // this value is customized by Perry,not securate\r\n                label: \"危险品运输车\"\r\n              },\r\n              {\r\n                value: 0x100000,\r\n                label: \"包车客车\"\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        tabDetail: {\r\n          tabName: \"联网联控系统考核表（服务商）\",\r\n          tabHeader: {\r\n            chkObject: \"考核对象\",\r\n            chkCtnt: \"考核内容\",\r\n            score: \"分值\",\r\n            scoreCreteria: \"计分标准\",\r\n            rate: \"指标比率\",\r\n            getScore: \"得分\",\r\n            amount: \"总分\"\r\n          },\r\n          TabCtnt: [\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"车辆上线率\",\r\n              score: \"10\",\r\n              scoreCreteria: \"车辆上线率*10。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"平台连通率\",\r\n              score: \"20\",\r\n              scoreCreteria: \"平台连通率*20；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"平台连通率\",\r\n              score: \"20\",\r\n              scoreCreteria: \"低于90%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"轨迹完整率\",\r\n              score: \"25\",\r\n              scoreCreteria: \"轨迹完整率*25；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"轨迹完整率\",\r\n              score: \"25\",\r\n              scoreCreteria: \"低于70%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"数据合格率\",\r\n              score: \"25\",\r\n              scoreCreteria: \"数据合格率*25；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"数据合格率\",\r\n              score: \"25\",\r\n              scoreCreteria: \"低于80%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"卫星定位漂移车辆率\",\r\n              score: \"20\",\r\n              scoreCreteria: \"10-卫星定位漂移车辆率*20；\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt: \"卫星定位漂移车辆率\",\r\n              score: \"20\",\r\n              scoreCreteria: \"高于5%不得分。\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            },\r\n            {\r\n              chkObject: \"社会化监控平台\",\r\n              chkCtnt:\r\n                \"<p>注：</p>\" +\r\n                \"<p>①因管理部门监管平台或网络运营商等情况造成断线并报备的，不计为断线时长；</p>\" +\r\n                \"<p>②平台上传的车辆数据存在车牌号、车牌颜色、日期时间、经度、纬度、速度、方向、海拔、车辆状态、报警状态等错误信息的，数据判断为不合格。具体参照《JT/T 809-2011》4.5.8相关信息数据体结构之规则；</p>\" +\r\n                \"<p>③数据合理参考范围：日期时间：≤当前时间；经度范围：73°33′E至135°05′E；纬度范围：3°51′N至53°33′N；速度：0至160间；海拔：-200至6500之间；</p>\" +\r\n                \"<p>④各省可结合地方实际情况优化考核内容及分值。</p>\",\r\n              score: \"\",\r\n              scoreCreteria: \"\",\r\n              rate: \"\",\r\n              getScore: \"\",\r\n              amount: \"\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // 处理Input子组件传递上来的最新值\r\n    inputChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理select子组件传递上来的最新值\r\n    selectChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n      if (msg.labelId === this.selectType.CheckType) {\r\n        //判断点击的单选框为考核类型\r\n        for (let searchItem in this.tabCtntList.searchCreteria) {\r\n          let searchTemp = this.tabCtntList.searchCreteria[searchItem];\r\n          if (searchTemp.labelId === this.selectType.DatePicker) {\r\n            //找到日期选择器的配置项singleDatePicker\r\n            this.tabCtntList.searchCreteria[searchItem] = this.searchCheckType(msg.compVal, msg.options);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 封装查找选中的考核类型的函数\r\n    searchCheckType: function(value, options) {\r\n      for (let optItem of options) {\r\n        if (optItem.value === value) {\r\n          return optItem\r\n        }\r\n      }\r\n    },\r\n    // 处理checkbox子组件传递上来的最新值\r\n    checkboxChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理singlecheckbox子组件传递上来的最新值\r\n    singleChkboxChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理datePicker子组件传递上来的最新值\r\n    datePickerChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 处理datePicker子组件传递上来的最新值\r\n    singleDatePickerChange: function(msg) {\r\n      this.mapNewToSourceData(msg);\r\n    },\r\n    // 将子组件传上来的最新值赋给对应的数据集封装为一个函数\r\n    mapNewToSourceData: function(msg) {\r\n      for (let searchItem of this.tabCtntList.searchCreteria) {\r\n        if (searchItem.labelId === msg.labelId) {\r\n          if (this.preSearchType.indexOf(msg.labelId) >= 0) {\r\n            searchItem.compVal = msg.compVal;\r\n            searchItem.compId = msg.compId;\r\n          } else searchItem.compVal = msg.compVal;\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    handleBtnClick: function(btnId) {\r\n      switch (btnId) {\r\n        case commonConfig.btnEventsId.search:\r\n          this.handleClickSearch(this.tabCtntList.searchCreteria, 1);\r\n          break;\r\n        case commonConfig.btnEventsId.print:\r\n          this.handleClickPrint();\r\n          break;\r\n      }\r\n    },\r\n    //处理子组件触发的查询事件\r\n    handleClickSearch: function(msg, currentPage) {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(msg, currentPage);\r\n      self.tabCtntList.loading = true; //加载数据的时候，显示加载数据的logo\r\n      self.tabCtntList.btnEvents[0].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n      self.tabCtntList.btnEvents[1].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const providercheckPrintTemp = response.data.TotalList;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.InstallRateScore].rate = providercheckPrintTemp.InstallRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.InstallRateScore].getScore = providercheckPrintTemp.InstallScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.InstallRateScore].amount = providercheckPrintTemp.Score;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.UplineRateScore].rate = providercheckPrintTemp.UplineRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.UplineRateScore].getScore = providercheckPrintTemp.UplineScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.LocInteRateScore].rate = providercheckPrintTemp.LocInteRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.LocInteRateScore].getScore = providercheckPrintTemp.LocInteScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.ValidRateScore].rate = providercheckPrintTemp.ValidRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.ValidRateScore].getScore = providercheckPrintTemp.ValidScore;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.DriftRateScore].rate = providercheckPrintTemp.DriftRate;\r\n          self.tabCtntList.tabDetail.TabCtnt[self.munalMappingTab.DriftRateScore].getScore = providercheckPrintTemp.DriftScore;\r\n          self.tabCtntList.loading = false;\r\n          self.tabCtntList.btnEvents[0].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n          self.tabCtntList.btnEvents[1].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    handleClickPrint: function(msg) {\r\n      //处理子组件触发的打印事件\r\n      // 1. 第一种打印方法行不通，因为需要覆盖原来的页面内容\r\n      // let bdhtml = window.document.body.innerHTML,\r\n      //     sprnstr = '<span startprint=\"\" style=\"display: none;\"></span>',\r\n      //     eprnstr = '<span endprint=\"\" style=\"display: none;\"></span>';\r\n      // let prnhtml=bdhtml.substr(bdhtml.indexOf(sprnstr)+sprnstr.length);\r\n      // prnhtml=prnhtml.substring(0,prnhtml.indexOf(eprnstr));\r\n      // window.document.body.innerHTML=prnhtml;\r\n      // window.print();\r\n      // 2. 第二种方法,采用css2里面的@media print\r\n      window.print();\r\n    },\r\n    formPageParams: function(msg, pageIndex) {\r\n      let nType = 3,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      for (let msgItem of msg) {\r\n        if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n        else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n        else if (msgItem.labelId === \"DatePicker\") {\r\n          switch (msgItem.type) {\r\n            case \"month\":\r\n              beginDate = msgItem.compVal + \"01\";\r\n              endDate =\r\n                msgItem.compVal +\r\n                getLastDay(\r\n                  msgItem.compVal.substr(0, 4),\r\n                  msgItem.compVal.substr(4)\r\n                );\r\n              break;\r\n            case \"year\":\r\n              beginDate = msgItem.compVal + \"0101\";\r\n              endDate = msgItem.compVal + \"1231\";\r\n              break;\r\n            case \"daterange\":\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n              break;\r\n            default:\r\n          }\r\n        } else if (msgItem.labelId === \"CarType\") {\r\n          for (let carItem of msgItem.compVal) {\r\n            CarType += carItem;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate, //入网明细 - 日期止\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n        \r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"providerCheckPrint\"},[_c('el-row',{staticClass:\"noprint\"},[_vm._l((_vm.tabCtntList.searchCreteria),function(searchItem,searchKey){return (searchItem.searchType === _vm.searchType.input)?_c('input-component',{key:searchKey,attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"compId\":searchItem.compId,\"labelId\":searchItem.labelId},on:{\"inputChange\":_vm.inputChange}}):(searchItem.searchType === _vm.searchType.select)?_c('select-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"selectChange\":_vm.selectChange}}):(searchItem.searchType === _vm.searchType.checkbox)?_c('checkbox-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"checkboxChange\":_vm.checkboxChange}}):(searchItem.searchType === _vm.searchType.singleChkbox)?_c('single-chkbox-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"singleChkboxChange\":_vm.singleChkboxChange}}):(searchItem.searchType === _vm.searchType.singleDatePicker)?_c('single-date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId,\"type\":searchItem.type,\"placeholder\":searchItem.placeholder,\"format\":searchItem.format,\"valueformat\":searchItem.valueformat},on:{\"singleDatePickerChange\":_vm.singleDatePickerChange}}):(searchItem.searchType === _vm.searchType.fromTodatePicker)?_c('date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"datePickerChange\":_vm.datePickerChange}}):_vm._e()}),_vm._v(\" \"),_c('el-row',_vm._l((_vm.tabCtntList.btnEvents),function(btnItem,btnKey){return _c('el-button',{key:btnKey,staticClass:\"btn-com\",attrs:{\"type\":\"primary\",\"icon\":btnItem.iconName,\"disabled\":btnItem.isDisabled},on:{\"click\":function($event){_vm.handleBtnClick(btnItem.btnId)}}},[_vm._v(_vm._s(btnItem.btnName))])}))],2),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tabCtntList.loading),expression:\"tabCtntList.loading\"}],staticClass:\"print-part\"},[_c('span-table-component',{attrs:{\"tabName\":_vm.tabCtntList.tabDetail.tabName,\"TabCtnt\":_vm.tabCtntList.tabDetail.TabCtnt,\"tabHeader\":_vm.tabCtntList.tabDetail.tabHeader}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-211006ae\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-211006ae\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckPrint.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckPrint.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-211006ae\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProviderCheckPrint.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/ProviderCheckPrint.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"ProviderCheckDetail\">\r\n    <multi-level-table-component \r\n    :activeName=\"activeName\" \r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"zone-check-multilevel\"\r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"></multi-level-table-component>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelTableComponent from \"@/components/MultiLevelTableComponent/MultiLevelTableComponent\";\r\nimport { axiosRequest } from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"ProviderCheckDetail\",\r\n  components: {\r\n    MultiLevelTableComponent\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"check_report_vehicleinstall_detail_table\",\r\n      activeNameIndex: 0,\r\n      getProviderCheckDetailDataUrl: commonConfig.rootUrl + commonConfig.GetProviderCheckDetailData,\r\n      exportProviderCheckDetailDataUrl: commonConfig.rootUrl + commonConfig.ExportProviderCheckDetailData,\r\n      // // 每一大列的满分得分\r\n      // columnFullScore: {\r\n      //   rwl: 5,\r\n      //   sxl: 10,\r\n      //   wxpyl: 15,\r\n      //   gjwzl: 40,\r\n      //   sjhgl: 30,\r\n      //   pjcscs: 0,\r\n      //   pjpjsc: 0\r\n      // },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      providerCheckSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // tabName作为标识符\r\n      tabNameObj: {\r\n        firTab: {\r\n          tabLabel: \"入网明细\",\r\n          tabName: \"check_report_vehicleinstall_detail_table\", //将作为标识符来区分\r\n          nType: 1 //根据重构前的请求，可以看到nType 为1\r\n        },\r\n        secTab: {\r\n          tabLabel: \"上线明细\",\r\n          tabName: \"check_report_vehicleuplinerate_detail_table\", //将作为标识符来区分\r\n          nType: 2 //根据重构前的请求，可以看到nType 为2\r\n        },\r\n        thiTab: {\r\n          tabLabel: \"平台连通率明细\",\r\n          tabName: \"check_report_vehicleconnectrate_detail_table\", //将作为标识符来区分\r\n          nType: 3 //根据重构前的请求，可以看到nType 为3\r\n        },\r\n        fouTab: {\r\n          tabLabel: \"轨迹完整率\",\r\n          tabName: \"check_report_vehicletrail_detail_table\", //将作为标识符来区分\r\n          nType: 4 //根据重构前的请求，可以看到nType 为4\r\n        },\r\n        fifTab: {\r\n          tabLabel: \"数据合格率明细\",\r\n          tabName: \"check_report_vehiclestandard_detail_table\", //将作为标识符来区分\r\n          nType: 5 //根据重构前的请求，可以看到nType 为5\r\n        },\r\n        sixTab: {\r\n          tabLabel: \"车辆平均超速明细\",\r\n          tabName: \"check_report_vehicleoverspeed_detail_table\", //将作为标识符来区分\r\n          nType: 6 //根据重构前的请求，可以看到nType 为6\r\n        },\r\n        svnTab: {\r\n          tabLabel: \"车辆平均疲驾明细\",\r\n          tabName: \"check_report_vehicletired_detail_table\", //将作为标识符来区分\r\n          nType: 7 //根据重构前的请求，可以看到nType 为7\r\n        },\r\n        egtTab: {\r\n          tabLabel: \"车辆漂移明细\",\r\n          tabName: \"check_report_vehicledrift_detail_table\", //将作为标识符来区分\r\n          nType: 8 //根据重构前的请求，可以看到nType 为8\r\n        },\r\n        ninTab: {\r\n          tabLabel: \"平台查岗响应率明细\",\r\n          tabName: \"check_report_vehicleresponse_detail_table\", //将作为标识符来区分\r\n          nType: 9 //根据重构前的请求，可以看到nType 为9\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return [\r\n        {\r\n          tabLabel: this.tabNameObj.firTab.tabLabel,\r\n          tabName: this.tabNameObj.firTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数,\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"singleDayPicker\",\r\n              itemTitle: \"日期止:\",\r\n              labelId: \"EndDate\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            },\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //     value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"GPS入网情况:\",\r\n              labelId: \"InstallID\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              options: [\r\n                {\r\n                  value: 0,\r\n                  label: \"应入网\"\r\n                },\r\n                {\r\n                  value: 1,\r\n                  label: \"已入网\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"未入网\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlateColor\",\r\n              headerVal: \"车牌颜色\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZName\",\r\n              headerVal: \"车辆所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CityName\",\r\n              headerVal: \"企业所属市(州)\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"UnitName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"GPSInstalled\",\r\n              headerVal: \"GPS入网情况\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"GPSTime\",\r\n              headerVal: \"GPS最后一次定位\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            //   {\r\n            //     LicensePlat: \"2016-05-03\",\r\n            //     PlateColor: \"王小虎\",\r\n            //     ZName: \"上海\",\r\n            //     CityName: \"普陀区\",\r\n            //     UnitName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //     VehicleType: 200333\r\n            //   },\r\n            //   {\r\n            //     LicensePlat: \"2016-05-03\",\r\n            //     PlateColor: \"王小虎\",\r\n            //     ZName: \"上海\",\r\n            //     CityName: \"普陀区\",\r\n            //     UnitName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //     VehicleType: 200333\r\n            //   }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.secTab.tabLabel,\r\n          tabName: this.tabNameObj.secTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              itemTitle: \"\",\r\n              labelName: \"上线情况:\",\r\n              labelId: \"UpLineFlag\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"已上线\"\r\n                },\r\n                {\r\n                  value: 0,\r\n                  label: \"未上线\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"全部\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlateColor\",\r\n              headerVal: \"车牌颜色\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyZoneName\",\r\n              headerVal: \"车辆所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CityName\",\r\n              headerVal: \"企业所属市(州)\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"GPSLastDate\",\r\n              headerVal: \"GPS最后一次定位时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   ZName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   UnitName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   ZName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   UnitName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.thiTab.tabLabel,\r\n          tabName: this.tabNameObj.thiTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Name\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"OnlineTime\",\r\n              headerVal: \"正常连接时长（小时）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"TotalTime\",\r\n              headerVal: \"总时长（小时）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"OnlineRate\",\r\n              headerVal: \"平台连通率（%）\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   Name: \"2016-05-03\",\r\n            //   OnlineTime: \"王小虎\",\r\n            //   TotalTime: \"上海\",\r\n            //   OnlineRate: \"普陀区\"\r\n            // },\r\n            // {\r\n            //   Name: \"2016-05-03\",\r\n            //   OnlineTime: \"王小虎\",\r\n            //   TotalTime: \"上海\",\r\n            //   OnlineRate: \"普陀区\"\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.fouTab.tabLabel,\r\n          tabName: this.tabNameObj.fouTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlateColor\",\r\n              headerVal: \"车牌颜色\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyZoneName\",\r\n              headerVal: \"企业所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CityName\",\r\n              headerVal: \"企业所属市(州)\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"InteDistance\",\r\n              headerVal: \"轨迹完整里程（千米）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"UninteDistance\",\r\n              headerVal: \"轨迹不完整里程（千米）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"AllDistance\",\r\n              headerVal: \"总里程（千米）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.fifTab.tabLabel,\r\n          tabName: this.tabNameObj.fifTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlateColor\",\r\n              headerVal: \"车牌颜色\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyZoneName\",\r\n              headerVal: \"企业所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CityName\",\r\n              headerVal: \"企业所属市(州)\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"AllData\",\r\n              headerVal: \"总条数\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ValidData\",\r\n              headerVal: \"合格条数\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"不合格条数\",\r\n              // subHeaders: {\r\n              //   InValidData: \"不合格条数\",\r\n              //   LicensePlatAbnormal: \"车牌号码\",\r\n              //   PlateColorAbnormal: \"车牌颜色\",\r\n              //   LocAbnormal: \"经纬度\",\r\n              //   HeightAbnormal: \"海拔\",\r\n              //   SpeedAbnormal: \"速度\",\r\n              //   DirAbnormal: \"方向角\",\r\n              //   TimeAbnormal: \"定位时间\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"InValidData\",\r\n                  headerVal: \"不合格条数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LicensePlatAbnormal\",\r\n                  headerVal: \"车牌号码\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"PlateColorAbnormal\",\r\n                  headerVal: \"车牌颜色\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LocAbnormal\",\r\n                  headerVal: \"经纬度\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"HeightAbnormal\",\r\n                  headerVal: \"海拔\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"SpeedAbnormal\",\r\n                  headerVal: \"速度\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DirAbnormal\",\r\n                  headerVal: \"方向角\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"TimeAbnormal\",\r\n                  headerVal: \"定位时间\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   CompanyZoneName: \"上海\",\r\n            //   CityName: \"普陀区\",\r\n            //   CompanyName: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   VehicleType: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.sixTab.tabLabel,\r\n          tabName: this.tabNameObj.sixTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"所属道路运输企业\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"BDate\",\r\n              headerVal: \"超速开始时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"EDate\",\r\n              headerVal: \"超速结束时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ContinueTime\",\r\n              headerVal: \"持续时长\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"SpeedLimit\",\r\n              headerVal: \"限速（km/h）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Speed\",\r\n              headerVal: \"最高速度（km/h）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"OverspeedRate\",\r\n              headerVal: \"超速率（%）\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZoneName\",\r\n              headerVal: \"车辆所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"BLocation\",\r\n              headerVal: \"开始位置\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ELocation\",\r\n              headerVal: \"结束位置\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.svnTab.tabLabel,\r\n          tabName: this.tabNameObj.svnTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZoneName\",\r\n              headerVal: \"车辆所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"所属道路运输企业\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"BDate\",\r\n              headerVal: \"开始时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"EDate\",\r\n              headerVal: \"结束时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ContinueTime\",\r\n              headerVal: \"持续时长\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"BLocation\",\r\n              headerVal: \"开始位置\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ELocation\",\r\n              headerVal: \"结束位置\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.egtTab.tabLabel,\r\n          tabName: this.tabNameObj.egtTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"车牌号:\",\r\n              labelId: \"VehicleId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"接入平台:\",\r\n              labelId: \"PlatformId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [], //注意：如果是checkbox类型，这里的默认数据类型是array,需要进行push操作\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LicensePlat\",\r\n              headerVal: \"车牌号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlateColor\",\r\n              headerVal: \"车牌颜色\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZoneName\",\r\n              headerVal: \"车辆所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"VehicleType\",\r\n              headerVal: \"车辆类型\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"PlatformName\",\r\n              headerVal: \"接入平台\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Bs\",\r\n              headerVal: \"车辆经营范围\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   PlateColor: \"王小虎\",\r\n            //   ZoneName: \"上海\",\r\n            //   CompanyName: \"普陀区\",\r\n            //   VehicleType: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   platformName: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // },\r\n            // {\r\n            //   LicensePlat: \"2016-05-03\",\r\n            //   CompanyName: \"王小虎\",\r\n            //   PlatformName: \"上海\",\r\n            //   BDate: \"普陀区\",\r\n            //   EDate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   ContinueTime: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.ninTab.tabLabel,\r\n          tabName: this.tabNameObj.ninTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"fromTodatePicker\",\r\n              labelName: \"时间起 - 时间至\",\r\n              labelId: \"fromTodatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"查岗人:\",\r\n              labelId: \"TargetUserId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"查岗机构:\",\r\n              labelId: \"CheckUnitID\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"查岗方式:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              options: [\r\n                {\r\n                  value: -1,\r\n                  label: \"全部\"\r\n                },\r\n                {\r\n                  value: 0,\r\n                  label: \"自动\"\r\n                },\r\n                {\r\n                  value: 1,\r\n                  label: \"手动\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"是否在岗:\",\r\n              labelId: \"IsOnGuard\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              options: [\r\n                {\r\n                  value: -1,\r\n                  label: \"全部\"\r\n                },\r\n                {\r\n                  value: 1,\r\n                  label: \"是\"\r\n                },\r\n                {\r\n                  value: 0,\r\n                  label: \"否\"\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CompanyName\",\r\n              headerVal: \"运输企业\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZoneName\",\r\n              headerVal: \"企业所属地区\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"IsOnGuard\",\r\n              headerVal: \"是否在岗\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CheckDate\",\r\n              headerVal: \"查岗时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Question\",\r\n              headerVal: \"查岗问题\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CheckUserName\",\r\n              headerVal: \"查岗人\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CheckUnitName\",\r\n              headerVal: \"查岗机构\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ConfirmDate\",\r\n              headerVal: \"应答时间\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Answer\",\r\n              headerVal: \"应答答案\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ConfirmUserName\",\r\n              headerVal: \"应答人\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"CheckMode\",\r\n              headerVal: \"查岗方式\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   CompanyName: \"2016-05-03\",\r\n            //   ZoneName: \"王小虎\",\r\n            //   IsOnGuard: \"上海\",\r\n            //   CheckDate: \"普陀区\",\r\n            //   Question: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   CheckUserName: 200333\r\n            // },\r\n            // {\r\n            //   CompanyName: \"2016-05-03\",\r\n            //   ZoneName: \"王小虎\",\r\n            //   IsOnGuard: \"上海\",\r\n            //   CheckDate: \"普陀区\",\r\n            //   Question: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   CheckUserName: 200333\r\n            // },\r\n            // {\r\n            //   CompanyName: \"2016-05-03\",\r\n            //   ZoneName: \"王小虎\",\r\n            //   IsOnGuard: \"上海\",\r\n            //   CheckDate: \"普陀区\",\r\n            //   Question: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   CheckUserName: 200333\r\n            // }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    handleClickSearch: function(msg) {\r\n      //处理子组件触发的查询事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const getProviderCheckDetailDataParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.providerCheckSourceData = [];\r\n      axiosRequest.axiosGet(\r\n          this.getProviderCheckDetailDataUrl,\r\n          getProviderCheckDetailDataParams\r\n        )\r\n        .then(function(response) {\r\n          const providerCheckRankTemp = response.data.DetailList;\r\n          for (let providerCheckItem of providerCheckRankTemp) {\r\n            self.providerCheckSourceData.push(\r\n              self.pushSourceData(providerCheckItem, msg.activeName)\r\n            );\r\n          }\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt =\r\n            self.providerCheckSourceData;\r\n          self.tabCtntList[self.activeNameIndex].total = response.data.CountTotal;\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n          self.tabCtntList[self.activeNameIndex].btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n          // 在某些特殊的Tab需要加上明细 - 平台连通率明细\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt.push(\r\n            self.pushSourceData(response.data.TotalList, msg.activeName)\r\n          );\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(providerCheckItem, activeName) {\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            PlateColor: providerCheckItem.PlateColor,\r\n            ZName: providerCheckItem.ZName,\r\n            CityName: providerCheckItem.CityName,\r\n            UnitName: providerCheckItem.UnitName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            GPSInstalled: providerCheckItem.GPSInstalled,\r\n            GPSTime: providerCheckItem.GPSTime,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.secTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            PlateColor: providerCheckItem.PlateColor,\r\n            CompanyZoneName: providerCheckItem.CompanyZoneName,\r\n            CityName: providerCheckItem.CityName,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            GPSLastDate: providerCheckItem.GPSLastDate,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.thiTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            Name: providerCheckItem.Name,\r\n            OnlineTime: providerCheckItem.OnlineTime,\r\n            TotalTime: providerCheckItem.TotalTime,\r\n            CityName: providerCheckItem.CityName,\r\n            OnlineRate: providerCheckItem.OnlineRate\r\n          };\r\n          break;\r\n        case this.tabNameObj.fouTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            PlateColor: providerCheckItem.PlateColor,\r\n            CompanyZoneName: providerCheckItem.CompanyZoneName,\r\n            CityName: providerCheckItem.CityName,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            InteDistance: providerCheckItem.InteDistance,\r\n            UninteDistance: providerCheckItem.UninteDistance,\r\n            AllDistance: providerCheckItem.AllDistance,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.fifTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            PlateColor: providerCheckItem.PlateColor,\r\n            CompanyZoneName: providerCheckItem.CompanyZoneName,\r\n            CityName: providerCheckItem.CityName,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            AllData: providerCheckItem.AllData,\r\n            ValidData: providerCheckItem.ValidData,\r\n            InValidData: providerCheckItem.InValidData,\r\n            LicensePlatAbnormal: providerCheckItem.LicensePlatAbnormal,\r\n            PlateColorAbnormal: providerCheckItem.PlateColorAbnormal,\r\n            LocAbnormal: providerCheckItem.LocAbnormal,\r\n            HeightAbnormal: providerCheckItem.HeightAbnormal,\r\n            SpeedAbnormal: providerCheckItem.SpeedAbnormal,\r\n            DirAbnormal: providerCheckItem.DirAbnormal,\r\n            TimeAbnormal: providerCheckItem.TimeAbnormal,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.sixTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            BDate: providerCheckItem.BDate,\r\n            EDate: providerCheckItem.EDate,\r\n            ContinueTime: providerCheckItem.ContinueTime,\r\n            SpeedLimit: providerCheckItem.SpeedLimit,\r\n            Speed: providerCheckItem.Speed,\r\n            OverspeedRate: providerCheckItem.OverspeedRate,\r\n            ZoneName: providerCheckItem.ZoneName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            BLocation: providerCheckItem.BLocation,\r\n            ELocation: providerCheckItem.ELocation,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.svnTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            ZoneName: providerCheckItem.ZoneName,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            BDate: providerCheckItem.BDate,\r\n            EDate: providerCheckItem.EDate,\r\n            BLocation: providerCheckItem.BLocation,\r\n            ELocation: providerCheckItem.ELocation,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.egtTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            LicensePlat: providerCheckItem.LicensePlat,\r\n            PlateColor:  providerCheckItem.PlateColor,\r\n            ZoneName: providerCheckItem.ZoneName,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            VehicleType: providerCheckItem.VehicleType,\r\n            PlatformName: providerCheckItem.PlatformName,\r\n            Bs: providerCheckItem.Bs\r\n          };\r\n          break;\r\n        case this.tabNameObj.ninTab.tabName:\r\n          return {\r\n            sybid: providerCheckItem.sybid,\r\n            CompanyName: providerCheckItem.CompanyName,\r\n            ZoneName: providerCheckItem.ZoneName,\r\n            IsOnGuard: providerCheckItem.IsOnGuard,\r\n            CheckDate: providerCheckItem.CheckDate,\r\n            Question: providerCheckItem.Question,\r\n            CheckUserName: providerCheckItem.CheckUserName,\r\n            CheckUnitName: providerCheckItem.CheckUnitName,\r\n            ConfirmDate: providerCheckItem.ConfirmDate,\r\n            Answer: providerCheckItem.Answer,\r\n            ConfirmUserName: providerCheckItem.ConfirmUserName,\r\n            CheckMode: providerCheckItem.CheckMode\r\n          };\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const exportProviderCheckDetailDataParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true;//下载数据的时候，显示正在下载数据的logo\r\n      axiosRequest.axiosGet(\r\n          this.exportProviderCheckDetailDataUrl,\r\n          exportProviderCheckDetailDataParams\r\n        )\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    formPageParams: function(msg, pageIndex, activeName, isSplitPage) {\r\n      let nType = 0,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          this.activeNameIndex = 0;\r\n          nType = this.tabNameObj.firTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\")\r\n              platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"EndDate\") endDate = msgItem.compVal;\r\n            else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"InstallID\")\r\n              installID = msgItem.compVal;\r\n          }\r\n          break;\r\n        case this.tabNameObj.secTab.tabName:\r\n          this.activeNameIndex = 1;\r\n          nType = this.tabNameObj.secTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"UpLineFlag\")\r\n              upLineFlag = msgItem.compVal;\r\n          }\r\n          break;\r\n        case this.tabNameObj.thiTab.tabName:\r\n          this.activeNameIndex = 2;\r\n          nType = this.tabNameObj.thiTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.fouTab.tabName:\r\n          this.activeNameIndex = 3;\r\n          nType = this.tabNameObj.fouTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.fifTab.tabName:\r\n          this.activeNameIndex = 4;\r\n          nType = this.tabNameObj.fifTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.sixTab.tabName:\r\n          this.activeNameIndex = 5;\r\n          nType = this.tabNameObj.sixTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.svnTab.tabName:\r\n          this.activeNameIndex = 6;\r\n          nType = this.tabNameObj.svnTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.egtTab.tabName:\r\n          this.activeNameIndex = 7;\r\n          nType = this.tabNameObj.egtTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"VehicleId\") vehicleId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"PlatformId\") platformId = msgItem.compId;\r\n            else if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            }\r\n          }\r\n          break;\r\n        case this.tabNameObj.ninTab.tabName:\r\n          this.activeNameIndex = 8;\r\n          nType = this.tabNameObj.ninTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"fromTodatePicker\") {\r\n              beginDate = msgItem.compVal[0]; //时间起\r\n              endDate = msgItem.compVal[1]; //时间止\r\n            }\r\n            else if (msgItem.labelId === \"TargetUserId\") targetUserId = msgItem.compVal;\r\n            else if (msgItem.labelId === \"CheckUnitID\") checkUnitID = msgItem.compVal;\r\n            else if (msgItem.labelId === \"CheckType\") checkType = msgItem.compVal;\r\n            else if (msgItem.labelId === \"IsOnGuard\") isOnGuard = msgItem.compVal;\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate, //入网明细 - 日期止\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n\r\n        isSplitPage, //默认参数 - 是否分页\r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ProviderCheckDetail\"},[_c('multi-level-table-component',{staticClass:\"zone-check-multilevel\",attrs:{\"activeName\":_vm.activeName,\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5306a1f4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5306a1f4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckDetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProviderCheckDetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5306a1f4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProviderCheckDetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/ProviderCheckDetail.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"TransportCheckRank\">\r\n    <multi-level-table-component \r\n    :activeName=\"activeName\" \r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"zone-check-multilevel\"\r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"></multi-level-table-component>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelTableComponent from \"@/components/MultiLevelTableComponent/MultiLevelTableComponent\";\r\nimport { axiosRequest, getLastMonth, getLastDay } from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"TransportCheckRank\",\r\n  components: {\r\n    MultiLevelTableComponent\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"report_transportCheckRank_table\",\r\n      activeNameIndex: 0,\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone,\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      zoneCheckSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // tabName作为标识符\r\n      tabNameObj: {\r\n        firTab: {\r\n          tabLabel: \"交通厅地区考核排名\",\r\n          tabName: \"report_transportCheckRank_table\", //将作为标识符来区分\r\n          nType: 4 //根据重构前的请求，可以看到nType 为4\r\n        },\r\n        secTab: {\r\n          tabLabel: \"企业排名\",\r\n          tabName: \"report_transporttransCheckRank_table\", //将作为标识符来区分\r\n          nType: 5 //根据重构前的请求，可以看到nType 为5\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return [\r\n        {\r\n          tabLabel: this.tabNameObj.firTab.tabLabel,\r\n          tabName: this.tabNameObj.firTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            },\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //       value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n            {\r\n              searchType: \"singleChkbox\",\r\n              labelName: \"是否包含下级\",\r\n              labelId: \"IsIncludeLower\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZName\",\r\n              headerVal: \"地区名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Score\",\r\n              headerVal: \"扣分情况\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"入网率情况\",\r\n              // subHeaders: {\r\n              //   InstallRate: \"入网率\",\r\n              //   InstallScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"InstallRate\",\r\n                  headerVal: \"入网率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"InstallScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"上线率情况\",\r\n              // subHeaders: {\r\n              //   UplineRate: \"上线率\",\r\n              //   UplineCount: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"UplineRate\",\r\n                  headerVal: \"上线率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineCount\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"数据合格率情况\",\r\n              // subHeaders: {\r\n              //   ValidRate: \"数据合格率\",\r\n              //   ValidScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"ValidRate\",\r\n                  headerVal: \"数据合格率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ValidScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"轨迹完整率情况\",\r\n              // subHeaders: {\r\n              //   LocInteRate: \"轨迹完整率\",\r\n              //   LocInteScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"LocInteRate\",\r\n                  headerVal: \"轨迹完整率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LocInteScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"超速情况\",\r\n              // subHeaders: {\r\n              //   OverSpeedCount: \"车辆超速次数\",\r\n              //   OverSpeedRate: \"平均车辆超速率\",\r\n              //   ProvinceOverSpeedRate: \"全省平均车辆超速率\",\r\n              //   OverSpeedScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"OverSpeedCount\",\r\n                  headerVal: \"车辆超速次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"OverSpeedRate\",\r\n                  headerVal: \"平均车辆超速率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceOverSpeedRate\",\r\n                  headerVal: \"全省平均车辆超速率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"OverSpeedScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"疲劳驾驶情况\",\r\n              // subHeaders: {\r\n              //   FatigueDriveCount: \"车辆疲劳驾驶次数\",\r\n              //   FatigueDriveRate: \"平均车辆疲劳驾驶率\",\r\n              //   ProvinceFatigueDriveRate: \"全省平均车辆疲劳驾驶率\",\r\n              //   FatigueDriveScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"FatigueDriveCount\",\r\n                  headerVal: \"车辆疲劳驾驶次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"FatigueDriveRate\",\r\n                  headerVal: \"平均车辆疲劳驾驶率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceFatigueDriveRate\",\r\n                  headerVal: \"全省平均车辆疲劳驾驶率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"FatigueDriveScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"凌晨2点至5点违规运行情况\",\r\n              // subHeaders: {\r\n              //   AbnormalCount: \"车辆违规运行次数\",\r\n              //   AbnormalRate: \"平均车辆违规运行率\",\r\n              //   ProvinceAbnormalRate: \"全省平均车辆违规运行率\",\r\n              //   AbnormalScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AbnormalCount\",\r\n                  headerVal: \"车辆违规运行次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"AbnormalRate\",\r\n                  headerVal: \"平均车辆违规运行率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceAbnormalRate\",\r\n                  headerVal: \"全省平均车辆违规运行率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"AbnormalScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // }\r\n          ]\r\n        },\r\n        {\r\n          tabLabel: this.tabNameObj.secTab.tabLabel,\r\n          tabName: this.tabNameObj.secTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"运输企业:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\"\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              itemTitle: \"\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              labelName: \"车辆类型：\",\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            },\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //       value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n            {\r\n              searchType: \"singleChkbox\",\r\n              labelName: \"是否包含下级\",\r\n              labelId: \"IsIncludeLower\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"UnitName\",\r\n              headerVal: \"企业名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZName\",\r\n              headerVal: \"地区名称\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"Score\",\r\n              headerVal: \"扣分情况\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"超速情况\",\r\n              // subHeaders: {\r\n              //   OverSpeedCount: \"车辆超速次数\",\r\n              //   OverSpeedRate: \"平均车辆超速率\",\r\n              //   ProvinceOverSpeedRate: \"全省平均车辆超速率\",\r\n              //   OverSpeedScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"OverSpeedCount\",\r\n                  headerVal: \"车辆超速次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"OverSpeedRate\",\r\n                  headerVal: \"平均车辆超速率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceOverSpeedRate\",\r\n                  headerVal: \"全省平均车辆超速率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"OverSpeedScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"疲劳驾驶情况\",\r\n              // subHeaders: {\r\n              //   FatigueDriveCount: \"车辆疲劳驾驶次数\",\r\n              //   FatigueDriveRate: \"平均车辆疲劳驾驶率\",\r\n              //   ProvinceFatigueDriveRate: \"全省平均车辆疲劳驾驶率\",\r\n              //   FatigueDriveScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"FatigueDriveCount\",\r\n                  headerVal: \"车辆疲劳驾驶次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"FatigueDriveRate\",\r\n                  headerVal: \"平均车辆疲劳驾驶率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceFatigueDriveRate\",\r\n                  headerVal: \"全省平均车辆疲劳驾驶率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"FatigueDriveScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"凌晨2点至5点违规运行情况\",\r\n              // subHeaders: {\r\n              //   AbnormalCount: \"车辆违规运行次数\",\r\n              //   AbnormalRate: \"平均车辆违规运行率\",\r\n              //   ProvinceAbnormalRate: \"全省平均车辆违规运行率\",\r\n              //   AbnormalScore: \"扣分\"\r\n              // }\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AbnormalCount\",\r\n                  headerVal: \"车辆违规运行次数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"AbnormalRate\",\r\n                  headerVal: \"平均车辆违规运行率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ProvinceAbnormalRate\",\r\n                  headerVal: \"全省平均车辆违规运行率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"AbnormalScore\",\r\n                  headerVal: \"扣分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   Score: \"王小虎\",\r\n            //   InstallRate: \"上海\",\r\n            //   InstallScore: \"普陀区\",\r\n            //   UplineRate: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   UplineCount: 200333\r\n            // }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    handleClickSearch: function(msg) {\r\n      //处理子组件触发的查询事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage\r\n      );\r\n      console.log('fdsfadf')\r\n      console.log(msg.isSplitPage)\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.transCheckSourceData = [];\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const transCheckRankTemp = response.data.DetailList;\r\n          for (let transCheckItem of transCheckRankTemp) {\r\n            self.transCheckSourceData.push(\r\n              self.pushSourceData(transCheckItem, msg.activeName)\r\n            );\r\n          }\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt =\r\n            self.transCheckSourceData;\r\n          self.tabCtntList[self.activeNameIndex].total =\r\n            response.data.CountTotal;\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n          self.tabCtntList[self.activeNameIndex].btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n          // 在某些特殊的Tab需要加上明细 - 平台连通率明细\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt.push(\r\n            self.pushSourceData(response.data.TotalList, msg.activeName)\r\n          );\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(transCheckItem, activeName) {\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          return {\r\n            sybid: transCheckItem.sybid,\r\n            ZName: transCheckItem.ZName,\r\n            Score: transCheckItem.Score,\r\n            InstallRate: transCheckItem.InstallRate,\r\n            InstallScore: transCheckItem.InstallScore,\r\n            UplineRate: transCheckItem.UplineRate,\r\n            UplineCount: transCheckItem.UplineCount,\r\n            ValidRate: transCheckItem.ValidRate,\r\n            ValidScore: transCheckItem.ValidScore,\r\n            LocInteRate: transCheckItem.LocInteRate,\r\n            LocInteScore: transCheckItem.LocInteScore,\r\n\r\n            OverSpeedCount: transCheckItem.OverSpeedCount,\r\n            OverSpeedRate: transCheckItem.OverSpeedRate,\r\n            ProvinceOverSpeedRate: transCheckItem.ProvinceOverSpeedRate,\r\n            OverSpeedScore: transCheckItem.OverSpeedScore,\r\n\r\n            FatigueDriveCount: transCheckItem.FatigueDriveCount,\r\n            FatigueDriveRate: transCheckItem.FatigueDriveRate,\r\n            ProvinceFatigueDriveRate: transCheckItem.ProvinceFatigueDriveRate,\r\n            FatigueDriveScore: transCheckItem.FatigueDriveScore,\r\n\r\n            AbnormalCount: transCheckItem.AbnormalCount,\r\n            AbnormalRate: transCheckItem.AbnormalRate,\r\n            ProvinceAbnormalRate: transCheckItem.ProvinceAbnormalRate,\r\n            AbnormalScore: transCheckItem.AbnormalScore\r\n          };\r\n          break;\r\n        case this.tabNameObj.secTab.tabName:\r\n          return {\r\n            sybid: transCheckItem.sybid,\r\n            UnitName: transCheckItem.UnitName,\r\n            ZName: transCheckItem.ZName,\r\n            Score: transCheckItem.Score,\r\n\r\n            OverSpeedCount: transCheckItem.OverSpeedCount,\r\n            OverSpeedRate: transCheckItem.OverSpeedRate,\r\n            ProvinceOverSpeedRate: transCheckItem.ProvinceOverSpeedRate,\r\n            OverSpeedScore: transCheckItem.OverSpeedScore,\r\n\r\n            FatigueDriveCount: transCheckItem.FatigueDriveCount,\r\n            FatigueDriveRate: transCheckItem.FatigueDriveRate,\r\n            ProvinceFatigueDriveRate: transCheckItem.ProvinceFatigueDriveRate,\r\n            FatigueDriveScore: transCheckItem.FatigueDriveScore,\r\n\r\n            AbnormalCount: transCheckItem.AbnormalCount,\r\n            AbnormalRate: transCheckItem.AbnormalRate,\r\n            ProvinceAbnormalRate: transCheckItem.ProvinceAbnormalRate,\r\n            AbnormalScore: transCheckItem.AbnormalScore\r\n          };\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true;//下载数据的时候，显示正在下载数据的logo\r\n      axiosRequest.axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    formPageParams: function(msg, pageIndex, activeName, isSplitPage) {\r\n      let nType = 0,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      let monthDate = '';\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          this.activeNameIndex = 0;\r\n          nType = this.tabNameObj.firTab.nType; \r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"CheckType\") checkType = msgItem.compVal;\r\n            else if (msgItem.labelId === \"DatePicker\") {\r\n              switch (msgItem.type) {\r\n                case \"month\":\r\n                  beginDate = msgItem.compVal + \"01\";\r\n                  endDate =\r\n                    msgItem.compVal +\r\n                    getLastDay(\r\n                      msgItem.compVal.substr(0, 4),\r\n                      msgItem.compVal.substr(4)\r\n                    );\r\n                  break;\r\n                case \"year\":\r\n                  beginDate = msgItem.compVal + \"0101\";\r\n                  endDate = msgItem.compVal + \"1231\";\r\n                  break;\r\n                case \"daterange\":\r\n                  beginDate = msgItem.compVal[0]; //时间起\r\n                  endDate = msgItem.compVal[1]; //时间止\r\n                  break;\r\n                default:\r\n              }\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"IsIncludeLower\") isIncludeLower = Number(msgItem.compVal);\r\n          }\r\n          break;\r\n        case this.tabNameObj.secTab.tabName:\r\n          this.activeNameIndex = 1;\r\n          nType = this.tabNameObj.secTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"UnitId\") unitId = msgItem.compId;\r\n            else if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"CheckType\") checkType = msgItem.compVal;\r\n            else if (msgItem.labelId === \"DatePicker\") {\r\n              switch (msgItem.type) {\r\n                case \"month\":\r\n                  beginDate = msgItem.compVal + \"01\";\r\n                  endDate =\r\n                    msgItem.compVal +\r\n                    getLastDay(\r\n                      msgItem.compVal.substr(0, 4),\r\n                      msgItem.compVal.substr(4)\r\n                    );\r\n                  break;\r\n                case \"year\":\r\n                  beginDate = msgItem.compVal + \"0101\";\r\n                  endDate = msgItem.compVal + \"1231\";\r\n                  break;\r\n                case \"daterange\":\r\n                  beginDate = msgItem.compVal[0]; //时间起\r\n                  endDate = msgItem.compVal[1]; //时间止\r\n                  break;\r\n                default:\r\n              }\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"IsIncludeLower\") isIncludeLower = Number(msgItem.compVal);\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate,\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n\r\n        isSplitPage, //默认参数 - 是否分页\r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/TransportCheckRank.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"TransportCheckRank\"},[_c('multi-level-table-component',{staticClass:\"zone-check-multilevel\",attrs:{\"activeName\":_vm.activeName,\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d42d130\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/TransportCheckRank.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d42d130\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TransportCheckRank.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TransportCheckRank.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d42d130\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TransportCheckRank.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/TransportCheckRank.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"companySpanTableComponent\"},[_c('h3',{staticClass:\"span-table-name\"},[_vm._v(_vm._s(_vm.tabName))]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.TabCtnt,\"span-method\":_vm.objectSpanMethod,\"border\":\"\",\"default-sort\":{prop: 'date', order: 'descending'}}},_vm._l((_vm.tabHeader),function(tabHeaderItem,tabHeaderKey){return _c('el-table-column',{key:tabHeaderKey,attrs:{\"prop\":tabHeaderKey,\"label\":tabHeaderItem,\"sortable\":\"\"}})}))],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7cf7664d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7cf7664d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./companySpanTableComponent.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanySpanTableComponent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanySpanTableComponent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7cf7664d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CompanySpanTableComponent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"companySpanTableComponent\">\n    <h3 class=\"span-table-name\">{{tabName}}</h3>\n    <el-table :data=\"TabCtnt\" :span-method=\"objectSpanMethod\" border style=\"width: 100%\" :default-sort=\"{prop: 'date', order: 'descending'}\">\n      <el-table-column :prop=\"tabHeaderKey\" :label=\"tabHeaderItem\" sortable v-for=\"(tabHeaderItem,tabHeaderKey) in tabHeader\" :key=\"tabHeaderKey\">\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<style src=\"./companySpanTableComponent.css\" type=\"text/css\">\n  \n</style>\n\n<script>\n  export default {\n    name: 'CompanySpanTableComponent',\n    props: ['tabName', 'TabCtnt', 'tabHeader'],\n    data() {\n      return {}\n    },\n    methods: {\n      objectSpanMethod({\n        row,\n        column,\n        rowIndex,\n        columnIndex\n      }) {\n        // 画最后的备注栏\n        if (rowIndex === 16) {\n          if (columnIndex === 1) {\n            return [1,6];\n          } else {\n            return [0, 0];\n          }\n        }\n        // 画1，2,4，5列的合并栏\n        else if (columnIndex === 1 || columnIndex === 2 || columnIndex === 4 || columnIndex === 5) {\n          // 画第2，15行的单个单元格\n          if (rowIndex === 2 || rowIndex === 15) {\n            return {\n              rowspan: 1,\n              colspan: 1\n            }\n          } else if ((rowIndex < 2) && (rowIndex % 2 === 0)) {// 画第1，2行的合并单元格\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else if ((rowIndex > 2 && rowIndex < 9) && ((rowIndex -1 ) % 2 === 0)) {// 画第4，5行,6，7行，8,9行的合并单元格\n            return {\n              rowspan: 2,\n              colspan: 1\n            };\n          } else if (rowIndex === 9 || rowIndex === 12) { //画第9，10,11行,12，13,14行的合并单元格\n            return {\n              rowspan: 3,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        } else if (columnIndex === 0) {// 画第1列的纵向合并栏\n          if (rowIndex === 0) {\n            return {\n              rowspan: 17,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        } else if (columnIndex === 6) {// 画第7列的纵向合并栏\n          if (rowIndex === 0) {\n            return {\n              rowspan: 16,\n              colspan: 1\n            };\n          } else {\n            return {\n              rowspan: 0,\n              colspan: 0\n            };\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/CompanySpanTableComponent/CompanySpanTableComponent.vue","<template>\r\n  <div class=\"companyCheckPrint\">\r\n    <el-row class=\"noprint\">\r\n      <input-component :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :compId=\"searchItem.compId\" :labelId=\"searchItem.labelId\" v-if=\"searchItem.searchType === searchType.input\" v-for=\"(searchItem, searchKey) of tabCtntList.searchCreteria\"\r\n        :key=\"searchKey\" v-on:inputChange=\"inputChange\"></input-component>\r\n      <select-component :options=\"searchItem.options\" :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :labelId=\"searchItem.labelId\" v-else-if=\"searchItem.searchType === searchType.select\" v-on:selectChange=\"selectChange\"></select-component>\r\n      <checkbox-component :options=\"searchItem.options\" :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :labelId=\"searchItem.labelId\" v-else-if=\"searchItem.searchType === searchType.checkbox\" v-on:checkboxChange=\"checkboxChange\"></checkbox-component>\r\n      <single-chkbox-component :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :labelId=\"searchItem.labelId\" v-else-if=\"searchItem.searchType === searchType.singleChkbox\" v-on:singleChkboxChange=\"singleChkboxChange\"></single-chkbox-component>\r\n      <!--注释人：向浩\r\n            注释时间：2018-06-13\r\n            注释原因：封装年份，月份选择器\r\n            -->\r\n      <single-date-picker-component :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :labelId=\"searchItem.labelId\" :type=\"searchItem.type\" :placeholder=\"searchItem.placeholder\" :format=\"searchItem.format\" :valueformat=\"searchItem.valueformat\"\r\n        v-else-if=\"searchItem.searchType === searchType.singleDatePicker\" v-on:singleDatePickerChange=\"singleDatePickerChange\"></single-date-picker-component>\r\n      <!-- Add from date to end date -->\r\n      <date-picker-component :labelName=\"searchItem.labelName\" :compVal=\"searchItem.compVal\" :labelId=\"searchItem.labelId\" v-else-if=\"searchItem.searchType === searchType.fromTodatePicker\" v-on:datePickerChange=\"datePickerChange\"></date-picker-component>\r\n      <el-row>\r\n        <!-- <button-component \r\n                :iconName=\"btnItem.iconName\" \r\n                :btnName=\"btnItem.btnName\" \r\n                v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" \r\n                :key=\"btnKey\"></button-component> -->\r\n        <!--注释人：向浩\r\n                    注释时间：2018-06-08\r\n                    注释原因: 参考了multiLevelTableComponent来修改了按钮事件(由于不方便调用button单击事件，所以取消将button封装为一个组件)\r\n                -->\r\n        <el-button type=\"primary\" :icon=\"btnItem.iconName\" v-for=\"(btnItem, btnKey) of tabCtntList.btnEvents\" :key=\"btnKey\" @click=\"handleBtnClick(btnItem.btnId)\" class=\"btn-com\" :disabled=btnItem.isDisabled>{{btnItem.btnName}}</el-button>\r\n      </el-row>\r\n    </el-row>\r\n    <div class=\"print-part\" v-loading=\"tabCtntList.loading\">\r\n      <company-span-table-component :tabName=\"tabCtntList.tabDetail.tabName\" :TabCtnt=\"tabCtntList.tabDetail.TabCtnt\" :tabHeader=\"tabCtntList.tabDetail.tabHeader\"></company-span-table-component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n  \r\n</style>\r\n\r\n<script>\r\n  import InputComponent from \"@/components/InputComponent/InputComponent\";\r\n  import SelectComponent from \"@/components/SelectComponent/SelectComponent\";\r\n  import CheckboxComponent from \"@/components/CheckboxComponent/CheckboxComponent\";\r\n  import SingleChkboxComponent from \"@/components/SingleChkboxComponent/SingleChkboxComponent\";\r\n  import ButtonComponent from \"@/components/ButtonComponent/ButtonComponent\";\r\n  import CompanySpanTableComponent from \"@/components/CompanySpanTableComponent/CompanySpanTableComponent\";\r\n  import DatePickerComponent from \"@/components/DatePickerComponent/DatePickerComponent\";\r\n  import SingleDatePickerComponent from \"@/components/SingleDatePickerComponent/SingleDatePickerComponent\";\r\n  import {\r\n    axiosRequest,\r\n    getLastMonth,\r\n    getLastDay\r\n  } from \"@/common/common\";\r\n  import {\r\n    commonConfig\r\n  } from \"@/config/commonConfig\";\r\n  export default {\r\n    name: \"companyCheckPrint\",\r\n    getCheckManageByZoneUrl: commonConfig.rootUrl + commonConfig.GetCheckManageByZone, //查询请求接口\",\r\n    components: {\r\n      InputComponent,\r\n      SelectComponent,\r\n      CheckboxComponent,\r\n      SingleChkboxComponent,\r\n      ButtonComponent,\r\n      CompanySpanTableComponent,\r\n      DatePickerComponent,\r\n      SingleDatePickerComponent\r\n    },\r\n    data() {\r\n      return {\r\n        searchType: {\r\n          input: \"input\",\r\n          select: \"select\",\r\n          checkbox: \"checkbox\",\r\n          singleChkbox: \"singleChkbox\",\r\n          datePicker: \"datePicker\",\r\n          singleDatePicker: \"singleDatePicker\", //单个日期组件\r\n          fromTodatePicker: \"fromTodatePicker\",\r\n          treeCheckbox: \"treeCheckbox\"\r\n        },\r\n        selectType: {\r\n          Year: \"Year\",\r\n          Month: \"Month\",\r\n          CheckType: \"CheckType\",\r\n          DatePicker: \"DatePicker\"\r\n        },\r\n        getCheckManageByZoneUrl: commonConfig.rootUrl + commonConfig.GetCheckManageByZone, //查询请求接口\r\n        preSearchType: [\"ZoneId\", \"UnitId\", \"VehicleId\", \"PlatformId\"],\r\n        // 采用手动校正来将返回的结果覆盖到指定的列\r\n        munalMappingTab: {\r\n          InstallRateScore: 0,\r\n          UplineRateScore: 2,\r\n          LocInteRateScore: 3,\r\n          ValidRateScore: 5,\r\n          DriftRateScore: 7,\r\n          AvgSpeedScore: 9,\r\n          AvgFatiTimeScore: 12,\r\n          CheckScore: 15\r\n        },\r\n        tabCtntList: {\r\n          loading: false,\r\n          btnEvents: [{\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-printer\",\r\n              btnId: \"print\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"打印\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            }\r\n          ],\r\n          searchCreteria: [{\r\n              searchType: \"input\",\r\n              labelName: \"企业名称:\",\r\n              labelId: \"UnitId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\",\r\n              compId: \"\"\r\n            },\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\"\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [{\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              labelName: \"车辆类型：\",\r\n              compVal: [],\r\n              options: [{\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            }\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //       value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n          ],\r\n          tabDetail: {\r\n            tabName: \"联网联控系统考核表（道路运输企业）\",\r\n            tabHeader: {\r\n              chkObject: \"考核对象\",\r\n              chkCtnt: \"考核内容\",\r\n              score: \"分值\",\r\n              scoreCreteria: \"计分标准\",\r\n              rate: \"指标比率\",\r\n              getScore: \"得分\",\r\n              amount: \"总分\"\r\n            },\r\n            TabCtnt: [{\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"车辆入网率\",\r\n                score: \"5\",\r\n                scoreCreteria: \"入网率*5；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"车辆入网率\",\r\n                score: \"5\",\r\n                scoreCreteria: \"低于90%不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"车辆上线率\",\r\n                score: \"5\",\r\n                scoreCreteria: \"上线率*5。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"轨迹完整率\",\r\n                score: \"15\",\r\n                scoreCreteria: \"轨迹完整率*15；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"轨迹完整率\",\r\n                score: \"15\",\r\n                scoreCreteria: \"低于70%不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"数据合格率\",\r\n                score: \"15\",\r\n                scoreCreteria: \"数据合格率*15；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"数据合格率\",\r\n                score: \"15\",\r\n                scoreCreteria: \"低于80%不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"卫星定位漂移车辆率\",\r\n                score: \"10\",\r\n                scoreCreteria: \"10-卫星定位漂移车辆率*10；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"卫星定位漂移车辆率\",\r\n                score: \"10\",\r\n                scoreCreteria: \"高于5%不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均车辆超速次数\",\r\n                score: \"20\",\r\n                scoreCreteria: \"小于等于区域平均车辆超速次数的，\" +\r\n                  \"10+〔（区域平均车辆超速次数-企业平均超速次数）\" +\r\n                  \"/区域平均车辆超速次数〕*10；\",\r\n                rate: \"-\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均车辆超速次数\",\r\n                score: \"20\",\r\n                scoreCreteria: \"高于区域平均车辆超速次数且小于区域平均车辆超速次数2倍的，\" +\r\n                  \"〔（区域平均车辆超速次数*2-企业平均超速次数）\" +\r\n                  \"/区域平均车辆超速次数〕*10；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均车辆超速次数\",\r\n                score: \"20\",\r\n                scoreCreteria: \"大于等于区域平均车辆超速次数2倍的，不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均疲劳驾驶时长\",\r\n                score: \"20\",\r\n                scoreCreteria: \"小于等于区域平均车辆超疲劳驾驶时长的，\" +\r\n                  \"10+〔（区域平均车辆疲劳驾驶时长-企业平均疲劳驾驶时长）\" +\r\n                  \"/区域平均车辆疲劳驾驶时长〕*10；\",\r\n                rate: \"-\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均疲劳驾驶时长\",\r\n                score: \"20\",\r\n                scoreCreteria: \"高于区域平均车辆疲劳驾驶时长且小于区域平均车辆疲劳驾驶时长2倍的，\" +\r\n                  \"〔（区域平均车辆疲劳驾驶时长*2-企业平均疲劳驾驶时长）\" +\r\n                  \"/区域平均车辆疲劳驾驶时长〕*10；\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平均疲劳驾驶时长\",\r\n                score: \"20\",\r\n                scoreCreteria: \"大于等于区域平均车辆疲劳驾驶时长2倍的，不得分。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt: \"平台查岗响应率\",\r\n                score: \"10\",\r\n                scoreCreteria: \"平台查岗响应率*10。\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              },\r\n              {\r\n                chkObject: \"道路运输企业\",\r\n                chkCtnt:\r\n                  +\"<div>\" +\r\n                  \"<p>注：</p>\" +\r\n                  \"<p>①平台上传的车辆数据存在车牌号、车牌颜色、日期时间、经度、纬度、速度、方向、海拔、车辆状态、报警状态等错误信息的，数据判断为不合格。具体参照《JT/T 809-2011》4.5.8相关信息数据体结构之规则；</p>\" +\r\n                  \"<p>②超速及次数界定：连续超速时间超过30秒的计为超速，1分钟内连续多次上报超速次数计为1次超速；</p>\" +\r\n                  \"<p>③疲劳驾驶时长界定：白天超过4小时、夜间超过2小时未停车的计为疲劳驾驶时长；</p>\" +\r\n                  \"<p>④数据合理参考范围：日期时间：≤当前时间；经度范围：73°33′E至135°05′E；纬度范围：3°51′N至53°33′N；速度：0至160间；海拔：-200至6500之间；</p>\" +\r\n                  \"<p>⑤各省可结合地方实际情况优化考核内容及分值。</p>\" +\r\n                  \"</div>\",\r\n                score: \"\",\r\n                scoreCreteria: \"\",\r\n                rate: \"\",\r\n                getScore: \"\",\r\n                amount: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      // 处理Input子组件传递上来的最新值\r\n      inputChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n      },\r\n      // 处理select子组件传递上来的最新值\r\n      selectChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n        if (msg.labelId === this.selectType.CheckType) {\r\n          //判断点击的单选框为考核类型\r\n          for (let searchItem in this.tabCtntList.searchCreteria) {\r\n            let searchTemp = this.tabCtntList.searchCreteria[searchItem];\r\n            if (searchTemp.labelId === this.selectType.DatePicker) {\r\n              //找到日期选择器的配置项singleDatePicker\r\n              this.tabCtntList.searchCreteria[searchItem] = this.searchCheckType(\r\n                msg.compVal,\r\n                msg.options\r\n              );\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      // 封装查找选中的考核类型的函数\r\n      searchCheckType: function(value, options) {\r\n        for (let optItem of options) {\r\n          if (optItem.value === value) {\r\n            return optItem;\r\n          }\r\n        }\r\n      },\r\n      // 处理checkbox子组件传递上来的最新值\r\n      checkboxChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n      },\r\n      // 处理singlecheckbox子组件传递上来的最新值\r\n      singleChkboxChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n      },\r\n      // 处理datePicker子组件传递上来的最新值\r\n      datePickerChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n      },\r\n      // 处理datePicker子组件传递上来的最新值\r\n      singleDatePickerChange: function(msg) {\r\n        this.mapNewToSourceData(msg);\r\n      },\r\n      // 将子组件传上来的最新值赋给对应的数据集封装为一个函数\r\n      mapNewToSourceData: function(msg) {\r\n        for (let searchItem of this.tabCtntList.searchCreteria) {\r\n          if (searchItem.labelId === msg.labelId) {\r\n            if (this.preSearchType.indexOf(msg.labelId) >= 0) {\r\n              searchItem.compVal = msg.compVal;\r\n              searchItem.compId = msg.compId;\r\n            } else searchItem.compVal = msg.compVal;\r\n            break;\r\n          }\r\n        }\r\n      },\r\n      handleBtnClick: function(btnId) {\r\n        switch (btnId) {\r\n          case commonConfig.btnEventsId.search:\r\n            this.handleClickSearch(this.tabCtntList.searchCreteria, 1);\r\n            break;\r\n          case commonConfig.btnEventsId.print:\r\n            this.handleClickPrint();\r\n            break;\r\n        }\r\n      },\r\n      //处理子组件触发的查询事件\r\n      handleClickSearch: function(msg, currentPage) {\r\n        const self = this;\r\n        storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n        // 封装函数来组装每一页请求的参数\r\n        const GetCheckManageByZoneParams = self.formPageParams(msg, currentPage);\r\n        self.tabCtntList.loading = true; //加载数据的时候，显示加载数据的logo\r\n        self.tabCtntList.btnEvents[0].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n        self.tabCtntList.btnEvents[1].isDisabled = true; //单击查询按钮后，禁止使用查询和打印按钮，防止重复操作\r\n        axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n          .then(function(response) {\r\n            const companycheckPrintTemp = response.data.TotalList;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.InstallRateScore\r\n              ].rate =\r\n              companycheckPrintTemp.InstallRate;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.InstallRateScore\r\n              ].getScore =\r\n              companycheckPrintTemp.InstallScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.InstallRateScore\r\n              ].amount =\r\n              companycheckPrintTemp.Score;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.UplineRateScore\r\n              ].rate =\r\n              companycheckPrintTemp.UplineRate;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.UplineRateScore\r\n              ].getScore =\r\n              companycheckPrintTemp.UplineScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.LocInteRateScore\r\n              ].rate =\r\n              companycheckPrintTemp.LocInteRate;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.LocInteRateScore\r\n              ].getScore =\r\n              companycheckPrintTemp.LocInteScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.ValidRateScore\r\n              ].rate =\r\n              companycheckPrintTemp.ValidRate;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.ValidRateScore\r\n              ].getScore =\r\n              companycheckPrintTemp.ValidScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.DriftRateScore\r\n              ].rate =\r\n              companycheckPrintTemp.DriftRate;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.DriftRateScore\r\n              ].getScore =\r\n              companycheckPrintTemp.DriftScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.AvgSpeedScore\r\n              ].getScore =\r\n              companycheckPrintTemp.AvgSpeedScore;\r\n            self.tabCtntList.tabDetail.TabCtnt[\r\n                self.munalMappingTab.AvgFatiTimeScore\r\n              ].getScore =\r\n              companycheckPrintTemp.AvgFatiTimeScore;\r\n            self.tabCtntList.loading = false;\r\n            self.tabCtntList.btnEvents[0].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n            self.tabCtntList.btnEvents[1].isDisabled = false; //操作成功后，使能查询和打印按钮\r\n          })\r\n          .catch(function(error) {});\r\n      },\r\n      handleClickPrint: function(msg) {\r\n        //处理子组件触发的打印事件\r\n        // 1. 第一种打印方法行不通，因为需要覆盖原来的页面内容\r\n        // let bdhtml = window.document.body.innerHTML,\r\n        //     sprnstr = '<span startprint=\"\" style=\"display: none;\"></span>',\r\n        //     eprnstr = '<span endprint=\"\" style=\"display: none;\"></span>';\r\n        // let prnhtml=bdhtml.substr(bdhtml.indexOf(sprnstr)+sprnstr.length);\r\n        // prnhtml=prnhtml.substring(0,prnhtml.indexOf(eprnstr));\r\n        // window.document.body.innerHTML=prnhtml;\r\n        // window.print();\r\n        // 2. 第二种方法,采用css2里面的@media print\r\n        window.print();\r\n      },\r\n      formPageParams: function(msg, pageIndex) {\r\n        let nType = 2,\r\n          vehicleId = \"\", //入网明细 - 车牌号\r\n          zoneId = \"\", //入网明细 - 所属地区\r\n          platformId = \"\", //入网明细 - 接入平台\r\n          unitId = \"\", //入网明细 - 运输企业\r\n          endDate = \"\", //入网明细 - 日期止\r\n          carType = 0, //入网明细 - 车辆类型：\r\n          installID = \"\", //入网明细 - GPS入网情况\r\n          upLineFlag = \"\", //上线明细 - 上线情况\r\n          beginDate = \"\", //上线明细 - 事件止\r\n          isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n          checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n          checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n          targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n          pageSize = 10, //默认参数 - 分页大小\r\n          readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n          isIncludeLower = 1,\r\n          sortName = \"\",\r\n          sortOrder = \"\";\r\n        for (let msgItem of msg) {\r\n          if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n          else if (msgItem.labelId === \"DatePicker\") {\r\n            switch (msgItem.type) {\r\n              case \"month\":\r\n                beginDate = msgItem.compVal + \"01\";\r\n                endDate =\r\n                  msgItem.compVal +\r\n                  getLastDay(\r\n                    msgItem.compVal.substr(0, 4),\r\n                    msgItem.compVal.substr(4)\r\n                  );\r\n                break;\r\n              case \"year\":\r\n                beginDate = msgItem.compVal + \"0101\";\r\n                endDate = msgItem.compVal + \"1231\";\r\n                break;\r\n              case \"daterange\":\r\n                beginDate = msgItem.compVal[0]; //时间起\r\n                endDate = msgItem.compVal[1]; //时间止\r\n                break;\r\n              default:\r\n            }\r\n          } else if (msgItem.labelId === \"CarType\") {\r\n            for (let carItem of msgItem.compVal) {\r\n              CarType += carItem;\r\n            }\r\n          } else if (msgItem.labelId === \"UnitId\")\r\n            unitId = Number(msgItem.compId);\r\n        }\r\n        return {\r\n          nType,\r\n          vehicleId, //入网明细 - 车牌号\r\n          zoneId, //入网明细 - 所属地区\r\n          platformId, //入网明细 - 接入平台\r\n          unitId, //入网明细 - 运输企业\r\n          endDate, //入网明细 - 日期止\r\n          carType, //入网明细 - 车辆类型：\r\n          installID, //入网明细 - GPS入网情况\r\n          upLineFlag,\r\n          beginDate,\r\n  \r\n          isOnGuard,\r\n          checkType,\r\n          checkUnitID,\r\n          targetUserId,\r\n  \r\n          pageSize, //默认参数 - 分页大小\r\n          readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n  \r\n          isIncludeLower,\r\n          sortName,\r\n          sortOrder,\r\n          pageIndex\r\n        };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"companyCheckPrint\"},[_c('el-row',{staticClass:\"noprint\"},[_vm._l((_vm.tabCtntList.searchCreteria),function(searchItem,searchKey){return (searchItem.searchType === _vm.searchType.input)?_c('input-component',{key:searchKey,attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"compId\":searchItem.compId,\"labelId\":searchItem.labelId},on:{\"inputChange\":_vm.inputChange}}):(searchItem.searchType === _vm.searchType.select)?_c('select-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"selectChange\":_vm.selectChange}}):(searchItem.searchType === _vm.searchType.checkbox)?_c('checkbox-component',{attrs:{\"options\":searchItem.options,\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"checkboxChange\":_vm.checkboxChange}}):(searchItem.searchType === _vm.searchType.singleChkbox)?_c('single-chkbox-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"singleChkboxChange\":_vm.singleChkboxChange}}):(searchItem.searchType === _vm.searchType.singleDatePicker)?_c('single-date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId,\"type\":searchItem.type,\"placeholder\":searchItem.placeholder,\"format\":searchItem.format,\"valueformat\":searchItem.valueformat},on:{\"singleDatePickerChange\":_vm.singleDatePickerChange}}):(searchItem.searchType === _vm.searchType.fromTodatePicker)?_c('date-picker-component',{attrs:{\"labelName\":searchItem.labelName,\"compVal\":searchItem.compVal,\"labelId\":searchItem.labelId},on:{\"datePickerChange\":_vm.datePickerChange}}):_vm._e()}),_vm._v(\" \"),_c('el-row',_vm._l((_vm.tabCtntList.btnEvents),function(btnItem,btnKey){return _c('el-button',{key:btnKey,staticClass:\"btn-com\",attrs:{\"type\":\"primary\",\"icon\":btnItem.iconName,\"disabled\":btnItem.isDisabled},on:{\"click\":function($event){_vm.handleBtnClick(btnItem.btnId)}}},[_vm._v(_vm._s(btnItem.btnName))])}))],2),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tabCtntList.loading),expression:\"tabCtntList.loading\"}],staticClass:\"print-part\"},[_c('company-span-table-component',{attrs:{\"tabName\":_vm.tabCtntList.tabDetail.tabName,\"TabCtnt\":_vm.tabCtntList.tabDetail.TabCtnt,\"tabHeader\":_vm.tabCtntList.tabDetail.tabHeader}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c58ed11\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7c58ed11\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanyCheckPrint.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CompanyCheckPrint.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7c58ed11\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CompanyCheckPrint.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/CompanyCheckPrint.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"ZoneCheckRank\">\r\n    <multi-level-table-component \r\n    :activeName=\"activeName\" \r\n    :tabCtntList=\"tabCtntList\" \r\n    class=\"zone-check-multilevel\" \r\n    v-on:handleClickSearch=\"handleClickSearch\"\r\n    v-on:handleClickExpData=\"handleClickExpData\"\r\n    v-on:handleCurrentChange=\"handleCurrentChange\"></multi-level-table-component>\r\n    <p class=\"check-footer-p\">\r\n      注：1、仅针对两客一危进行统计；总分能按升序、降序排列，默认按降序排列；<br/> &emsp;&emsp;2、所属地区默认为企业所属地区，若需按车辆所属地区进行查询，需在 基本信息-用户管理-区域配置 进行设置。\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<style src=\"./checkManageRouter.css\" type=\"text/css\">\r\n</style>\r\n\r\n<script>\r\nimport MultiLevelTableComponent from \"@/components/MultiLevelTableComponent/MultiLevelTableComponent\";\r\nimport { axiosRequest, getLastMonth, getLastDay } from \"@/common/common\";\r\nimport { commonConfig } from \"@/config/commonConfig\";\r\nexport default {\r\n  name: \"ZoneCheckRank\",\r\n  components: {\r\n    MultiLevelTableComponent\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"report_zoneCheckRank_table\",\r\n      activeNameIndex: 0,\r\n      getCheckManageByZoneUrl:\r\n        commonConfig.rootUrl + commonConfig.GetCheckManageByZone,\r\n      exportCheckManageDataUrl:\r\n        commonConfig.rootUrl + commonConfig.ExportCheckManageData,\r\n      // 每一大列的满分得分\r\n      columnFullScore: {\r\n        rwl: 5,\r\n        sxl: 10,\r\n        wxpyl: 15,\r\n        gjwzl: 40,\r\n        sjhgl: 30,\r\n        pjcscs: 0,\r\n        pjpjsc: 0\r\n      },\r\n      // 每一列的类型，目前已经有纯文本和router-link\r\n      columnType: {\r\n        text: \"text\",\r\n        router_link: \"router_link\"\r\n      },\r\n      // 存储每10行的数据\r\n      zoneCheckSourceData: [],\r\n      // 存储合计的数据\r\n      countData: [],\r\n      // tabName作为标识符\r\n      tabNameObj: {\r\n        firTab: {\r\n          tabLabel: \"地区考核排名\",\r\n          tabName: \"report_zoneCheckRank_table\", //将作为标识符来区分\r\n          nType: 1 //根据重构前的请求，可以看到nType 为1\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tabCtntList: function() {\r\n      return [\r\n        {\r\n          tabLabel: this.tabNameObj.firTab.tabLabel,\r\n          tabName: this.tabNameObj.firTab.tabName, //将作为标识符来区分\r\n          currentPage: 1, //当前页数\r\n          total: 0, //总条数\r\n          loading: false,\r\n          btnEvents: [\r\n            {\r\n              iconName: \"el-icon-search\",\r\n              btnId: \"search\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"查询\",\r\n              isDisabled: false //控制查询数据按钮初始状态为enabled\r\n            },\r\n            {\r\n              iconName: \"el-icon-download\",\r\n              btnId: \"export_data\", //该ID主要是用来判断在子组件中出发了哪一个按钮\r\n              btnName: \"导出数据\",\r\n              isDisabled: true //控制导出数据按钮初始状态为disabled\r\n            }\r\n          ],\r\n          searchCreteria: [\r\n            {\r\n              searchType: \"input\",\r\n              labelName: \"所属地区:\",\r\n              labelId: \"ZoneId\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"河北省\",\r\n              compId: \"43000000\" // 在需要使用预搜索的输入框需要compId字段\r\n            },\r\n            {\r\n              searchType: \"select\",\r\n              labelName: \"考核类型:\",\r\n              labelId: \"CheckType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: 1, //默认选择月度考核\r\n              options: [\r\n                {\r\n                  value: 1,\r\n                  label: \"月度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelName: \"月份\",\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: getLastMonth(),\r\n                  type: \"month\",\r\n                  placeholder: \"请选择月份\",\r\n                  format: \"yyyy-MM\",\r\n                  valueformat: \"yyyyMM\"\r\n                },\r\n                {\r\n                  value: 2,\r\n                  label: \"年度考核\",\r\n                  searchType: \"singleDatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"年份\",\r\n                  type: \"year\",\r\n                  placeholder: \"请选择年份\",\r\n                  format: \"yyyy\",\r\n                  valueformat: \"yyyy\"\r\n                },\r\n                {\r\n                  value: 3,\r\n                  label: \"当月实时考核\",\r\n                  searchType: \"fromTodatePicker\", //月份选择器和年份选择器为同一组件，只是根据不同的参数来改变展示方式\r\n                  labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n                  compVal: \"\",\r\n                  labelName: \"时间起 - 时间至\",\r\n                  type: \"daterange\",\r\n                  placeholder: \"请选择日期起 - 日期至\",\r\n                  format: \"yyyy-MM-dd\",\r\n                  valueformat: \"yyyyMMdd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              searchType: \"singleDatePicker\",\r\n              labelName: \"月份:\",\r\n              labelId: \"DatePicker\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: getLastMonth(),\r\n              type: \"month\",\r\n              placeholder: \"请选择月份\",\r\n              format: \"yyyy-MM\",\r\n              valueformat: \"yyyyMM\"\r\n            },\r\n            {\r\n              searchType: \"checkbox\",\r\n              labelName: \"车辆类型：\",\r\n              labelId: \"CarType\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: [],\r\n              options: [\r\n                {\r\n                  value: 0x0001,\r\n                  label: \"三类以上班线客车\"\r\n                },\r\n                {\r\n                  value: 0x0004,\r\n                  label: \"旅游客车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                },\r\n                {\r\n                  value: 0x0080, // this value is customized by Perry,not securate\r\n                  label: \"危险品运输车\"\r\n                },\r\n                {\r\n                  value: 0x100000,\r\n                  label: \"包车客车\"\r\n                }\r\n              ]\r\n            },\r\n            // {\r\n            //   searchType: \"checkbox\",\r\n            //   labelName: \"车辆状态:\",\r\n            //   labelId: 'GovStatus', //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n            //   compVal: [],\r\n            //   options: [{\r\n            //       value: 0x2,\r\n            //       label: \"营运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x4,\r\n            //       label: \"停运\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x10,\r\n            //       label: \"转出\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x40,\r\n            //       label: \"歇业\"\r\n            //     },\r\n            //     {\r\n            //       value: 0x100,\r\n            //       label: \"锁定\"\r\n            //     }\r\n            //   ]\r\n            // },\r\n            {\r\n              searchType: \"singleChkbox\",\r\n              labelName: \"是否包含下级\",\r\n              labelId: \"IsIncludeLower\", //该ID主要是用来判断在子组件中出发了哪一种个子组件\r\n              compVal: \"\"\r\n            }\r\n          ],\r\n          tabHeader: [\r\n            {\r\n              headerKey: \"sybid\",\r\n              headerVal: \"序号\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"ZName\",\r\n              headerVal: \"运管机构\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              labelName: \"车辆入网率得分（\" + this.columnFullScore.rwl + \"）\",\r\n              // subHeaders: {\r\n              //   AllInstallCount: \"应入网\",\r\n              //   InstallCount: \"已入网\",\r\n              //   InstallRate: \"车辆入网率\",\r\n              //   InstallScore: \"得分\"\r\n              // },\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllInstallCount\",\r\n                  headerVal: \"应入网\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InstallCount\",\r\n                  headerVal: \"已入网\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InstallRate\",\r\n                  headerVal: \"车辆入网率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"InstallScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"车辆上线率得分（\" + this.columnFullScore.sxl + \"）\",\r\n              // subHeaders: {\r\n              //   InnetCount: \"应上线\",\r\n              //   UplineCount: \"已上线\",\r\n              //   UplineRate: \"车辆上线率\",\r\n              //   UplineScore: \"得分\"\r\n              // },\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"InnetCount\",\r\n                  headerVal: \"应上线\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineCount\",\r\n                  headerVal: \"已上线\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"UplineRate\",\r\n                  headerVal: \"车辆上线率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"UplineScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName:\r\n                \"卫星定位漂移车辆率得分（\" + this.columnFullScore.wxpyl + \"）\",\r\n              // subHeaders: {\r\n              //   DriftInnetCount: \"上线车辆数\",\r\n              //   DriftCount: \"漂移车辆数\",\r\n              //   DriftRate: \"卫星定位漂移车辆率\",\r\n              //   DriftScore: \"得分\"\r\n              // },\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"DriftInnetCount\",\r\n                  headerVal: \"上线车辆数\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftCount\",\r\n                  headerVal: \"漂移车辆数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"DriftRate\",\r\n                  headerVal: \"卫星定位漂移车辆率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"DriftScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"轨迹完整率得分（\" + this.columnFullScore.gjwzl + \"）\",\r\n              // subHeaders: {\r\n              //   AllDistance: \"总里程\",\r\n              //   InteDistance: \"轨迹完整里程\",\r\n              //   LocInteRate: \"轨迹完整率\",\r\n              //   LocInteScore: \"得分\"\r\n              // },\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllDistance\",\r\n                  headerVal: \"总里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"InteDistance\",\r\n                  headerVal: \"轨迹完整里程\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"LocInteRate\",\r\n                  headerVal: \"轨迹完整率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"LocInteScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              labelName: \"数据合格率得分（\" + this.columnFullScore.sjhgl + \"）\",\r\n              // subHeaders: {\r\n              //   AllLoc: \"总条数\",\r\n              //   ValidLoc: \"合格条数\",\r\n              //   ValidRate: \"数据合格率\",\r\n              //   ValidScore: \"得分\"\r\n              // },\r\n              subHeaders: [\r\n                {\r\n                  headerKey: \"AllLoc\",\r\n                  headerVal: \"总条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidLoc\",\r\n                  headerVal: \"合格条数\",\r\n                  columnType: this.columnType.router_link,\r\n                  router_link: commonConfig.routerConst.ProviderCheckDetail\r\n                },\r\n                {\r\n                  headerKey: \"ValidRate\",\r\n                  headerVal: \"数据合格率\",\r\n                  columnType: this.columnType.text\r\n                },\r\n                {\r\n                  headerKey: \"ValidScore\",\r\n                  headerVal: \"得分\",\r\n                  columnType: this.columnType.text\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              headerKey: \"Score\",\r\n              headerVal: \"总分\",\r\n              subHeaders: []\r\n            },\r\n            {\r\n              headerKey: \"LinkRelativeRatio\",\r\n              headerVal: \"环比增加\",\r\n              subHeaders: []\r\n            }\r\n          ],\r\n          TabCtnt: [\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // },\r\n            // {\r\n            //   ZName: \"2016-05-03\",\r\n            //   AllInstallCount: \"王小虎\",\r\n            //   InstallCount: \"上海\",\r\n            //   InstallRate: \"普陀区\",\r\n            //   InstallScore: \"上海市普陀区金沙江路 1518 弄\",\r\n            //   InnetCount: 200333\r\n            // }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    //处理子组件触发的查询事件\r\n    handleClickSearch: function(msg) {\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage\r\n      );\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //加载数据的时候，显示加载数据的logo\r\n      // 清空当前数据的集合\r\n      self.zoneCheckSourceData = [];\r\n      axiosRequest.axiosGet(this.getCheckManageByZoneUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          const zoneCheckRankTemp = response.data.DetailList;\r\n          for (let zoneCheckItem of zoneCheckRankTemp) {\r\n            self.zoneCheckSourceData.push(\r\n              self.pushSourceData(zoneCheckItem, msg.activeName)\r\n            );\r\n          }\r\n          // 加上合计这一行\r\n          self.countData = self.pushSourceData(\r\n            response.data.TotalList,\r\n            msg.activeName\r\n          );\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt =\r\n            self.zoneCheckSourceData;\r\n          self.tabCtntList[self.activeNameIndex].TabCtnt.push(self.countData);\r\n          self.tabCtntList[self.activeNameIndex].total =\r\n            response.data.CountTotal;\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n          self.tabCtntList[\r\n            self.activeNameIndex\r\n          ].btnEvents[1].isDisabled = false; //单击查询按钮后，使能导出数据、打印按钮\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    // 将插入表的数据组装为一个函数\r\n    pushSourceData: function(zoneCheckItem, activeName) {\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          return {\r\n            sybid: zoneCheckItem.sybid,\r\n            ZName: zoneCheckItem.ZName,\r\n            AllInstallCount: zoneCheckItem.AllInstallCount,\r\n            InstallCount: zoneCheckItem.InstallCount,\r\n            InstallRate: zoneCheckItem.InstallRate,\r\n            InstallScore: zoneCheckItem.InstallScore,\r\n            InnetCount: zoneCheckItem.InnetCount,\r\n            UplineCount: zoneCheckItem.UplineCount,\r\n            UplineRate: zoneCheckItem.UplineRate,\r\n            UplineScore: zoneCheckItem.UplineScore,\r\n            DriftInnetCount: zoneCheckItem.DriftInnetCount,\r\n            DriftCount: zoneCheckItem.DriftCount,\r\n            DriftRate: zoneCheckItem.DriftRate,\r\n            DriftScore: zoneCheckItem.DriftRate,\r\n            AllDistance: zoneCheckItem.AllDistance,\r\n            InteDistance: zoneCheckItem.InteDistance,\r\n            LocInteRate: zoneCheckItem.LocInteRate,\r\n            LocInteScore: zoneCheckItem.LocInteScore,\r\n            AllLoc: zoneCheckItem.AllLoc,\r\n            ValidLoc: zoneCheckItem.ValidLoc,\r\n            ValidRate: zoneCheckItem.ValidRate,\r\n            ValidScore: zoneCheckItem.ValidScore,\r\n            Score: zoneCheckItem.Score,\r\n            LinkRelativeRatio: zoneCheckItem.LinkRelativeRatio\r\n          };\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    // 注释人：向浩\r\n    // 注释时间：2018-06-12\r\n    // 注释原因：实现导出数据功能\r\n    handleClickExpData: function(msg) {\r\n      //处理子组件触发的导出数据事件\r\n      const self = this;\r\n      storageOperation.setItem(commonConfig.ctrlId, ''); //将需要请求的ctrlId在每次请求的时候更新到sessionStorage中，以便于在发请求的时候需要带上\r\n      self.tabCtntList[self.activeNameIndex].loading = true; //下载数据的时候，显示正在下载数据的logo\r\n      // 封装函数来组装每一页请求的参数\r\n      const GetCheckManageByZoneParams = self.formPageParams(\r\n        msg.searchCreteria,\r\n        msg.currentPage,\r\n        msg.activeName,\r\n        msg.isSplitPage //是否分页 - 导出数据\r\n      );\r\n      axiosRequest.axiosGet(this.exportCheckManageDataUrl, GetCheckManageByZoneParams)\r\n        .then(function(response) {\r\n          self.downloadServerFile(decodeURIComponent(response.data));\r\n          // 下载完成后，隐藏正在下载的logo\r\n          self.tabCtntList[self.activeNameIndex].loading = false;\r\n        })\r\n        .catch(function(error) {});\r\n    },\r\n    formPageParams: function(msg, pageIndex, activeName, isSplitPage) {\r\n      let nType = 1,\r\n        vehicleId = \"\", //入网明细 - 车牌号\r\n        zoneId = \"\", //入网明细 - 所属地区\r\n        platformId = \"\", //入网明细 - 接入平台\r\n        unitId = \"\", //入网明细 - 运输企业\r\n        endDate = \"\", //入网明细 - 日期止\r\n        carType = 0, //入网明细 - 车辆类型：\r\n        installID = \"\", //入网明细 - GPS入网情况\r\n        upLineFlag = \"\", //上线明细 - 上线情况\r\n        beginDate = \"\", //上线明细 - 事件止\r\n        isOnGuard = \"\", //平台查岗响应率明细 - 是否在岗\r\n        checkType = \"\", //平台查岗响应率明细 - 查岗方式\r\n        checkUnitID = \"\", //平台查岗响应率明细 - 查岗机构\r\n        targetUserId = \"\", //平台查岗响应率明细 - 查岗人\r\n        pageSize = 10, //默认参数 - 分页大小\r\n        readPage = \"\", //默认参数 - 目前还不清楚这个参数的作用\r\n        isIncludeLower = 1,\r\n        sortName = \"\",\r\n        sortOrder = \"\";\r\n      switch (activeName) {\r\n        case this.tabNameObj.firTab.tabName:\r\n          this.activeNameIndex = 0;\r\n          nType = this.tabNameObj.firTab.nType;\r\n          for (let msgItem of msg) {\r\n            if (msgItem.labelId === \"ZoneId\") zoneId = msgItem.compId;\r\n            else if (msgItem.labelId === \"DatePicker\") {\r\n              switch (msgItem.type) {\r\n                case \"month\":\r\n                  beginDate = msgItem.compVal + \"01\";\r\n                  endDate =\r\n                    msgItem.compVal +\r\n                    getLastDay(\r\n                      msgItem.compVal.substr(0, 4),\r\n                      msgItem.compVal.substr(4)\r\n                    );\r\n                  break;\r\n                case \"year\":\r\n                  beginDate = msgItem.compVal + \"0101\";\r\n                  endDate = msgItem.compVal + \"1231\";\r\n                  break;\r\n                case \"daterange\":\r\n                  beginDate = msgItem.compVal[0]; //时间起\r\n                  endDate = msgItem.compVal[1]; //时间止\r\n                  break;\r\n                default:\r\n              }\r\n            } else if (msgItem.labelId === \"CarType\") {\r\n              for (let carItem of msgItem.compVal) {\r\n                carType += carItem;\r\n              }\r\n            } else if (msgItem.labelId === \"IsIncludeLower\")\r\n              isIncludeLower = Number(msgItem.compVal);\r\n          }\r\n        default:\r\n      }\r\n      return {\r\n        nType,\r\n        vehicleId, //入网明细 - 车牌号\r\n        zoneId, //入网明细 - 所属地区\r\n        platformId, //入网明细 - 接入平台\r\n        unitId, //入网明细 - 运输企业\r\n        endDate, //入网明细 - 日期止\r\n        carType, //入网明细 - 车辆类型：\r\n        installID, //入网明细 - GPS入网情况\r\n        upLineFlag,\r\n        beginDate,\r\n\r\n        isOnGuard,\r\n        checkType,\r\n        checkUnitID,\r\n        targetUserId,\r\n\r\n        isSplitPage, //默认参数 - 是否分页\r\n        pageSize, //默认参数 - 分页大小\r\n        readPage, //默认参数 - 目前还不清楚这个参数的作用\r\n\r\n        isIncludeLower,\r\n        sortName,\r\n        sortOrder,\r\n        pageIndex\r\n      };\r\n    },\r\n    // 处理子组件出发的换页数据加载\r\n    handleCurrentChange: function(msg) {\r\n      this.handleClickSearch(msg);\r\n    },\r\n    // 封装函数来通过HTML5的a标签来下载服务器生成的报表文件\r\n    downloadServerFile: function(url) {\r\n      // 使用HTML5的 <a download></a>来下载服务器文件\r\n      let a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/CheckManage/CheckManageRouter/ZoneCheckRank.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ZoneCheckRank\"},[_c('multi-level-table-component',{staticClass:\"zone-check-multilevel\",attrs:{\"activeName\":_vm.activeName,\"tabCtntList\":_vm.tabCtntList},on:{\"handleClickSearch\":_vm.handleClickSearch,\"handleClickExpData\":_vm.handleClickExpData,\"handleCurrentChange\":_vm.handleCurrentChange}}),_vm._v(\" \"),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"check-footer-p\"},[_vm._v(\"\\n    注：1、仅针对两客一危进行统计；总分能按升序、降序排列，默认按降序排列；\"),_c('br'),_vm._v(\"   2、所属地区默认为企业所属地区，若需按车辆所属地区进行查询，需在 基本信息-用户管理-区域配置 进行设置。\\n  \")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5f3097be\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/CheckManage/CheckManageRouter/ZoneCheckRank.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5f3097be\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!./checkManageRouter.css\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckRank.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ZoneCheckRank.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5f3097be\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ZoneCheckRank.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/CheckManage/CheckManageRouter/ZoneCheckRank.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}